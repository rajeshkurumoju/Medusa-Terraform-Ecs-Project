import { resolve } from "path"
import { RoutesLoader } from "../routes-loader"

describe("Routes loader", () => {
  it("should load routes from the filesystem", async () => {
    const BASE_DIR = resolve(__dirname, "../__fixtures__/routers")
    const loader = new RoutesLoader()
    await loader.scanDir(BASE_DIR)

    expect(loader.getRoutes()).toMatchInlineSnapshot(`
      [
        {
          "absolutePath": "${BASE_DIR}/admin/fail/route.ts",
          "handler": [Function],
          "isRoute": true,
          "matcher": "/admin/fail",
          "method": "GET",
          "optedOutOfAuth": false,
          "relativePath": "/admin/fail/route.ts",
          "shouldAppendAdminCors": true,
          "shouldAppendAuthCors": false,
          "shouldAppendStoreCors": false,
        },
        {
          "absolutePath": "${BASE_DIR}/admin/orders/[id]/route.ts",
          "handler": [Function],
          "isRoute": true,
          "matcher": "/admin/orders/:id",
          "method": "GET",
          "optedOutOfAuth": false,
          "relativePath": "/admin/orders/[id]/route.ts",
          "shouldAppendAdminCors": true,
          "shouldAppendAuthCors": false,
          "shouldAppendStoreCors": false,
        },
        {
          "absolutePath": "${BASE_DIR}/admin/orders/[id]/route.ts",
          "handler": [Function],
          "isRoute": true,
          "matcher": "/admin/orders/:id",
          "method": "POST",
          "optedOutOfAuth": false,
          "relativePath": "/admin/orders/[id]/route.ts",
          "shouldAppendAdminCors": true,
          "shouldAppendAuthCors": false,
          "shouldAppendStoreCors": false,
        },
        {
          "absolutePath": "${BASE_DIR}/admin/orders/route.ts",
          "handler": [Function],
          "isRoute": true,
          "matcher": "/admin/orders",
          "method": "GET",
          "optedOutOfAuth": false,
          "relativePath": "/admin/orders/route.ts",
          "shouldAppendAdminCors": true,
          "shouldAppendAuthCors": false,
          "shouldAppendStoreCors": false,
        },
        {
          "absolutePath": "${BASE_DIR}/admin/products/[id]/route.ts",
          "handler": [Function],
          "isRoute": true,
          "matcher": "/admin/products/:id",
          "method": "GET",
          "optedOutOfAuth": false,
          "relativePath": "/admin/products/[id]/route.ts",
          "shouldAppendAdminCors": true,
          "shouldAppendAuthCors": false,
          "shouldAppendStoreCors": false,
        },
        {
          "absolutePath": "${BASE_DIR}/admin/products/route.ts",
          "handler": [Function],
          "isRoute": true,
          "matcher": "/admin/products",
          "method": "DELETE",
          "optedOutOfAuth": false,
          "relativePath": "/admin/products/route.ts",
          "shouldAppendAdminCors": true,
          "shouldAppendAuthCors": false,
          "shouldAppendStoreCors": false,
        },
        {
          "absolutePath": "${BASE_DIR}/admin/products/route.ts",
          "handler": [Function],
          "isRoute": true,
          "matcher": "/admin/products",
          "method": "GET",
          "optedOutOfAuth": false,
          "relativePath": "/admin/products/route.ts",
          "shouldAppendAdminCors": true,
          "shouldAppendAuthCors": false,
          "shouldAppendStoreCors": false,
        },
        {
          "absolutePath": "${BASE_DIR}/admin/products/route.ts",
          "handler": [Function],
          "isRoute": true,
          "matcher": "/admin/products",
          "method": "HEAD",
          "optedOutOfAuth": false,
          "relativePath": "/admin/products/route.ts",
          "shouldAppendAdminCors": true,
          "shouldAppendAuthCors": false,
          "shouldAppendStoreCors": false,
        },
        {
          "absolutePath": "${BASE_DIR}/admin/products/route.ts",
          "handler": [Function],
          "isRoute": true,
          "matcher": "/admin/products",
          "method": "OPTIONS",
          "optedOutOfAuth": false,
          "relativePath": "/admin/products/route.ts",
          "shouldAppendAdminCors": true,
          "shouldAppendAuthCors": false,
          "shouldAppendStoreCors": false,
        },
        {
          "absolutePath": "${BASE_DIR}/admin/products/route.ts",
          "handler": [Function],
          "isRoute": true,
          "matcher": "/admin/products",
          "method": "PATCH",
          "optedOutOfAuth": false,
          "relativePath": "/admin/products/route.ts",
          "shouldAppendAdminCors": true,
          "shouldAppendAuthCors": false,
          "shouldAppendStoreCors": false,
        },
        {
          "absolutePath": "${BASE_DIR}/admin/products/route.ts",
          "handler": [Function],
          "isRoute": true,
          "matcher": "/admin/products",
          "method": "POST",
          "optedOutOfAuth": false,
          "relativePath": "/admin/products/route.ts",
          "shouldAppendAdminCors": true,
          "shouldAppendAuthCors": false,
          "shouldAppendStoreCors": false,
        },
        {
          "absolutePath": "${BASE_DIR}/admin/products/route.ts",
          "handler": [Function],
          "isRoute": true,
          "matcher": "/admin/products",
          "method": "PUT",
          "optedOutOfAuth": false,
          "relativePath": "/admin/products/route.ts",
          "shouldAppendAdminCors": true,
          "shouldAppendAuthCors": false,
          "shouldAppendStoreCors": false,
        },
        {
          "absolutePath": "${BASE_DIR}/admin/route.ts",
          "handler": [Function],
          "isRoute": true,
          "matcher": "/admin",
          "method": "GET",
          "optedOutOfAuth": false,
          "relativePath": "/admin/route.ts",
          "shouldAppendAdminCors": true,
          "shouldAppendAuthCors": false,
          "shouldAppendStoreCors": false,
        },
        {
          "absolutePath": "${BASE_DIR}/admin/route.ts",
          "handler": [Function],
          "isRoute": true,
          "matcher": "/admin",
          "method": "POST",
          "optedOutOfAuth": false,
          "relativePath": "/admin/route.ts",
          "shouldAppendAdminCors": true,
          "shouldAppendAuthCors": false,
          "shouldAppendStoreCors": false,
        },
        {
          "absolutePath": "${BASE_DIR}/customers/[customer_id]/orders/[order_id]/route.ts",
          "handler": [Function],
          "isRoute": true,
          "matcher": "/customers/:customer_id/orders/:order_id",
          "method": "GET",
          "optedOutOfAuth": false,
          "relativePath": "/customers/[customer_id]/orders/[order_id]/route.ts",
          "shouldAppendAdminCors": false,
          "shouldAppendAuthCors": false,
          "shouldAppendStoreCors": false,
        },
        {
          "absolutePath": "${BASE_DIR}/customers/route.ts",
          "handler": [Function],
          "isRoute": true,
          "matcher": "/customers",
          "method": "GET",
          "optedOutOfAuth": false,
          "relativePath": "/customers/route.ts",
          "shouldAppendAdminCors": false,
          "shouldAppendAuthCors": false,
          "shouldAppendStoreCors": false,
        },
        {
          "absolutePath": "${BASE_DIR}/store/custom/route.ts",
          "handler": [Function],
          "isRoute": true,
          "matcher": "/store/custom",
          "method": "GET",
          "optedOutOfAuth": false,
          "relativePath": "/store/custom/route.ts",
          "shouldAppendAdminCors": false,
          "shouldAppendAuthCors": false,
          "shouldAppendStoreCors": true,
        },
      ]
    `)
  })

  it("should override existing routes when duplicates are found while scanning additional directories", async () => {
    const BASE_DIR = resolve(__dirname, "../__fixtures__/routers")
    const BASE_DIR_2 = resolve(
      __dirname,
      "../__fixtures__/routers-with-duplicates"
    )
    const loader = new RoutesLoader()
    await loader.scanDir(BASE_DIR)
    await loader.scanDir(BASE_DIR_2)

    expect(loader.getRoutes()).toMatchInlineSnapshot(`
      [
        {
          "absolutePath": "${BASE_DIR}/admin/fail/route.ts",
          "handler": [Function],
          "isRoute": true,
          "matcher": "/admin/fail",
          "method": "GET",
          "optedOutOfAuth": false,
          "relativePath": "/admin/fail/route.ts",
          "shouldAppendAdminCors": true,
          "shouldAppendAuthCors": false,
          "shouldAppendStoreCors": false,
        },
        {
          "absolutePath": "${BASE_DIR}/admin/orders/[id]/route.ts",
          "handler": [Function],
          "isRoute": true,
          "matcher": "/admin/orders/:id",
          "method": "GET",
          "optedOutOfAuth": false,
          "relativePath": "/admin/orders/[id]/route.ts",
          "shouldAppendAdminCors": true,
          "shouldAppendAuthCors": false,
          "shouldAppendStoreCors": false,
        },
        {
          "absolutePath": "${BASE_DIR}/admin/orders/[id]/route.ts",
          "handler": [Function],
          "isRoute": true,
          "matcher": "/admin/orders/:id",
          "method": "POST",
          "optedOutOfAuth": false,
          "relativePath": "/admin/orders/[id]/route.ts",
          "shouldAppendAdminCors": true,
          "shouldAppendAuthCors": false,
          "shouldAppendStoreCors": false,
        },
        {
          "absolutePath": "${BASE_DIR}/admin/orders/route.ts",
          "handler": [Function],
          "isRoute": true,
          "matcher": "/admin/orders",
          "method": "GET",
          "optedOutOfAuth": false,
          "relativePath": "/admin/orders/route.ts",
          "shouldAppendAdminCors": true,
          "shouldAppendAuthCors": false,
          "shouldAppendStoreCors": false,
        },
        {
          "absolutePath": "${BASE_DIR_2}/admin/products/[id]/route.ts",
          "handler": [Function],
          "isRoute": true,
          "matcher": "/admin/products/:id",
          "method": "GET",
          "optedOutOfAuth": true,
          "relativePath": "/admin/products/[id]/route.ts",
          "shouldAppendAdminCors": true,
          "shouldAppendAuthCors": false,
          "shouldAppendStoreCors": false,
        },
        {
          "absolutePath": "${BASE_DIR}/admin/products/route.ts",
          "handler": [Function],
          "isRoute": true,
          "matcher": "/admin/products",
          "method": "DELETE",
          "optedOutOfAuth": false,
          "relativePath": "/admin/products/route.ts",
          "shouldAppendAdminCors": true,
          "shouldAppendAuthCors": false,
          "shouldAppendStoreCors": false,
        },
        {
          "absolutePath": "${BASE_DIR_2}/admin/products/route.ts",
          "handler": [Function],
          "isRoute": true,
          "matcher": "/admin/products",
          "method": "GET",
          "optedOutOfAuth": true,
          "relativePath": "/admin/products/route.ts",
          "shouldAppendAdminCors": true,
          "shouldAppendAuthCors": false,
          "shouldAppendStoreCors": false,
        },
        {
          "absolutePath": "${BASE_DIR}/admin/products/route.ts",
          "handler": [Function],
          "isRoute": true,
          "matcher": "/admin/products",
          "method": "HEAD",
          "optedOutOfAuth": false,
          "relativePath": "/admin/products/route.ts",
          "shouldAppendAdminCors": true,
          "shouldAppendAuthCors": false,
          "shouldAppendStoreCors": false,
        },
        {
          "absolutePath": "${BASE_DIR}/admin/products/route.ts",
          "handler": [Function],
          "isRoute": true,
          "matcher": "/admin/products",
          "method": "OPTIONS",
          "optedOutOfAuth": false,
          "relativePath": "/admin/products/route.ts",
          "shouldAppendAdminCors": true,
          "shouldAppendAuthCors": false,
          "shouldAppendStoreCors": false,
        },
        {
          "absolutePath": "${BASE_DIR}/admin/products/route.ts",
          "handler": [Function],
          "isRoute": true,
          "matcher": "/admin/products",
          "method": "PATCH",
          "optedOutOfAuth": false,
          "relativePath": "/admin/products/route.ts",
          "shouldAppendAdminCors": true,
          "shouldAppendAuthCors": false,
          "shouldAppendStoreCors": false,
        },
        {
          "absolutePath": "${BASE_DIR_2}/admin/products/route.ts",
          "handler": [Function],
          "isRoute": true,
          "matcher": "/admin/products",
          "method": "POST",
          "optedOutOfAuth": true,
          "relativePath": "/admin/products/route.ts",
          "shouldAppendAdminCors": true,
          "shouldAppendAuthCors": false,
          "shouldAppendStoreCors": false,
        },
        {
          "absolutePath": "${BASE_DIR}/admin/products/route.ts",
          "handler": [Function],
          "isRoute": true,
          "matcher": "/admin/products",
          "method": "PUT",
          "optedOutOfAuth": false,
          "relativePath": "/admin/products/route.ts",
          "shouldAppendAdminCors": true,
          "shouldAppendAuthCors": false,
          "shouldAppendStoreCors": false,
        },
        {
          "absolutePath": "${BASE_DIR}/admin/route.ts",
          "handler": [Function],
          "isRoute": true,
          "matcher": "/admin",
          "method": "GET",
          "optedOutOfAuth": false,
          "relativePath": "/admin/route.ts",
          "shouldAppendAdminCors": true,
          "shouldAppendAuthCors": false,
          "shouldAppendStoreCors": false,
        },
        {
          "absolutePath": "${BASE_DIR}/admin/route.ts",
          "handler": [Function],
          "isRoute": true,
          "matcher": "/admin",
          "method": "POST",
          "optedOutOfAuth": false,
          "relativePath": "/admin/route.ts",
          "shouldAppendAdminCors": true,
          "shouldAppendAuthCors": false,
          "shouldAppendStoreCors": false,
        },
        {
          "absolutePath": "${BASE_DIR}/customers/[customer_id]/orders/[order_id]/route.ts",
          "handler": [Function],
          "isRoute": true,
          "matcher": "/customers/:customer_id/orders/:order_id",
          "method": "GET",
          "optedOutOfAuth": false,
          "relativePath": "/customers/[customer_id]/orders/[order_id]/route.ts",
          "shouldAppendAdminCors": false,
          "shouldAppendAuthCors": false,
          "shouldAppendStoreCors": false,
        },
        {
          "absolutePath": "${BASE_DIR}/customers/route.ts",
          "handler": [Function],
          "isRoute": true,
          "matcher": "/customers",
          "method": "GET",
          "optedOutOfAuth": false,
          "relativePath": "/customers/route.ts",
          "shouldAppendAdminCors": false,
          "shouldAppendAuthCors": false,
          "shouldAppendStoreCors": false,
        },
        {
          "absolutePath": "${BASE_DIR}/store/custom/route.ts",
          "handler": [Function],
          "isRoute": true,
          "matcher": "/store/custom",
          "method": "GET",
          "optedOutOfAuth": false,
          "relativePath": "/store/custom/route.ts",
          "shouldAppendAdminCors": false,
          "shouldAppendAuthCors": false,
          "shouldAppendStoreCors": true,
        },
        {
          "absolutePath": "${BASE_DIR_2}/store/[customer_id]/orders/[order_id]/route.ts",
          "handler": [Function],
          "isRoute": true,
          "matcher": "/store/:customer_id/orders/:order_id",
          "method": "GET",
          "optedOutOfAuth": false,
          "relativePath": "/store/[customer_id]/orders/[order_id]/route.ts",
          "shouldAppendAdminCors": false,
          "shouldAppendAuthCors": false,
          "shouldAppendStoreCors": true,
        },
      ]
    `)
  })

  it("should throw error for duplicate params", async () => {
    const BASE_DIR = resolve(
      __dirname,
      "../__fixtures__/routers-duplicate-parameter"
    )

    const loader = new RoutesLoader()
    await expect(() => loader.scanDir(BASE_DIR)).rejects.toThrow(
      "Duplicate parameters found in route /admin/customers/[id]/orders/[id]/route.ts (id). Make sure that all parameters are unique."
    )
  })
})
