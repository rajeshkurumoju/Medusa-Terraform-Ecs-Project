export type Sidebar = {
  sidebar_id: string
  title: string
  items: SidebarItem[]
}

export type SidebarItemCommon = {
  title: string
  children?: SidebarItem[]
  loaded?: boolean
  additionalElms?: React.ReactNode
  badge?: {
    variant: "purple" | "orange" | "green" | "blue" | "red" | "neutral"
    text: string
  }
  chapterTitle?: string
  childSidebarTitle?: string
  hideChildren?: boolean
  // generated by scripts
  number?: string
  // can be used to hold any description relevant when showing cards, etc...
  description?: string
}

export type InteractiveSidebarItemTypes =
  | "category"
  | "sub-category"
  | "link"
  | "ref"
  | "external"
  | "sidebar"

export type SidebarItemLink = SidebarItemCommon & {
  type: "link" | "ref" | "external"
  path: string
  isPathHref?: boolean
  linkProps?: React.AllHTMLAttributes<HTMLAnchorElement>
  childrenSameLevel?: boolean
}

export type SidebarItemSidebar = SidebarItemCommon & {
  type: "sidebar"
  sidebar_id: string
}

export type SidebarItemCategory = SidebarItemCommon & {
  type: "category"
  onOpen?: () => void
  initialOpen?: boolean
  showLoadingIfEmpty?: boolean
}

export type SidebarItemSubCategory = SidebarItemCommon & {
  type: "sub-category"
  childrenSameLevel?: boolean
}

export type SidebarItemSeparator = {
  type: "separator"
}

export type InteractiveSidebarItem =
  | SidebarItemLink
  | SidebarItemCategory
  | SidebarItemSubCategory
  | SidebarItemSidebar

export type SidebarItemLinkWithParent = SidebarItemLink & {
  parentItem?: InteractiveSidebarItem
}

export type SidebarItem = InteractiveSidebarItem | SidebarItemSeparator

export type SidebarSortType = "none" | "alphabetize"

export type RawSidebarItem = SidebarItem & {
  autogenerate_path?: string
  autogenerate_tags?: string
  autogenerate_as_ref?: boolean
  sort_sidebar?: SidebarSortType
  custom_autogenerate?: string
  number?: string
} & (
    | {
        type: InteractiveSidebarItemTypes
        children?: RawSidebarItem[]
      }
    | {
        type: "separator"
      }
  )

export type RawSidebar = Omit<Sidebar, "items"> & {
  items: RawSidebarItem[]
  custom_autogenerate?: string
}

export type PersistedSidebarCategoryState = {
  [k: string]: {
    [k: string]: boolean
  }
}

// export type SidebarHeirarchyItem = {
//   title: string
//   path?: string
// }
