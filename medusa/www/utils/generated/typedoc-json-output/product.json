{
	"id": 11183,
	"name": "product",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 12107,
			"name": "FindConfigOrder",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Temporary type fixing to allow any level of orders until we get to properly clean all the types"
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
					"line": 55,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 12108,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 55,
							"character": 30
						}
					],
					"indexSignatures": [
						{
							"id": 12109,
							"name": "__index",
							"variant": "signature",
							"kind": 8192,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
									"line": 56,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 12110,
									"name": "Key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 12111,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										]
									},
									{
										"type": "reference",
										"target": 12107,
										"name": "FindConfigOrder",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": "ASC"
									},
									{
										"type": "literal",
										"value": "DESC"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 11632,
			"name": "FindConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to configure how an entity is retrieved from the database. It accepts as a typed parameter an "
					},
					{
						"kind": "code",
						"text": "`Entity`"
					},
					{
						"kind": "text",
						"text": " class,\nwhich provides correct typing of field names in its properties."
					}
				]
			},
			"children": [
				{
					"id": 11633,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being attribute names of the entity to retrieve in the result."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 69,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "intersection",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 11634,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {}
											}
										}
									]
								},
								{
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 11642,
										"name": "Entity",
										"package": "@medusajs/types",
										"qualifiedName": "FindConfig.Entity",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				},
				{
					"id": 11635,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to skip before retrieving the results."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 74,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 11636,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to return in the result."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 79,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 11637,
					"name": "relations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being relation names of the entity to retrieve in the result."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 84,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 11638,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify how to sort the returned records. Its keys are the names of attributes of the entity, and a key's value can either be "
							},
							{
								"kind": "code",
								"text": "`ASC`"
							},
							{
								"kind": "text",
								"text": "\nto sort retrieved records in an ascending order, or "
							},
							{
								"kind": "code",
								"text": "`DESC`"
							},
							{
								"kind": "text",
								"text": " to sort retrieved records in a descending order."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 90,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 12107,
						"name": "FindConfigOrder",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 11639,
					"name": "withDeleted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean indicating whether deleted records should also be retrieved as part of the result. This only works if the entity extends the\n"
							},
							{
								"kind": "code",
								"text": "`SoftDeletableEntity`"
							},
							{
								"kind": "text",
								"text": " class."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 96,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 11640,
					"name": "filters",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined filters"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 101,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 11641,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined options"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 106,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11633,
						11635,
						11636,
						11637,
						11638,
						11639,
						11640,
						11641
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
					"line": 65,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 11642,
					"name": "Entity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 12121,
			"name": "MetadataType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
					"line": 421,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 12136,
			"name": "BaseFilterable",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 12137,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 12136,
									"typeArguments": [
										{
											"type": "reference",
											"target": 12139,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 12139,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				},
				{
					"id": 12138,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 12136,
									"typeArguments": [
										{
											"type": "reference",
											"target": 12139,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 12139,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12137,
						12138
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
					"line": 11,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 12139,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 11688,
					"name": "FilterableProductProps"
				},
				{
					"type": "reference",
					"target": 11810,
					"name": "FilterableProductTagProps"
				},
				{
					"type": "reference",
					"target": 11830,
					"name": "FilterableProductTypeProps"
				},
				{
					"type": "reference",
					"target": 11856,
					"name": "FilterableProductOptionProps"
				},
				{
					"type": "reference",
					"target": 11876,
					"name": "FilterableProductOptionValueProps"
				},
				{
					"type": "reference",
					"target": 11923,
					"name": "FilterableProductVariantProps"
				},
				{
					"type": "reference",
					"target": 12001,
					"name": "FilterableProductCollectionProps"
				},
				{
					"type": "reference",
					"target": 12042,
					"name": "FilterableProductCategoryProps"
				}
			]
		},
		{
			"id": 11799,
			"name": "SoftDeleteReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
					}
				]
			},
			"children": [
				{
					"id": 11800,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/repository-service.ts",
							"line": 145,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 11801,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11800
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/repository-service.ts",
					"line": 141,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 11801,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 11802,
			"name": "RestoreReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be restored when the main entity is restored."
					}
				]
			},
			"children": [
				{
					"id": 11803,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/repository-service.ts",
							"line": 157,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 11804,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11803
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/repository-service.ts",
					"line": 153,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 11804,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 12214,
			"name": "Query",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
					"line": 9,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 12215,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 12215,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "object"
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 12215,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 12241,
						"name": "Scalar",
						"package": "@medusajs/types"
					},
					"trueType": {
						"type": "intrinsic",
						"name": "never"
					},
					"falseType": {
						"type": "reference",
						"target": 12245,
						"typeArguments": [
							{
								"type": "reference",
								"target": 12215,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQuery",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 12248,
					"typeArguments": [
						{
							"type": "reference",
							"target": 12215,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "FilterValue",
					"package": "@medusajs/types"
				}
			}
		},
		{
			"id": 12216,
			"name": "ExpandScalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
					"line": 15,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 12217,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": null
					},
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 12217,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "RegExp"
									},
									"name": "RegExp",
									"package": "typescript"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 12217,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"trueType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"falseType": {
								"type": "reference",
								"target": 12217,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					}
				]
			}
		},
		{
			"id": 12241,
			"name": "Scalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
					"line": 18,
					"character": 5
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "boolean"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "bigint"
					},
					{
						"type": "intrinsic",
						"name": "symbol"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "RegExp"
						},
						"name": "RegExp",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/node/buffer.d.ts",
							"qualifiedName": "__global.Buffer"
						},
						"name": "Buffer",
						"package": "@types/node",
						"qualifiedName": "__global.Buffer"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 12242,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 12243,
									"name": "toHexString",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
											"line": 28,
											"character": 6
										}
									],
									"signatures": [
										{
											"id": 12244,
											"name": "toHexString",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
													"line": 28,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										12243
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 27,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 12279,
			"name": "ReadonlyPrimary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
					"line": 37,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 12280,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 12280,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "array",
					"elementType": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				"trueType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Readonly"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 12280,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "Readonly",
					"package": "typescript"
				},
				"falseType": {
					"type": "reference",
					"target": 12280,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 12269,
			"name": "Primary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
					"line": 40,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 12278,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 12278,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reflection",
					"declaration": {
						"id": 12270,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 12271,
								"name": "[PrimaryKeyType]",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"sources": [
									{
										"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
										"line": 41,
										"character": 2
									}
								],
								"type": {
									"type": "inferred",
									"name": "PK"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									12271
								]
							}
						],
						"sources": [
							{
								"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
								"line": 40,
								"character": 28
							}
						]
					}
				},
				"trueType": {
					"type": "reference",
					"target": 12279,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
								"qualifiedName": "PK"
							},
							"name": "PK",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "ReadonlyPrimary",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 12278,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reflection",
						"declaration": {
							"id": 12272,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 12273,
									"name": "_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
											"line": 45,
											"character": 6
										}
									],
									"type": {
										"type": "inferred",
										"name": "PK"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										12273
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 44,
									"character": 14
								}
							]
						}
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 12279,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 12278,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 12274,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 12275,
										"name": "uuid",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"sources": [
											{
												"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
												"line": 49,
												"character": 6
											}
										],
										"type": {
											"type": "inferred",
											"name": "PK"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											12275
										]
									}
								],
								"sources": [
									{
										"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
										"line": 48,
										"character": 14
									}
								]
							}
						},
						"trueType": {
							"type": "reference",
							"target": 12279,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "PK"
									},
									"name": "PK",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "ReadonlyPrimary",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 12278,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 12276,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 12277,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
													"line": 53,
													"character": 6
												}
											],
											"type": {
												"type": "inferred",
												"name": "PK"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												12277
											]
										}
									],
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
											"line": 52,
											"character": 14
										}
									]
								}
							},
							"trueType": {
								"type": "reference",
								"target": 12279,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				}
			}
		},
		{
			"id": 12140,
			"name": "OperatorMap",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
					"line": 58,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 12161,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 12141,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 12142,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 59,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 12214,
									"typeArguments": [
										{
											"type": "reference",
											"target": 12161,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 12143,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 60,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 12214,
									"typeArguments": [
										{
											"type": "reference",
											"target": 12161,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 12144,
							"name": "$eq",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 61,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 12216,
										"typeArguments": [
											{
												"type": "reference",
												"target": 12161,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 12216,
											"typeArguments": [
												{
													"type": "reference",
													"target": 12161,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "ExpandScalar",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 12145,
							"name": "$ne",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 62,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 12216,
								"typeArguments": [
									{
										"type": "reference",
										"target": 12161,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 12146,
							"name": "$in",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 63,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 12216,
									"typeArguments": [
										{
											"type": "reference",
											"target": 12161,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 12147,
							"name": "$nin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 64,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 12216,
									"typeArguments": [
										{
											"type": "reference",
											"target": 12161,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 12148,
							"name": "$not",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 65,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 12214,
								"typeArguments": [
									{
										"type": "reference",
										"target": 12161,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Query",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 12149,
							"name": "$gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 66,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 12216,
								"typeArguments": [
									{
										"type": "reference",
										"target": 12161,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 12150,
							"name": "$gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 67,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 12216,
								"typeArguments": [
									{
										"type": "reference",
										"target": 12161,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 12151,
							"name": "$lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 68,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 12216,
								"typeArguments": [
									{
										"type": "reference",
										"target": 12161,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 12152,
							"name": "$lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 69,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 12216,
								"typeArguments": [
									{
										"type": "reference",
										"target": 12161,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 12153,
							"name": "$like",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 70,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 12154,
							"name": "$re",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 71,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 12155,
							"name": "$ilike",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 72,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 12156,
							"name": "$fulltext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 73,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 12157,
							"name": "$overlap",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 74,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 12158,
							"name": "$contains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 75,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 12159,
							"name": "$contained",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 76,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 12160,
							"name": "$exists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 77,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								12142,
								12143,
								12144,
								12145,
								12146,
								12147,
								12148,
								12149,
								12150,
								12151,
								12152,
								12153,
								12154,
								12155,
								12156,
								12157,
								12158,
								12159,
								12160
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
							"line": 58,
							"character": 29
						}
					]
				}
			}
		},
		{
			"id": 12266,
			"name": "FilterValue2",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
					"line": 80,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 12267,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 12267,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": 12216,
						"typeArguments": [
							{
								"type": "reference",
								"target": 12267,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "ExpandScalar",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 12269,
						"typeArguments": [
							{
								"type": "reference",
								"target": 12267,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Primary",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 12248,
			"name": "FilterValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
					"line": 81,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 12249,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 12140,
						"typeArguments": [
							{
								"type": "reference",
								"target": 12266,
								"typeArguments": [
									{
										"type": "reference",
										"target": 12249,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "FilterValue2",
								"package": "@medusajs/types"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 12266,
						"typeArguments": [
							{
								"type": "reference",
								"target": 12249,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterValue2",
						"package": "@medusajs/types"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 12266,
							"typeArguments": [
								{
									"type": "reference",
									"target": 12249,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "FilterValue2",
							"package": "@medusajs/types"
						}
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 12268,
			"name": "PrevLimit",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
					"line": 87,
					"character": 5
				}
			],
			"type": {
				"type": "tuple",
				"elements": [
					{
						"type": "intrinsic",
						"name": "never"
					},
					{
						"type": "literal",
						"value": 0
					},
					{
						"type": "literal",
						"value": 1
					},
					{
						"type": "literal",
						"value": 2
					}
				]
			}
		},
		{
			"id": 12260,
			"name": "FilterQueryProperties",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
					"line": 89,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 12264,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 12265,
					"name": "Prev",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"default": {
						"type": "literal",
						"value": 3
					}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "Key",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 12264,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "conditional",
					"checkType": {
						"type": "indexedAccess",
						"indexType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
								"qualifiedName": "Key"
							},
							"name": "Key",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"objectType": {
							"type": "reference",
							"target": 12264,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					},
					"extendsType": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "bigint"
							},
							{
								"type": "intrinsic",
								"name": "symbol"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "Key"
									},
									"name": "Key",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 12264,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							{
								"type": "reference",
								"target": 12140,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
												"qualifiedName": "Key"
											},
											"name": "Key",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 12264,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
									"qualifiedName": "Key"
								},
								"name": "Key",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 12264,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						"extendsType": {
							"type": "inferred",
							"name": "U"
						},
						"trueType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
									"qualifiedName": "U"
								},
								"name": "U",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 12261,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
											"line": 99,
											"character": 16
										}
									],
									"indexSignatures": [
										{
											"id": 12262,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
													"line": 99,
													"character": 18
												}
											],
											"parameters": [
												{
													"id": 12263,
													"name": "x",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
													"qualifiedName": "V"
												},
												"name": "V",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									]
								}
							},
							"trueType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "V"
									},
									"name": "V",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "intrinsic",
									"name": "object"
								},
								"trueType": {
									"type": "reference",
									"target": 12245,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Partial"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
														"qualifiedName": "V"
													},
													"name": "V",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Partial",
											"package": "typescript"
										},
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": 12265,
												"name": "Prev",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 12268,
												"name": "PrevLimit",
												"package": "@medusajs/types"
											}
										}
									],
									"name": "FilterQuery",
									"package": "@medusajs/types"
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						},
						"falseType": {
							"type": "intrinsic",
							"name": "never"
						}
					}
				},
				"optionalModifier": "+"
			}
		},
		{
			"id": 12245,
			"name": "FilterQuery",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
					"line": 107,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 12246,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 12247,
					"name": "Prev",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"default": {
						"type": "literal",
						"value": 3
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 12247,
					"name": "Prev",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "never"
				},
				"trueType": {
					"type": "intrinsic",
					"name": "never"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 12246,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 12253,
						"typeArguments": [
							{
								"type": "inferred",
								"name": "Prototype"
							}
						],
						"name": "Constructor",
						"package": "@medusajs/types"
					},
					"trueType": {
						"type": "reference",
						"target": 12260,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
									"qualifiedName": "Prototype"
								},
								"name": "Prototype",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 12247,
								"name": "Prev",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQueryProperties",
						"package": "@medusajs/types"
					},
					"falseType": {
						"type": "reference",
						"target": 12260,
						"typeArguments": [
							{
								"type": "reference",
								"target": 12246,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 12247,
								"name": "Prev",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQueryProperties",
						"package": "@medusajs/types"
					}
				}
			}
		},
		{
			"id": 12250,
			"name": "EventMetadata",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
					"line": 14,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 12251,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 12252,
									"name": "eventGroupId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
											"line": 15,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										12252
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 14,
									"character": 54
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 12235,
			"name": "Event",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
					"line": 18,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 12240,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 12236,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 12237,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 19,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 12238,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 20,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 12250,
								"name": "EventMetadata",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 12239,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 21,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 12240,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								12237,
								12238,
								12239
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
							"line": 18,
							"character": 37
						}
					]
				}
			}
		},
		{
			"id": 12193,
			"name": "Message",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
					"line": 24,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 12196,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 12235,
						"typeArguments": [
							{
								"type": "reference",
								"target": 12196,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Event",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 12194,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 12195,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
											"line": 25,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										12195
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 24,
									"character": 54
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 12204,
			"name": "RawMessageFormat",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
					"line": 28,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 12213,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 12205,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 12206,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 29,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 12207,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 30,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 12213,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 12208,
							"name": "source",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 31,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 12209,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 32,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 12210,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 33,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 12211,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 34,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Pick"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": "eventGroupId"
									}
								],
								"name": "Pick",
								"package": "typescript"
							}
						},
						{
							"id": 12212,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 35,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								12206,
								12207,
								12208,
								12209,
								12210,
								12211,
								12212
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
							"line": 28,
							"character": 44
						}
					]
				}
			}
		},
		{
			"id": 12225,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
					"line": 1,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 12226,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 12227,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
									"line": 2,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 12228,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
									"line": 3,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 12229,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
									"line": 4,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 12230,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
									"line": 5,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 12231,
							"name": "entity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
									"line": 6,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 12232,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
									"line": 10,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 12233,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
									"line": 14,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 12234,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
									"line": 18,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								12227,
								12228,
								12229,
								12230,
								12231,
								12232,
								12233,
								12234
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 1,
							"character": 33
						}
					]
				}
			}
		},
		{
			"id": 12221,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 12222,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 22,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 12223,
					"name": "entity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 23,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12224,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 27,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12222,
						12223,
						12224
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
					"line": 21,
					"character": 17
				}
			]
		},
		{
			"id": 12169,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 12170,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 31,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12171,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 35,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 12221,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 12221,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 12172,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 39,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 12173,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 12174,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
															"line": 43,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 12175,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
															"line": 44,
															"character": 8
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														12174,
														12175
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
													"line": 42,
													"character": 6
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 12176,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 47,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 12177,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 48,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 12225,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 12178,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 49,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 12179,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 12180,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
												"line": 50,
												"character": 4
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 12181,
										"name": "entity",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"sources": [
											{
												"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
												"line": 51,
												"character": 4
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 12182,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
												"line": 52,
												"character": 4
											}
										],
										"type": {
											"type": "reference",
											"target": 12225,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											12180,
											12181,
											12182
										]
									}
								],
								"sources": [
									{
										"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
										"line": 49,
										"character": 12
									}
								]
							}
						}
					}
				},
				{
					"id": 12183,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 57,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12170,
						12171,
						12172,
						12176,
						12177,
						12178,
						12183
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
					"line": 30,
					"character": 17
				}
			]
		},
		{
			"id": 12253,
			"name": "Constructor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
					"line": 21,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 12259,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 12254,
					"name": "__type",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
							"line": 21,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 12255,
							"name": "__type",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 12258,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 12259,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 12256,
											"name": "__type",
											"variant": "declaration",
											"kind": 512,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
													"line": 21,
													"character": 58
												}
											],
											"signatures": [
												{
													"id": 12257,
													"name": "__type",
													"variant": "signature",
													"kind": 16384,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 12259,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											]
										}
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 12187,
			"name": "LinkModulesExtraFields",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
					"line": 143,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Record"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 12188,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 12189,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 146,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "date"
											},
											{
												"type": "literal",
												"value": "time"
											},
											{
												"type": "literal",
												"value": "datetime"
											},
											{
												"type": "literal",
												"value": "bigint"
											},
											{
												"type": "literal",
												"value": "blob"
											},
											{
												"type": "literal",
												"value": "uint8array"
											},
											{
												"type": "literal",
												"value": "array"
											},
											{
												"type": "literal",
												"value": "enumArray"
											},
											{
												"type": "literal",
												"value": "enum"
											},
											{
												"type": "literal",
												"value": "json"
											},
											{
												"type": "literal",
												"value": "integer"
											},
											{
												"type": "literal",
												"value": "smallint"
											},
											{
												"type": "literal",
												"value": "tinyint"
											},
											{
												"type": "literal",
												"value": "mediumint"
											},
											{
												"type": "literal",
												"value": "float"
											},
											{
												"type": "literal",
												"value": "double"
											},
											{
												"type": "literal",
												"value": "boolean"
											},
											{
												"type": "literal",
												"value": "decimal"
											},
											{
												"type": "literal",
												"value": "string"
											},
											{
												"type": "literal",
												"value": "uuid"
											},
											{
												"type": "literal",
												"value": "text"
											}
										]
									}
								},
								{
									"id": 12190,
									"name": "defaultValue",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 168,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 12191,
									"name": "nullable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 169,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 12192,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Mikro-orm options for the column"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 173,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										12189,
										12190,
										12191,
										12192
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
									"line": 145,
									"character": 2
								}
							]
						}
					}
				],
				"name": "Record",
				"package": "typescript"
			}
		},
		{
			"id": 12082,
			"name": "ModuleJoinerConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
					"line": 191,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 12169,
								"name": "JoinerServiceConfig",
								"package": "@medusajs/types"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "serviceName"
									},
									{
										"type": "literal",
										"value": "primaryKeys"
									},
									{
										"type": "literal",
										"value": "relationships"
									},
									{
										"type": "literal",
										"value": "extends"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 12083,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 12084,
									"name": "schema",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "GraphQL schema for the all module's available entities and fields"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 198,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 12085,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 199,
											"character": 2
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 12184,
											"name": "ModuleJoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 12086,
									"name": "extends",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 200,
											"character": 2
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 12087,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 12088,
														"name": "serviceName",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
																"line": 201,
																"character": 4
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 12089,
														"name": "entity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"sources": [
															{
																"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
																"line": 202,
																"character": 4
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 12090,
														"name": "fieldAlias",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"sources": [
															{
																"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
																"line": 203,
																"character": 4
															}
														],
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 12091,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 12092,
																						"name": "path",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
																								"line": 207,
																								"character": 10
																							}
																						],
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 12093,
																						"name": "forwardArgumentsOnPath",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"sources": [
																							{
																								"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
																								"line": 208,
																								"character": 10
																							}
																						],
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					},
																					{
																						"id": 12094,
																						"name": "isList",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"sources": [
																							{
																								"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
																								"line": 209,
																								"character": 10
																							}
																						],
																						"type": {
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							12092,
																							12093,
																							12094
																						]
																					}
																				],
																				"sources": [
																					{
																						"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
																						"line": 206,
																						"character": 8
																					}
																				]
																			}
																		}
																	]
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													},
													{
														"id": 12095,
														"name": "relationship",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
																"line": 212,
																"character": 4
															}
														],
														"type": {
															"type": "reference",
															"target": 12184,
															"name": "ModuleJoinerRelationship",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															12088,
															12089,
															12090,
															12095
														]
													}
												],
												"sources": [
													{
														"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
														"line": 200,
														"character": 12
													}
												]
											}
										}
									}
								},
								{
									"id": 12096,
									"name": "serviceName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 214,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 12097,
									"name": "primaryKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 215,
											"character": 2
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 12098,
									"name": "isLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is a link module"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 219,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 12099,
									"name": "linkableKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 223,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 12100,
									"name": "isReadOnlyLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 227,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 12101,
									"name": "extraDataFields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fields that will be part of the link record aside from the primary keys that can be updated\nIf not explicitly defined, this array will be populated by databaseConfig.extraFields"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 232,
											"character": 2
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 12102,
									"name": "databaseConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 233,
											"character": 2
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 12103,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 12104,
													"name": "tableName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Name of the pivot table. If not provided it is auto generated"
															}
														]
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 237,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 12105,
													"name": "idPrefix",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Prefix for the id column. If not provided it is \"link\""
															}
														]
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 241,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 12106,
													"name": "extraFields",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 242,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": 12187,
														"name": "LinkModulesExtraFields",
														"package": "@medusajs/types"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														12104,
														12105,
														12106
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
													"line": 233,
													"character": 19
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										12084,
										12085,
										12086,
										12096,
										12097,
										12098,
										12099,
										12100,
										12101,
										12102
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
									"line": 194,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 12184,
			"name": "ModuleJoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
					"line": 246,
					"character": 20
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 12225,
						"name": "JoinerRelationship",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 12185,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 12186,
									"name": "deleteCascade",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the link joiner will cascade deleting the relationship"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 250,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										12186
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
									"line": 246,
									"character": 68
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 11618,
			"name": "IModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 11619,
					"name": "__joinerConfig",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
							"line": 314,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 11620,
							"name": "__joinerConfig",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
									"line": 314,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 12082,
								"name": "ModuleJoinerConfig",
								"package": "@medusajs/types"
							}
						}
					]
				},
				{
					"id": 11621,
					"name": "__hooks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@ignore"
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
							"line": 319,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 11622,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 11623,
									"name": "onApplicationStart",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 320,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 11624,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
													"line": 320,
													"character": 25
												}
											],
											"signatures": [
												{
													"id": 11625,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 320,
															"character": 25
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 11626,
									"name": "onApplicationShutdown",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 321,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 11627,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
													"line": 321,
													"character": 28
												}
											],
											"signatures": [
												{
													"id": 11628,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 321,
															"character": 28
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 11629,
									"name": "onApplicationPrepareShutdown",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 322,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 11630,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
													"line": 322,
													"character": 35
												}
											],
											"signatures": [
												{
													"id": 11631,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 322,
															"character": 35
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										11623,
										11626,
										11629
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
									"line": 319,
									"character": 12
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11621
					]
				},
				{
					"title": "Methods",
					"children": [
						11619
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
					"line": 310,
					"character": 17
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 11184,
					"name": "IProductModuleService"
				}
			]
		},
		{
			"id": 12112,
			"name": "ProductStatus",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 8,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "draft"
					},
					{
						"type": "literal",
						"value": "proposed"
					},
					{
						"type": "literal",
						"value": "published"
					},
					{
						"type": "literal",
						"value": "rejected"
					}
				]
			}
		},
		{
			"id": 11643,
			"name": "ProductDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product's data."
					}
				]
			},
			"children": [
				{
					"id": 11644,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 19,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11645,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 23,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11646,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product. The handle can be used to create slug URL paths."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 27,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11647,
					"name": "subtitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subttle of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 31,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11648,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 35,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11649,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product is a gift card."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 39,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 11650,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 43,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 12112,
						"name": "ProductStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 11651,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the product's thumbnail."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 47,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11652,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 51,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 11653,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 55,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 11654,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 59,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 11655,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 63,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 11656,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 67,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11657,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS Code of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 71,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11658,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID Code of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 75,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11659,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 79,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11660,
					"name": "collection",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product collection."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 85,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 11992,
								"name": "ProductCollectionDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 11661,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product collection id."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 89,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11662,
					"name": "categories",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product categories."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 95,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 12026,
									"name": "ProductCategoryDTO",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 11663,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product type."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 101,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 11823,
								"name": "ProductTypeDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 11664,
					"name": "type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product type id."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 105,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11665,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product tags."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 111,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 11805,
							"name": "ProductTagDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 11666,
					"name": "variants",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product variants."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 117,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 11897,
							"name": "ProductVariantDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 11667,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product options."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 123,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 11846,
							"name": "ProductOptionDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 11668,
					"name": "images",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product images."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 129,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 12113,
							"name": "ProductImageDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 11669,
					"name": "discountable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product can be discounted."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 133,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 11670,
					"name": "external_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product in an external system. This is useful if you're integrating the product with a third-party service and want to maintain\na reference to the ID in the integrated service."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 138,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11671,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product was created."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 142,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 11672,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product was updated."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 146,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 11673,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product was deleted."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 150,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 11674,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 154,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 12121,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11644,
						11645,
						11646,
						11647,
						11648,
						11649,
						11650,
						11651,
						11652,
						11653,
						11654,
						11655,
						11656,
						11657,
						11658,
						11659,
						11660,
						11661,
						11662,
						11663,
						11664,
						11665,
						11666,
						11667,
						11668,
						11669,
						11670,
						11671,
						11672,
						11673,
						11674
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 15,
					"character": 17
				}
			]
		},
		{
			"id": 11897,
			"name": "ProductVariantDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product variant's data."
					}
				]
			},
			"children": [
				{
					"id": 11898,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 166,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11899,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tile of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 170,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11900,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The SKU of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 174,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11901,
					"name": "barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The barcode of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 178,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11902,
					"name": "ean",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The EAN of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 182,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11903,
					"name": "upc",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The UPC of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 186,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11904,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant can be ordered when it's out of stock."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 190,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 11905,
					"name": "manage_inventory",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant's inventory should be managed by the core system."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 194,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 11906,
					"name": "requires_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant's requires shipping."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 198,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 11907,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS Code of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 202,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11908,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 206,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11909,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID Code of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 210,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11910,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 214,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11911,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 218,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 11912,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 222,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 11913,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 226,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 11914,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 230,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 11915,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product options."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 236,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 11882,
							"name": "ProductOptionValueDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 11916,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 240,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 11917,
					"name": "product",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 246,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 11643,
								"name": "ProductDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 11918,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product id."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 250,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11919,
					"name": "variant_rank",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "he ranking of the variant among other variants associated with the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 254,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 11920,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product variant was created."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 258,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 11921,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product variant was updated."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 262,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 11922,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product variant was deleted."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 266,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11898,
						11899,
						11900,
						11901,
						11902,
						11903,
						11904,
						11905,
						11906,
						11907,
						11908,
						11909,
						11910,
						11911,
						11912,
						11913,
						11914,
						11915,
						11916,
						11917,
						11918,
						11919,
						11920,
						11921,
						11922
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 162,
					"character": 17
				}
			]
		},
		{
			"id": 12026,
			"name": "ProductCategoryDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product category's data."
					}
				]
			},
			"children": [
				{
					"id": 12027,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product category."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 278,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12028,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the product category."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 282,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12029,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the product category."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 286,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12030,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product category. The handle can be used to create slug URL paths."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 290,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12031,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product category is active."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 294,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 12032,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product category is internal. This can be used to only show the product category to admins and hide it from customers."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 298,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 12033,
					"name": "rank",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ranking of the product category among sibling categories."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 302,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 12034,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ranking of the product category among sibling categories."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 306,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 12121,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 12035,
					"name": "parent_category",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated parent category."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 312,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 12026,
								"name": "ProductCategoryDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 12036,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated parent category id."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 316,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 12037,
					"name": "category_children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated child categories."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 322,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 12026,
							"name": "ProductCategoryDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 12038,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated products."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 328,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 11643,
							"name": "ProductDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 12039,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product category was created."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 332,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 12040,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product category was updated."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 336,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 12041,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product category was deleted."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 340,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12027,
						12028,
						12029,
						12030,
						12031,
						12032,
						12033,
						12034,
						12035,
						12036,
						12037,
						12038,
						12039,
						12040,
						12041
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 274,
					"character": 17
				}
			]
		},
		{
			"id": 12054,
			"name": "CreateProductCategoryDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product category to create."
					}
				]
			},
			"children": [
				{
					"id": 12055,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product category's name."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 352,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12056,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product category's description."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 356,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12057,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product category's handle."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 360,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12058,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product category is active."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 364,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 12059,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product category is internal. This can be used to only show the product category to admins and hide it from customers."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 368,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 12060,
					"name": "rank",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ranking of the category among sibling categories."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 372,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 12061,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the parent product category, if it has any."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 376,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 12062,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 380,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 12121,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12055,
						12056,
						12057,
						12058,
						12059,
						12060,
						12061,
						12062
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 348,
					"character": 17
				}
			]
		},
		{
			"id": 12063,
			"name": "UpsertProductCategoryDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a product category."
					}
				]
			},
			"children": [
				{
					"id": 12064,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product category to update. If not provided, the product category is created. In this case, the "
							},
							{
								"kind": "code",
								"text": "`name`"
							},
							{
								"kind": "text",
								"text": " property is required."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 387,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12065,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the product category."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 399,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12074,
						"name": "UpdateProductCategoryDTO.name"
					}
				},
				{
					"id": 12066,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product category's description."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 403,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12075,
						"name": "UpdateProductCategoryDTO.description"
					}
				},
				{
					"id": 12067,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product category."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 407,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12076,
						"name": "UpdateProductCategoryDTO.handle"
					}
				},
				{
					"id": 12068,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product category is active."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 411,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12077,
						"name": "UpdateProductCategoryDTO.is_active"
					}
				},
				{
					"id": 12069,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product category is internal. This can be used to only show the product category to admins and hide it from customers."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 415,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12078,
						"name": "UpdateProductCategoryDTO.is_internal"
					}
				},
				{
					"id": 12070,
					"name": "rank",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ranking of the category among sibling categories."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 419,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12079,
						"name": "UpdateProductCategoryDTO.rank"
					}
				},
				{
					"id": 12071,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the parent product category, if it has any."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 423,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12080,
						"name": "UpdateProductCategoryDTO.parent_category_id"
					}
				},
				{
					"id": 12072,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 427,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 12121,
						"name": "MetadataType",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12081,
						"name": "UpdateProductCategoryDTO.metadata"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12064,
						12065,
						12066,
						12067,
						12068,
						12069,
						12070,
						12071,
						12072
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 383,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 12073,
					"name": "UpdateProductCategoryDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 12073,
			"name": "UpdateProductCategoryDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a product category."
					}
				]
			},
			"children": [
				{
					"id": 12074,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the product category."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 399,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12075,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product category's description."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 403,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12076,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product category."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 407,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12077,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product category is active."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 411,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 12078,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product category is internal. This can be used to only show the product category to admins and hide it from customers."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 415,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 12079,
					"name": "rank",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ranking of the category among sibling categories."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 419,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 12080,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the parent product category, if it has any."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 423,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 12081,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 427,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 12121,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12074,
						12075,
						12076,
						12077,
						12078,
						12079,
						12080,
						12081
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 395,
					"character": 17
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 12063,
					"name": "UpsertProductCategoryDTO"
				}
			]
		},
		{
			"id": 11805,
			"name": "ProductTagDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product tag's data."
					}
				]
			},
			"children": [
				{
					"id": 11806,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product tag."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 439,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11807,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product tag."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 443,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11808,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 447,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 12121,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 11809,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated products."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 453,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 11643,
							"name": "ProductDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11806,
						11807,
						11808,
						11809
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 435,
					"character": 17
				}
			]
		},
		{
			"id": 11992,
			"name": "ProductCollectionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product collection's data."
					}
				]
			},
			"children": [
				{
					"id": 11993,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product collection."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 465,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11994,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product collection."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 469,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11995,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product collection. The handle can be used to create slug URL paths."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 473,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11996,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 477,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 12121,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 11997,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product collection was created."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 481,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 11998,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product collection was updated."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 485,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 11999,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product collection was deleted."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 489,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 12000,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated products."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 495,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 11643,
							"name": "ProductDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11993,
						11994,
						11995,
						11996,
						11997,
						11998,
						11999,
						12000
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 461,
					"character": 17
				}
			]
		},
		{
			"id": 11823,
			"name": "ProductTypeDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product type's data."
					}
				]
			},
			"children": [
				{
					"id": 11824,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product type."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 507,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11825,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product type."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 511,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11826,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 515,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 12121,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 11827,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product type was created."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 519,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 11828,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product type was updated."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 523,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 11829,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product type was deleted."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 527,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11824,
						11825,
						11826,
						11827,
						11828,
						11829
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 503,
					"character": 17
				}
			]
		},
		{
			"id": 11846,
			"name": "ProductOptionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product option's data."
					}
				]
			},
			"children": [
				{
					"id": 11847,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product option."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 540,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11848,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product option."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 544,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11849,
					"name": "product",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 550,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 11643,
								"name": "ProductDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 11850,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product id."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 554,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11851,
					"name": "values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product option values."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 560,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 11882,
							"name": "ProductOptionValueDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 11852,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 564,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 12121,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 11853,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product option was created."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 568,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 11854,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product option was updated."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 572,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 11855,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product option was deleted."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 576,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11847,
						11848,
						11849,
						11850,
						11851,
						11852,
						11853,
						11854,
						11855
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 536,
					"character": 17
				}
			]
		},
		{
			"id": 12113,
			"name": "ProductImageDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product image's data."
					}
				]
			},
			"children": [
				{
					"id": 12114,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product image."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 593,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12115,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the product image."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 597,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12116,
					"name": "rank",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rank of the product image."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 601,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 12117,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 605,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 12121,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 12118,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product image was created."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 609,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 12119,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product image was updated."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 613,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 12120,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product image was deleted."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 617,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12114,
						12115,
						12116,
						12117,
						12118,
						12119,
						12120
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 589,
					"character": 17
				}
			]
		},
		{
			"id": 11882,
			"name": "ProductOptionValueDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product option value's data."
					}
				]
			},
			"children": [
				{
					"id": 11883,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product option value."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 636,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11884,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product option value."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 640,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11885,
					"name": "option",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product option. It may only be available if the "
							},
							{
								"kind": "code",
								"text": "`option`"
							},
							{
								"kind": "text",
								"text": " relation is expanded."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 646,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 11846,
								"name": "ProductOptionDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 11886,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product option id."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 650,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11887,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 654,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 12121,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 11888,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product option value was created."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 658,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 11889,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product option value was updated."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 662,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 11890,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product option value was deleted."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 666,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11883,
						11884,
						11885,
						11886,
						11887,
						11888,
						11889,
						11890
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 632,
					"character": 17
				}
			]
		},
		{
			"id": 11688,
			"name": "FilterableProductProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on retrieved products."
					}
				]
			},
			"children": [
				{
					"id": 11717,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 11688,
									"name": "FilterableProductProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 12136,
									"typeArguments": [
										{
											"type": "reference",
											"target": 11688,
											"name": "FilterableProductProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12137,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 11718,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 11688,
									"name": "FilterableProductProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 12136,
									"typeArguments": [
										{
											"type": "reference",
											"target": 11688,
											"name": "FilterableProductProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12138,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 11689,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search through the products' attributes, such as titles and descriptions, using this search term."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 687,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11690,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status to filter products by"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 691,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 12112,
								"name": "ProductStatus",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 12112,
									"name": "ProductStatus",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 11691,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The titles to filter products by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 695,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 11692,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handles to filter products by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 699,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 11693,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The skus to filter products by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 703,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 11694,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter products by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 707,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 11695,
					"name": "external_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The external IDs to filter products by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 711,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 11696,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters only or excluding gift card products"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 715,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 11697,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters on a product's tags."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 719,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 11698,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 11699,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Filter a product by the IDs of their associated tags."
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
											"line": 723,
											"character": 4
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										11699
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
									"line": 719,
									"character": 9
								}
							]
						}
					}
				},
				{
					"id": 11700,
					"name": "variants",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters on a product's variant properties."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 728,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 11701,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 11702,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
											"line": 729,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 11703,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 11704,
													"name": "value",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
															"line": 730,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 11705,
													"name": "option_id",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
															"line": 731,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 11706,
													"name": "option",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
															"line": 732,
															"character": 6
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														11704,
														11705,
														11706
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
													"line": 729,
													"character": 14
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										11702
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
									"line": 728,
									"character": 13
								}
							]
						}
					}
				},
				{
					"id": 11707,
					"name": "type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter a product by the ID of the associated type"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 739,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 11708,
					"name": "categories",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter a product by the IDs of their associated categories."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 743,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 11709,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 11710,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
													"line": 743,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"target": 12140,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "OperatorMap",
												"package": "@medusajs/types"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												11710
											]
										}
									],
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
											"line": 743,
											"character": 15
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 11711,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 11712,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
													"line": 743,
													"character": 47
												}
											],
											"type": {
												"type": "reference",
												"target": 12140,
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "OperatorMap",
												"package": "@medusajs/types"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												11712
											]
										}
									],
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
											"line": 743,
											"character": 45
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 11713,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters a product by its associated collections."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 747,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 12140,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 11714,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters a product based on when it was created"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 751,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 12140,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 11715,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters a product based on when it was updated"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 755,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 12140,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 11716,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters soft-deleted products based on the date they were deleted at."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 759,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 12140,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11717,
						11718,
						11689,
						11690,
						11691,
						11692,
						11693,
						11694,
						11695,
						11696,
						11697,
						11700,
						11707,
						11708,
						11713,
						11714,
						11715,
						11716
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 682,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 12136,
					"typeArguments": [
						{
							"type": "reference",
							"target": 11688,
							"name": "FilterableProductProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 11810,
			"name": "FilterableProductTagProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on retrieved product tags."
					}
				]
			},
			"children": [
				{
					"id": 11814,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 11810,
									"name": "FilterableProductTagProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 12136,
									"typeArguments": [
										{
											"type": "reference",
											"target": 11810,
											"name": "FilterableProductTagProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12137,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 11815,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 11810,
									"name": "FilterableProductTagProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 12136,
									"typeArguments": [
										{
											"type": "reference",
											"target": 11810,
											"name": "FilterableProductTagProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12138,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 11811,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search through the tags' values."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 775,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11812,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter product tags by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 779,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 11813,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value to filter product tags by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 783,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11814,
						11815,
						11811,
						11812,
						11813
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 770,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 12136,
					"typeArguments": [
						{
							"type": "reference",
							"target": 11810,
							"name": "FilterableProductTagProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 11830,
			"name": "FilterableProductTypeProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on retrieved product types."
					}
				]
			},
			"children": [
				{
					"id": 11834,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 11830,
									"name": "FilterableProductTypeProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 12136,
									"typeArguments": [
										{
											"type": "reference",
											"target": 11830,
											"name": "FilterableProductTypeProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12137,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 11835,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 11830,
									"name": "FilterableProductTypeProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 12136,
									"typeArguments": [
										{
											"type": "reference",
											"target": 11830,
											"name": "FilterableProductTypeProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12138,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 11831,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search through the types' values."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 799,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11832,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter product types by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 803,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 11833,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value to filter product types by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 807,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11834,
						11835,
						11831,
						11832,
						11833
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 794,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 12136,
					"typeArguments": [
						{
							"type": "reference",
							"target": 11830,
							"name": "FilterableProductTypeProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 11856,
			"name": "FilterableProductOptionProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on retrieved product options."
					}
				]
			},
			"children": [
				{
					"id": 11861,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 11856,
									"name": "FilterableProductOptionProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 12136,
									"typeArguments": [
										{
											"type": "reference",
											"target": 11856,
											"name": "FilterableProductOptionProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12137,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 11862,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 11856,
									"name": "FilterableProductOptionProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 12136,
									"typeArguments": [
										{
											"type": "reference",
											"target": 11856,
											"name": "FilterableProductOptionProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12138,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 11857,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search through the options' titles."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 824,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11858,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter product options by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 828,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 11859,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The titles to filter product options by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 832,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 11860,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the product options by their associated products' IDs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 836,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11861,
						11862,
						11857,
						11858,
						11859,
						11860
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 819,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 12136,
					"typeArguments": [
						{
							"type": "reference",
							"target": 11856,
							"name": "FilterableProductOptionProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 11876,
			"name": "FilterableProductOptionValueProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on retrieved product option values."
					}
				]
			},
			"children": [
				{
					"id": 11880,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 11876,
									"name": "FilterableProductOptionValueProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 12136,
									"typeArguments": [
										{
											"type": "reference",
											"target": 11876,
											"name": "FilterableProductOptionValueProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12137,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 11881,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 11876,
									"name": "FilterableProductOptionValueProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 12136,
									"typeArguments": [
										{
											"type": "reference",
											"target": 11876,
											"name": "FilterableProductOptionValueProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12138,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 11877,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search through the option values' values."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 852,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11878,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter product options by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 856,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 11879,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The values to filter product options by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 860,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11880,
						11881,
						11877,
						11878,
						11879
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 847,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 12136,
					"typeArguments": [
						{
							"type": "reference",
							"target": 11876,
							"name": "FilterableProductOptionValueProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 12001,
			"name": "FilterableProductCollectionProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on retrieved product collections."
					}
				]
			},
			"children": [
				{
					"id": 12006,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 12001,
									"name": "FilterableProductCollectionProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 12136,
									"typeArguments": [
										{
											"type": "reference",
											"target": 12001,
											"name": "FilterableProductCollectionProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12137,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 12007,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 12001,
									"name": "FilterableProductCollectionProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 12136,
									"typeArguments": [
										{
											"type": "reference",
											"target": 12001,
											"name": "FilterableProductCollectionProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12138,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 12002,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search through the collections' titles."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 876,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12003,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter product collections by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 880,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 12004,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handles to filter product collections by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 884,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 12005,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title to filter product collections by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 888,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12006,
						12007,
						12002,
						12003,
						12004,
						12005
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 871,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 12136,
					"typeArguments": [
						{
							"type": "reference",
							"target": 12001,
							"name": "FilterableProductCollectionProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 11923,
			"name": "FilterableProductVariantProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on retrieved product variants."
					}
				]
			},
			"children": [
				{
					"id": 11933,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 11923,
									"name": "FilterableProductVariantProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 12136,
									"typeArguments": [
										{
											"type": "reference",
											"target": 11923,
											"name": "FilterableProductVariantProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12137,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 11934,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 11923,
									"name": "FilterableProductVariantProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 12136,
									"typeArguments": [
										{
											"type": "reference",
											"target": 11923,
											"name": "FilterableProductVariantProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12138,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 11924,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search through the title and different code attributes on the variant"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 906,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11925,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter product variants by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 911,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 12140,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 11926,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The SKUs to filter product variants by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 916,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 12140,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 11927,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the product variants by their associated products' IDs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 920,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 12140,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 11928,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product variants by their associated options."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 925,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 11929,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 11930,
									"name": "value",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
											"line": 926,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 11931,
									"name": "option_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
											"line": 927,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 11932,
									"name": "option",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
											"line": 928,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										11930,
										11931,
										11932
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
									"line": 925,
									"character": 12
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11933,
						11934,
						11924,
						11925,
						11926,
						11927,
						11928
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 901,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 12136,
					"typeArguments": [
						{
							"type": "reference",
							"target": 11923,
							"name": "FilterableProductVariantProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 12042,
			"name": "FilterableProductCategoryProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on retrieved product categories."
					}
				]
			},
			"children": [
				{
					"id": 12052,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 12042,
									"name": "FilterableProductCategoryProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 12136,
									"typeArguments": [
										{
											"type": "reference",
											"target": 12042,
											"name": "FilterableProductCategoryProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12137,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 12053,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 12042,
									"name": "FilterableProductCategoryProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 12136,
									"typeArguments": [
										{
											"type": "reference",
											"target": 12042,
											"name": "FilterableProductCategoryProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12138,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 12043,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product categories based on searchable fields"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 950,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12044,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter product categories by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 954,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 12045,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The names to filter product categories by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 958,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 12046,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product categories by their parent category's ID."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 962,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 12047,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handles to filter product categories by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 966,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 12048,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product categories by whether they're active."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 970,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 12049,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product categories by whether they're internal."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 974,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 12050,
					"name": "include_descendants_tree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to include children of retrieved product categories."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 978,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 12051,
					"name": "include_ancestors_tree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to include parents of retrieved product categories."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 982,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12052,
						12053,
						12043,
						12044,
						12045,
						12046,
						12047,
						12048,
						12049,
						12050,
						12051
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 945,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 12136,
					"typeArguments": [
						{
							"type": "reference",
							"target": 12042,
							"name": "FilterableProductCategoryProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 12008,
			"name": "CreateProductCollectionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product collection to create."
					}
				]
			},
			"children": [
				{
					"id": 12009,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product collection's title."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 999,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12010,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product collection's handle. If not provided, the value of this attribute is set to the slug version of the title."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1003,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12011,
					"name": "product_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The products to associate with the collection."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1007,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 12012,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1011,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 12121,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12009,
						12010,
						12011,
						12012
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 995,
					"character": 17
				}
			]
		},
		{
			"id": 12013,
			"name": "UpsertProductCollectionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product collection to create or update."
					}
				]
			},
			"children": [
				{
					"id": 12014,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product collection to update. If not provided,\nthe product collection is created. In this case, the "
							},
							{
								"kind": "code",
								"text": "`title`"
							},
							{
								"kind": "text",
								"text": " property is\nrequired."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1025,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12015,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product collection."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1037,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12021,
						"name": "UpdateProductCollectionDTO.value"
					}
				},
				{
					"id": 12016,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product collection."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1041,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12022,
						"name": "UpdateProductCollectionDTO.title"
					}
				},
				{
					"id": 12017,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product collection."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1045,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12023,
						"name": "UpdateProductCollectionDTO.handle"
					}
				},
				{
					"id": 12018,
					"name": "product_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the products to associate with the product collection."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1049,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12024,
						"name": "UpdateProductCollectionDTO.product_ids"
					}
				},
				{
					"id": 12019,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1053,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 12121,
						"name": "MetadataType",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12025,
						"name": "UpdateProductCollectionDTO.metadata"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12014,
						12015,
						12016,
						12017,
						12018,
						12019
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 1019,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 12020,
					"name": "UpdateProductCollectionDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 12020,
			"name": "UpdateProductCollectionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a product collection. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which product collection to update."
					}
				]
			},
			"children": [
				{
					"id": 12021,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product collection."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1037,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12022,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product collection."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1041,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12023,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product collection."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1045,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12024,
					"name": "product_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the products to associate with the product collection."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1049,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 12025,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1053,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 12121,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12021,
						12022,
						12023,
						12024,
						12025
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 1033,
					"character": 17
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 12013,
					"name": "UpsertProductCollectionDTO"
				}
			]
		},
		{
			"id": 11836,
			"name": "CreateProductTypeDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product type to create."
					}
				]
			},
			"children": [
				{
					"id": 11837,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product type's value."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1065,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11838,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1069,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 12121,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11837,
						11838
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 1061,
					"character": 17
				}
			]
		},
		{
			"id": 11839,
			"name": "UpsertProductTypeDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product type to create or update"
					}
				]
			},
			"children": [
				{
					"id": 11840,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product type's ID. If provided, the product\ntag is updated. Otheriwse, it's created.\nIn that case, the "
							},
							{
								"kind": "code",
								"text": "`value`"
							},
							{
								"kind": "text",
								"text": " property is required."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1083,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11841,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The new value of the product type."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1095,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11844,
						"name": "UpdateProductTypeDTO.value"
					}
				},
				{
					"id": 11842,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1099,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 12121,
						"name": "MetadataType",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11845,
						"name": "UpdateProductTypeDTO.metadata"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11840,
						11841,
						11842
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 1077,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 11843,
					"name": "UpdateProductTypeDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 11843,
			"name": "UpdateProductTypeDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a product type. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which product type to update."
					}
				]
			},
			"children": [
				{
					"id": 11844,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The new value of the product type."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1095,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11845,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1099,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 12121,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11844,
						11845
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 1091,
					"character": 17
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 11839,
					"name": "UpsertProductTypeDTO"
				}
			]
		},
		{
			"id": 12162,
			"name": "UpsertProductImageDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product image to create or update."
					}
				]
			},
			"children": [
				{
					"id": 12163,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product image's ID. If not provided, the image is created. In\nthat case, the "
							},
							{
								"kind": "code",
								"text": "`url`"
							},
							{
								"kind": "text",
								"text": " property is required."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1128,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12164,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The new URL of the product image."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1140,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12219,
						"name": "UpdateProductImageDTO.url"
					}
				},
				{
					"id": 12165,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1144,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 12121,
						"name": "MetadataType",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12220,
						"name": "UpdateProductImageDTO.metadata"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12163,
						12164,
						12165
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 1123,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 12218,
					"name": "UpdateProductImageDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 12218,
			"name": "UpdateProductImageDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a product image. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which product image to update."
					}
				]
			},
			"children": [
				{
					"id": 12219,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The new URL of the product image."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1140,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12220,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1144,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 12121,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12219,
						12220
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 1136,
					"character": 17
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 12162,
					"name": "UpsertProductImageDTO"
				}
			]
		},
		{
			"id": 11816,
			"name": "CreateProductTagDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product tag to create."
					}
				]
			},
			"children": [
				{
					"id": 11817,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product tag."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1156,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11817
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 1152,
					"character": 17
				}
			]
		},
		{
			"id": 11818,
			"name": "UpsertProductTagDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product tag to create or update."
					}
				]
			},
			"children": [
				{
					"id": 11819,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product tag to update. If not provided, the tag\nis created. In that case, the "
							},
							{
								"kind": "code",
								"text": "`value`"
							},
							{
								"kind": "text",
								"text": " property is required."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1169,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11820,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product tag."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1182,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11822,
						"name": "UpdateProductTagDTO.value"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11819,
						11820
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 1164,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 11821,
					"name": "UpdateProductTagDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 11821,
			"name": "UpdateProductTagDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a product tag. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which product tag to update."
					}
				]
			},
			"children": [
				{
					"id": 11822,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product tag."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1182,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11822
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 1178,
					"character": 17
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 11818,
					"name": "UpsertProductTagDTO"
				}
			]
		},
		{
			"id": 11863,
			"name": "CreateProductOptionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product option to create."
					}
				]
			},
			"children": [
				{
					"id": 11864,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product option's title."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1194,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11865,
					"name": "values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product option values."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1198,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 11866,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1202,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11864,
						11865,
						11866
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 1190,
					"character": 17
				}
			]
		},
		{
			"id": 11891,
			"name": "CreateProductOptionValueDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 11892,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product option value."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1209,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11893,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The metadata of the product option value."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1213,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 12121,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11892,
						11893
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 1205,
					"character": 17
				}
			]
		},
		{
			"id": 11867,
			"name": "UpsertProductOptionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product option to create or update."
					}
				]
			},
			"children": [
				{
					"id": 11868,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product option to update. If not provided, the product\noption is created. In that case, the "
							},
							{
								"kind": "code",
								"text": "`title`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`values`"
							},
							{
								"kind": "text",
								"text": " properties are\nrequired."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1227,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11869,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product option's title."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1234,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11873,
						"name": "UpdateProductOptionDTO.title"
					}
				},
				{
					"id": 11870,
					"name": "values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product option values."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1238,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11874,
						"name": "UpdateProductOptionDTO.values"
					}
				},
				{
					"id": 11871,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1242,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11875,
						"name": "UpdateProductOptionDTO.product_id"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11868,
						11869,
						11870,
						11871
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 1221,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 11872,
					"name": "UpdateProductOptionDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 11872,
			"name": "UpdateProductOptionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 11873,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product option's title."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1234,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11874,
					"name": "values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product option values."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1238,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 11875,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1242,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11873,
						11874,
						11875
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 1230,
					"character": 17
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 11867,
					"name": "UpsertProductOptionDTO"
				}
			]
		},
		{
			"id": 11894,
			"name": "UpdateProductOptionValueDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 11895,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product option value."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1249,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11896,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The metadata of the product option value."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1253,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 12121,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11895,
						11896
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 1245,
					"character": 17
				}
			]
		},
		{
			"id": 12166,
			"name": "CreateProductVariantInventoryKit",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Inventory kit for creating a product variant."
					}
				]
			},
			"children": [
				{
					"id": 12167,
					"name": "inventory_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1262,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12168,
					"name": "required_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1263,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12167,
						12168
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 1261,
					"character": 17
				}
			]
		},
		{
			"id": 11935,
			"name": "CreateProductVariantDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product variant to create."
					}
				]
			},
			"children": [
				{
					"id": 11936,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the product"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1275,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11937,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tile of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1279,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11938,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The SKU of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1283,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11939,
					"name": "barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The barcode of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1287,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11940,
					"name": "ean",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The EAN of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1291,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11941,
					"name": "upc",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The UPC of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1295,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11942,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant can be ordered when it's out of stock."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1299,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 11943,
					"name": "manage_inventory",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant's inventory should be managed by the core system."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1303,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 11944,
					"name": "inventory_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The variant's inventory items. It's only\navailable if "
							},
							{
								"kind": "code",
								"text": "`manage_inventory`"
							},
							{
								"kind": "text",
								"text": " is enabled."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1308,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 12166,
							"name": "CreateProductVariantInventoryKit",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 11945,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS Code of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1312,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11946,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1316,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11947,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID Code of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1320,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11948,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1324,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11949,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1328,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 11950,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1332,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 11951,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1336,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 11952,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1340,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 11953,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The options of the variant. Each key is an option's title, and value\nis an option's value. If an option with the specified title doesn't exist,\na new one is created."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n`{ Color: \"Blue\" }`\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1349,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 11954,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1353,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 12121,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11936,
						11937,
						11938,
						11939,
						11940,
						11941,
						11942,
						11943,
						11944,
						11945,
						11946,
						11947,
						11948,
						11949,
						11950,
						11951,
						11952,
						11953,
						11954
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 1271,
					"character": 17
				}
			]
		},
		{
			"id": 11955,
			"name": "UpsertProductVariantDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product variant to create or update."
					}
				]
			},
			"children": [
				{
					"id": 11956,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product variant to update."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1369,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11957,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tile of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1381,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11975,
						"name": "UpdateProductVariantDTO.title"
					}
				},
				{
					"id": 11958,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The SKU of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1385,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11976,
						"name": "UpdateProductVariantDTO.sku"
					}
				},
				{
					"id": 11959,
					"name": "barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The barcode of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1389,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11977,
						"name": "UpdateProductVariantDTO.barcode"
					}
				},
				{
					"id": 11960,
					"name": "ean",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The EAN of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1393,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11978,
						"name": "UpdateProductVariantDTO.ean"
					}
				},
				{
					"id": 11961,
					"name": "upc",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The UPC of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1397,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11979,
						"name": "UpdateProductVariantDTO.upc"
					}
				},
				{
					"id": 11962,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant can be ordered when it's out of stock."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1401,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11980,
						"name": "UpdateProductVariantDTO.allow_backorder"
					}
				},
				{
					"id": 11963,
					"name": "manage_inventory",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant's inventory should be managed by the core system."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1405,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11981,
						"name": "UpdateProductVariantDTO.manage_inventory"
					}
				},
				{
					"id": 11964,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS Code of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1409,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11982,
						"name": "UpdateProductVariantDTO.hs_code"
					}
				},
				{
					"id": 11965,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1413,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11983,
						"name": "UpdateProductVariantDTO.origin_country"
					}
				},
				{
					"id": 11966,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID Code of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1417,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11984,
						"name": "UpdateProductVariantDTO.mid_code"
					}
				},
				{
					"id": 11967,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1421,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11985,
						"name": "UpdateProductVariantDTO.material"
					}
				},
				{
					"id": 11968,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1425,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11986,
						"name": "UpdateProductVariantDTO.weight"
					}
				},
				{
					"id": 11969,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1429,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11987,
						"name": "UpdateProductVariantDTO.length"
					}
				},
				{
					"id": 11970,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1433,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11988,
						"name": "UpdateProductVariantDTO.height"
					}
				},
				{
					"id": 11971,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1437,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11989,
						"name": "UpdateProductVariantDTO.width"
					}
				},
				{
					"id": 11972,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product variant options to associate with the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1441,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11990,
						"name": "UpdateProductVariantDTO.options"
					}
				},
				{
					"id": 11973,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1445,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 12121,
						"name": "MetadataType",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11991,
						"name": "UpdateProductVariantDTO.metadata"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11956,
						11957,
						11958,
						11959,
						11960,
						11961,
						11962,
						11963,
						11964,
						11965,
						11966,
						11967,
						11968,
						11969,
						11970,
						11971,
						11972,
						11973
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 1365,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 11974,
					"name": "UpdateProductVariantDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 11974,
			"name": "UpdateProductVariantDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a product variant. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which product variant to update."
					}
				]
			},
			"children": [
				{
					"id": 11975,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tile of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1381,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11976,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The SKU of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1385,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11977,
					"name": "barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The barcode of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1389,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11978,
					"name": "ean",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The EAN of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1393,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11979,
					"name": "upc",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The UPC of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1397,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11980,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant can be ordered when it's out of stock."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1401,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 11981,
					"name": "manage_inventory",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant's inventory should be managed by the core system."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1405,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 11982,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS Code of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1409,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11983,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1413,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11984,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID Code of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1417,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11985,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1421,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11986,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1425,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 11987,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1429,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 11988,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1433,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 11989,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1437,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 11990,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product variant options to associate with the product variant."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1441,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 11991,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1445,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 12121,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11975,
						11976,
						11977,
						11978,
						11979,
						11980,
						11981,
						11982,
						11983,
						11984,
						11985,
						11986,
						11987,
						11988,
						11989,
						11990,
						11991
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 1377,
					"character": 17
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 11955,
					"name": "UpsertProductVariantDTO"
				}
			]
		},
		{
			"id": 11719,
			"name": "CreateProductDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product to create."
					}
				]
			},
			"children": [
				{
					"id": 11720,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Optionally pass an ID when creating a product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1457,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11721,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1461,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11722,
					"name": "subtitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subttle of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1465,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11723,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1469,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11724,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product is a gift card."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1473,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 11725,
					"name": "discountable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product can be discounted."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1477,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 11726,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the product's thumbnail."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1481,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11727,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product. The handle can be used to create slug URL paths.\nIf not supplied, the value of the "
							},
							{
								"kind": "code",
								"text": "`handle`"
							},
							{
								"kind": "text",
								"text": " attribute of the product is set to the slug version of the "
							},
							{
								"kind": "code",
								"text": "`title`"
							},
							{
								"kind": "text",
								"text": " attribute."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1486,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11728,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1490,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 12112,
						"name": "ProductStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 11729,
					"name": "images",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated images to created or updated."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1494,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 12162,
							"name": "UpsertProductImageDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 11730,
					"name": "external_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the product in an external system"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1498,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11731,
					"name": "type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product type id to associate with the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1502,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11732,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product collection to associate with the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1506,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11733,
					"name": "tag_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tags to be associated with the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1510,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 11734,
					"name": "category_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product categories to associate with the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1514,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 11735,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product options to be created and associated with the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1518,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 11863,
							"name": "CreateProductOptionDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 11736,
					"name": "variants",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product variants to be created and associated with the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1522,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 11935,
							"name": "CreateProductVariantDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 11737,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1526,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 11738,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1530,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 11739,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1534,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 11740,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1538,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 11741,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1542,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11742,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS Code of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1546,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11743,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1550,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11744,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID Code of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1554,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11745,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1558,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 12121,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11720,
						11721,
						11722,
						11723,
						11724,
						11725,
						11726,
						11727,
						11728,
						11729,
						11730,
						11731,
						11732,
						11733,
						11734,
						11735,
						11736,
						11737,
						11738,
						11739,
						11740,
						11741,
						11742,
						11743,
						11744,
						11745
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 1453,
					"character": 17
				}
			]
		},
		{
			"id": 11746,
			"name": "UpsertProductDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product to be created or updated."
					}
				]
			},
			"children": [
				{
					"id": 11747,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product to update. If not provided, a product\nis created instead. In that case, the "
							},
							{
								"kind": "code",
								"text": "`title`"
							},
							{
								"kind": "text",
								"text": " property is required."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1569,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11748,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1581,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11774,
						"name": "UpdateProductDTO.title"
					}
				},
				{
					"id": 11749,
					"name": "subtitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subttle of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1585,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11775,
						"name": "UpdateProductDTO.subtitle"
					}
				},
				{
					"id": 11750,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1589,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11776,
						"name": "UpdateProductDTO.description"
					}
				},
				{
					"id": 11751,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product is a gift card."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1593,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11777,
						"name": "UpdateProductDTO.is_giftcard"
					}
				},
				{
					"id": 11752,
					"name": "discountable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product can be discounted."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1597,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11778,
						"name": "UpdateProductDTO.discountable"
					}
				},
				{
					"id": 11753,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the product's thumbnail."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1601,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11779,
						"name": "UpdateProductDTO.thumbnail"
					}
				},
				{
					"id": 11754,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product. The handle can be used to create slug URL paths.\nIf not supplied, the value of the "
							},
							{
								"kind": "code",
								"text": "`handle`"
							},
							{
								"kind": "text",
								"text": " attribute of the product is set to the slug version of the "
							},
							{
								"kind": "code",
								"text": "`title`"
							},
							{
								"kind": "text",
								"text": " attribute."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1606,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11780,
						"name": "UpdateProductDTO.handle"
					}
				},
				{
					"id": 11755,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1610,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 12112,
						"name": "ProductStatus",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11781,
						"name": "UpdateProductDTO.status"
					}
				},
				{
					"id": 11756,
					"name": "images",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated images to create or update."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1614,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 12162,
							"name": "UpsertProductImageDTO",
							"package": "@medusajs/types"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11782,
						"name": "UpdateProductDTO.images"
					}
				},
				{
					"id": 11757,
					"name": "external_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the product in an external system"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1618,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11783,
						"name": "UpdateProductDTO.external_id"
					}
				},
				{
					"id": 11758,
					"name": "type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product type to associate with the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1622,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11784,
						"name": "UpdateProductDTO.type_id"
					}
				},
				{
					"id": 11759,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product collection to associate with the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1626,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11785,
						"name": "UpdateProductDTO.collection_id"
					}
				},
				{
					"id": 11760,
					"name": "tag_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tags to associate with the product"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1630,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11786,
						"name": "UpdateProductDTO.tag_ids"
					}
				},
				{
					"id": 11761,
					"name": "category_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product categories to associate with the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1634,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11787,
						"name": "UpdateProductDTO.category_ids"
					}
				},
				{
					"id": 11762,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated options to create or update."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1638,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 11867,
							"name": "UpsertProductOptionDTO",
							"package": "@medusajs/types"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11788,
						"name": "UpdateProductDTO.options"
					}
				},
				{
					"id": 11763,
					"name": "variants",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product variants to be created and associated with the product.\nYou can also update existing product variants associated with the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1643,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 11955,
							"name": "UpsertProductVariantDTO",
							"package": "@medusajs/types"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11789,
						"name": "UpdateProductDTO.variants"
					}
				},
				{
					"id": 11764,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1647,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11790,
						"name": "UpdateProductDTO.width"
					}
				},
				{
					"id": 11765,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1651,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11791,
						"name": "UpdateProductDTO.height"
					}
				},
				{
					"id": 11766,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1655,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11792,
						"name": "UpdateProductDTO.length"
					}
				},
				{
					"id": 11767,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1659,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11793,
						"name": "UpdateProductDTO.weight"
					}
				},
				{
					"id": 11768,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1663,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11794,
						"name": "UpdateProductDTO.origin_country"
					}
				},
				{
					"id": 11769,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS Code of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1667,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11795,
						"name": "UpdateProductDTO.hs_code"
					}
				},
				{
					"id": 11770,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1671,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11796,
						"name": "UpdateProductDTO.material"
					}
				},
				{
					"id": 11771,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID Code of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1675,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11797,
						"name": "UpdateProductDTO.mid_code"
					}
				},
				{
					"id": 11772,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1679,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 12121,
						"name": "MetadataType",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11798,
						"name": "UpdateProductDTO.metadata"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11747,
						11748,
						11749,
						11750,
						11751,
						11752,
						11753,
						11754,
						11755,
						11756,
						11757,
						11758,
						11759,
						11760,
						11761,
						11762,
						11763,
						11764,
						11765,
						11766,
						11767,
						11768,
						11769,
						11770,
						11771,
						11772
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 1564,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 11773,
					"name": "UpdateProductDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 11773,
			"name": "UpdateProductDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a product."
					}
				]
			},
			"children": [
				{
					"id": 11774,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1581,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11775,
					"name": "subtitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subttle of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1585,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11776,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1589,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11777,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product is a gift card."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1593,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 11778,
					"name": "discountable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product can be discounted."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1597,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 11779,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the product's thumbnail."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1601,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11780,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product. The handle can be used to create slug URL paths.\nIf not supplied, the value of the "
							},
							{
								"kind": "code",
								"text": "`handle`"
							},
							{
								"kind": "text",
								"text": " attribute of the product is set to the slug version of the "
							},
							{
								"kind": "code",
								"text": "`title`"
							},
							{
								"kind": "text",
								"text": " attribute."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1606,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11781,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1610,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 12112,
						"name": "ProductStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 11782,
					"name": "images",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated images to create or update."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1614,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 12162,
							"name": "UpsertProductImageDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 11783,
					"name": "external_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the product in an external system"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1618,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11784,
					"name": "type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product type to associate with the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1622,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11785,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product collection to associate with the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1626,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11786,
					"name": "tag_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tags to associate with the product"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1630,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 11787,
					"name": "category_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product categories to associate with the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1634,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 11788,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated options to create or update."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1638,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 11867,
							"name": "UpsertProductOptionDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 11789,
					"name": "variants",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product variants to be created and associated with the product.\nYou can also update existing product variants associated with the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1643,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 11955,
							"name": "UpsertProductVariantDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 11790,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1647,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 11791,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1651,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 11792,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1655,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 11793,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1659,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 11794,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1663,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11795,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS Code of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1667,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11796,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1671,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11797,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID Code of the product."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1675,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11798,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
							"line": 1679,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 12121,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11774,
						11775,
						11776,
						11777,
						11778,
						11779,
						11780,
						11781,
						11782,
						11783,
						11784,
						11785,
						11786,
						11787,
						11788,
						11789,
						11790,
						11791,
						11792,
						11793,
						11794,
						11795,
						11796,
						11797,
						11798
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/product/common.ts",
					"line": 1577,
					"character": 17
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 11746,
					"name": "UpsertProductDTO"
				}
			]
		},
		{
			"id": 11184,
			"name": "IProductModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The main service interface for the Product Module."
					}
				]
			},
			"children": [
				{
					"id": 11185,
					"name": "retrieveProduct",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 81,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L81"
						}
					],
					"signatures": [
						{
							"id": 11186,
							"name": "retrieveProduct",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a product by its ID"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved product."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a product by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst product =\n  await productModuleService.retrieveProduct(\"prod_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst product = await productModuleService.retrieveProduct(\n  \"prod_123\",\n  {\n    relations: [\"categories\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 81,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L81"
								}
							],
							"parameters": [
								{
									"id": 11187,
									"name": "productId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the product to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 11188,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11632,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11643,
												"name": "ProductDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11189,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 11643,
										"name": "ProductDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11190,
					"name": "listProducts",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 134,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L134"
						}
					],
					"signatures": [
						{
							"id": 11191,
							"name": "listProducts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of products based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of products."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of products using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst products = await productModuleService.listProducts({\n  id: [\"prod_123\", \"prod_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the products:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst products = await productModuleService.listProducts(\n  {\n    id: [\"prod_123\", \"prod_321\"],\n  },\n  {\n    relations: [\"categories\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst products = await productModuleService.listProducts(\n  {\n    id: [\"prod_123\", \"prod_321\"],\n  },\n  {\n    relations: [\"categories\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 134,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L134"
								}
							],
							"parameters": [
								{
									"id": 11192,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved products."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11688,
										"name": "FilterableProductProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11193,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the products are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11632,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11643,
												"name": "ProductDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11194,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11643,
											"name": "ProductDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11195,
					"name": "listAndCountProducts",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 190,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L190"
						}
					],
					"signatures": [
						{
							"id": 11196,
							"name": "listAndCountProducts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of products along with the total count of available products satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of products along with the total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of products using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [products, count] =\n  await productModuleService.listAndCountProducts({\n    id: [\"prod_123\", \"prod_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the products:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [products, count] =\n  await productModuleService.listAndCountProducts(\n    {\n      id: [\"prod_123\", \"prod_321\"],\n    },\n    {\n      relations: [\"categories\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [products, count] =\n  await productModuleService.listAndCountProducts(\n    {\n      id: [\"prod_123\", \"prod_321\"],\n    },\n    {\n      relations: [\"categories\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 190,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L190"
								}
							],
							"parameters": [
								{
									"id": 11197,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved products."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11688,
										"name": "FilterableProductProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11198,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the products are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11632,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11643,
												"name": "ProductDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11199,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 11643,
													"name": "ProductDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11200,
					"name": "createProducts",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 214,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L214"
						},
						{
							"fileName": "product/service.ts",
							"line": 231,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L231"
						}
					],
					"signatures": [
						{
							"id": 11201,
							"name": "createProducts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a list of products."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of created products."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst products = await productModuleService.createProducts([\n  {\n    title: \"Shirt\",\n  },\n  {\n    title: \"Pants\",\n    handle: \"pants\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 214,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L214"
								}
							],
							"parameters": [
								{
									"id": 11202,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The products to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11719,
											"name": "CreateProductDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 11203,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11643,
											"name": "ProductDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 11204,
							"name": "createProducts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a product."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created product."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst product = await productModuleService.createProducts({\n  title: \"Shirt\",\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 231,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L231"
								}
							],
							"parameters": [
								{
									"id": 11205,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11719,
										"name": "CreateProductDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11206,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 11643,
										"name": "ProductDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11207,
					"name": "upsertProducts",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 254,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L254"
						},
						{
							"fileName": "product/service.ts",
							"line": 271,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L271"
						}
					],
					"signatures": [
						{
							"id": 11208,
							"name": "upsertProducts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing products, or creates new ones if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated and created products."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst products = await productModuleService.upsertProducts([\n  {\n    id: \"prod_123\",\n    handle: \"pant\",\n  },\n  {\n    title: \"Shirt\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 254,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L254"
								}
							],
							"parameters": [
								{
									"id": 11209,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for each product."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11746,
											"name": "UpsertProductDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 11210,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11643,
											"name": "ProductDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 11211,
							"name": "upsertProducts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates the product if it exists, or creates a new ones if it doesn't."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated or created product."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst product = await productModuleService.upsertProducts({\n  title: \"Shirt\",\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 271,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L271"
								}
							],
							"parameters": [
								{
									"id": 11212,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for the new product."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11746,
										"name": "UpsertProductDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11213,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 11643,
										"name": "ProductDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11214,
					"name": "updateProducts",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 292,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L292"
						},
						{
							"fileName": "product/service.ts",
							"line": 316,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L316"
						}
					],
					"signatures": [
						{
							"id": 11215,
							"name": "updateProducts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a product."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated product."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst product = await productModuleService.updateProducts(\n  \"prod_123\",\n  {\n    handle: \"pant\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 292,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L292"
								}
							],
							"parameters": [
								{
									"id": 11216,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the product to be updated."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 11217,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the product to be updated"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11773,
										"name": "UpdateProductDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11218,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 11643,
										"name": "ProductDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 11219,
							"name": "updateProducts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a list of products matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated products."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst products = await productModuleService.updateProducts(\n  {\n    title: \"Pant\",\n  },\n  {\n    handle: \"pant\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 316,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L316"
								}
							],
							"parameters": [
								{
									"id": 11220,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which products to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11688,
										"name": "FilterableProductProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11221,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to be updated on the selected products"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11773,
										"name": "UpdateProductDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11222,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11643,
											"name": "ProductDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11223,
					"name": "deleteProducts",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 332,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L332"
						}
					],
					"signatures": [
						{
							"id": 11224,
							"name": "deleteProducts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete products. Unlike the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "softDelete"
									},
									{
										"kind": "text",
										"text": " method, this method will completely remove the products and they can no longer be accessed or retrieved."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the products are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.deleteProducts([\"prod_123\", \"prod_321\"])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 332,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L332"
								}
							],
							"parameters": [
								{
									"id": 11225,
									"name": "productIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the products to be deleted."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11226,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11227,
					"name": "softDeleteProducts",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 355,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L355"
						}
					],
					"signatures": [
						{
							"id": 11228,
							"name": "softDeleteProducts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete products. Unlike the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "delete"
									},
									{
										"kind": "text",
										"text": " method, this method won't completely remove the product. It can still be accessed or retrieved using methods like "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "retrieve"
									},
									{
										"kind": "text",
										"text": " if you pass the "
									},
									{
										"kind": "code",
										"text": "`withDeleted`"
									},
									{
										"kind": "text",
										"text": " property to the "
									},
									{
										"kind": "code",
										"text": "`config`"
									},
									{
										"kind": "text",
										"text": " object parameter.\n\nThe soft-deleted products can be restored using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "restore"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted, such as the ID of associated product variants. The object's keys are the ID attribute names of the product entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`variant_id`"
											},
											{
												"kind": "text",
												"text": ", and its value is an array of strings, each being the ID of a record associated with the product through this relation, such as the IDs of associated product variants.\n\nIf there are no related records, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.softDeleteProducts([\n  \"prod_123\",\n  \"prod_321\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 355,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L355"
								}
							],
							"typeParameters": [
								{
									"id": 11229,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 11230,
									"name": "productIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the products to soft-delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11231,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to soft delete along with the each of the products. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the product's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`variant_id`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11799,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11229,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11232,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11233,
					"name": "restoreProducts",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 377,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L377"
						}
					],
					"signatures": [
						{
							"id": 11234,
							"name": "restoreProducts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to restore products which were deleted using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "softDelete"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored, such as the ID of associated product variants. The object's keys are the ID attribute names of the product entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`variant_id`"
											},
											{
												"kind": "text",
												"text": ", and its value is an array of strings, each being the ID of the record associated with the product through this relation, such as the IDs of associated product variants.\n\nIf there are no related records that were restored, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.restoreProducts([\"prod_123\", \"prod_321\"])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 377,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L377"
								}
							],
							"typeParameters": [
								{
									"id": 11235,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 11236,
									"name": "productIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the products to restore."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11237,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the products. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the product's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`variant_id`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11802,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11235,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11238,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11239,
					"name": "retrieveProductTag",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 411,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L411"
						}
					],
					"signatures": [
						{
							"id": 11240,
							"name": "retrieveProductTag",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a tag by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved product tag."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a product tag by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst tag = await productModuleService.retrieveProductTag(\"ptag_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst tag = await productModuleService.retrieveProductTag(\n  \"ptag_123\",\n  {\n    relations: [\"products\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 411,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L411"
								}
							],
							"parameters": [
								{
									"id": 11241,
									"name": "tagId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the tag to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 11242,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product tag is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product tag."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11632,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11805,
												"name": "ProductTagDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11243,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 11805,
										"name": "ProductTagDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11244,
					"name": "listProductTags",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 464,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L464"
						}
					],
					"signatures": [
						{
							"id": 11245,
							"name": "listProductTags",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of tags based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product tags."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product tags using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst tags = await productModuleService.listProductTags({\n  id: [\"ptag_123\", \"ptag_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product tags:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst tags = await productModuleService.listProductTags(\n  {\n    id: [\"ptag_123\", \"ptag_321\"],\n  },\n  {\n    relations: [\"products\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst tags = await productModuleService.listProductTags(\n  {\n    id: [\"ptag_123\", \"ptag_321\"],\n  },\n  {\n    relations: [\"products\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 464,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L464"
								}
							],
							"parameters": [
								{
									"id": 11246,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters applied on the retrieved product tags."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11810,
										"name": "FilterableProductTagProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11247,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product tags are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product tag."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11632,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11805,
												"name": "ProductTagDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11248,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11805,
											"name": "ProductTagDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11249,
					"name": "listAndCountProductTags",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 520,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L520"
						}
					],
					"signatures": [
						{
							"id": 11250,
							"name": "listAndCountProductTags",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product tags along with the total count of available product tags satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product tags along with the total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product tags using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [tags, count] =\n  await productModuleService.listAndCountProductTags({\n    id: [\"ptag_123\", \"ptag_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product tags:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [tags, count] =\n  await productModuleService.listAndCountProductTags(\n    {\n      id: [\"ptag_123\", \"ptag_321\"],\n    },\n    {\n      relations: [\"products\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [tags, count] =\n  await productModuleService.listAndCountProductTags(\n    {\n      id: [\"ptag_123\", \"ptag_321\"],\n    },\n    {\n      relations: [\"products\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 520,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L520"
								}
							],
							"parameters": [
								{
									"id": 11251,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters applied on the retrieved product tags."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11810,
										"name": "FilterableProductTagProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11252,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product tags are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product tag."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11632,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11805,
												"name": "ProductTagDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11253,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 11805,
													"name": "ProductTagDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11254,
					"name": "createProductTags",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 540,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L540"
						},
						{
							"fileName": "product/service.ts",
							"line": 558,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L558"
						}
					],
					"signatures": [
						{
							"id": 11255,
							"name": "createProductTags",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a product tag."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of created product tags."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productTags = await productModuleService.createProductTags([\n  {\n    value: \"digital\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 540,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L540"
								}
							],
							"parameters": [
								{
									"id": 11256,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product tags to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11816,
											"name": "CreateProductTagDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 11257,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11805,
											"name": "ProductTagDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 11258,
							"name": "createProductTags",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a product tag."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created product tag."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productTag = await productModuleService.createProductTags({\n  value: \"digital\",\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 558,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L558"
								}
							],
							"parameters": [
								{
									"id": 11259,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product tag to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11816,
										"name": "CreateProductTagDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11260,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 11805,
										"name": "ProductTagDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11261,
					"name": "upsertProductTags",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 583,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L583"
						},
						{
							"fileName": "product/service.ts",
							"line": 603,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L603"
						}
					],
					"signatures": [
						{
							"id": 11262,
							"name": "upsertProductTags",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing tags, or creates new ones if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated and created tags."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productTags = await productModuleService.upsertProductTags([\n  {\n    id: \"ptag_123\",\n    metadata: {\n      test: true,\n    },\n  },\n  {\n    value: \"Digital\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 583,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L583"
								}
							],
							"parameters": [
								{
									"id": 11263,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for each tag."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11818,
											"name": "UpsertProductTagDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 11264,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11805,
											"name": "ProductTagDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 11265,
							"name": "upsertProductTags",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing tag, or creates a new one if it doesn't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated or created tag."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productTag = await productModuleService.upsertProductTags({\n  id: \"ptag_123\",\n  metadata: {\n    test: true,\n  },\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 603,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L603"
								}
							],
							"parameters": [
								{
									"id": 11266,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for the tag."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11818,
										"name": "UpsertProductTagDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11267,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 11805,
										"name": "ProductTagDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11268,
					"name": "updateProductTags",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 624,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L624"
						},
						{
							"fileName": "product/service.ts",
							"line": 648,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L648"
						}
					],
					"signatures": [
						{
							"id": 11269,
							"name": "updateProductTags",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a tag."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated tag."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productTag = await productModuleService.updateProductTags(\n  \"ptag_123\",\n  {\n    value: \"Digital\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 624,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L624"
								}
							],
							"parameters": [
								{
									"id": 11270,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the tag to be updated."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 11271,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the tag to be updated"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11821,
										"name": "UpdateProductTagDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11272,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 11805,
										"name": "ProductTagDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 11273,
							"name": "updateProductTags",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a list of tags matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated tags."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productTags = await productModuleService.updateProductTags(\n  {\n    id: [\"ptag_123\", \"ptag_321\"],\n  },\n  {\n    value: \"Digital\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 648,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L648"
								}
							],
							"parameters": [
								{
									"id": 11274,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which tags to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11810,
										"name": "FilterableProductTagProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11275,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to be updated on the selected tags"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11821,
										"name": "UpdateProductTagDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11276,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11805,
											"name": "ProductTagDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11277,
					"name": "deleteProductTags",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 667,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L667"
						}
					],
					"signatures": [
						{
							"id": 11278,
							"name": "deleteProductTags",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete product tags by their ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the product tags are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.deleteProductTags([\n  \"ptag_123\",\n  \"ptag_321\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 667,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L667"
								}
							],
							"parameters": [
								{
									"id": 11279,
									"name": "productTagIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the product tags to be deleted."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11280,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11281,
					"name": "softDeleteProductTags",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 693,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L693"
						}
					],
					"signatures": [
						{
							"id": 11282,
							"name": "softDeleteProductTags",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete tags. Unlike the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "delete"
									},
									{
										"kind": "text",
										"text": " method, this method won't completely remove the tag. It can still be accessed or retrieved using methods like "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "retrieve"
									},
									{
										"kind": "text",
										"text": " if you pass the "
									},
									{
										"kind": "code",
										"text": "`withDeleted`"
									},
									{
										"kind": "text",
										"text": " property to the "
									},
									{
										"kind": "code",
										"text": "`config`"
									},
									{
										"kind": "text",
										"text": " object parameter.\n\nThe soft-deleted tags can be restored using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "restore"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted. The object's keys are the ID attribute names of the tag entity's relations, and its value is an array of strings, each being the ID of a record associated with the tag through this relation.\n\nIf there are no related records, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.softDeleteProductTags([\n  \"ptag_123\",\n  \"ptag_321\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 693,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L693"
								}
							],
							"typeParameters": [
								{
									"id": 11283,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 11284,
									"name": "tagIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the tags to soft-delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11285,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to soft delete along with the each of the tags. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the tag's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11799,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11283,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11286,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11287,
					"name": "restoreProductTags",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 718,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L718"
						}
					],
					"signatures": [
						{
							"id": 11288,
							"name": "restoreProductTags",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to restore tags which were deleted using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "softDelete"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored. The object's keys are the ID attribute names of the tag entity's relations, and its value is an array of strings, each being the ID of the record associated with the tag through this relation.\n\nIf there are no related records that were restored, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.restoreProductTags([\n  \"ptag_123\",\n  \"ptag_321\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 718,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L718"
								}
							],
							"typeParameters": [
								{
									"id": 11289,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 11290,
									"name": "tagIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the tags to restore."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11291,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the tags. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the tag's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11802,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11289,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11292,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11293,
					"name": "retrieveProductType",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 738,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L738"
						}
					],
					"signatures": [
						{
							"id": 11294,
							"name": "retrieveProductType",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a product type by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved product type."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productType =\n  await productModuleService.retrieveProductType(\"ptyp_123\")\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 738,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L738"
								}
							],
							"parameters": [
								{
									"id": 11295,
									"name": "typeId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the product type to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 11296,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product type is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product type."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11632,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11823,
												"name": "ProductTypeDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11297,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 11823,
										"name": "ProductTypeDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11298,
					"name": "listProductTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 777,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L777"
						}
					],
					"signatures": [
						{
							"id": 11299,
							"name": "listProductTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product types based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product types."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product types using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst productTypes = await productModuleService.listProductTypes({\n  id: [\"ptyp_123\", \"ptyp_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst productTypes = await productModuleService.listProductTypes(\n  {\n    id: [\"ptyp_123\", \"ptyp_321\"],\n  },\n  {\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 777,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L777"
								}
							],
							"parameters": [
								{
									"id": 11300,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved product types."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11830,
										"name": "FilterableProductTypeProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11301,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product types are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product type."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11632,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11823,
												"name": "ProductTypeDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11302,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11823,
											"name": "ProductTypeDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11303,
					"name": "listAndCountProductTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 818,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L818"
						}
					],
					"signatures": [
						{
							"id": 11304,
							"name": "listAndCountProductTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product types along with the total count of available product types satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product types along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product types using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [productTypes, count] =\n  await productModuleService.listAndCountProductTypes({\n    id: [\"ptyp_123\", \"ptyp_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [productTypes, count] =\n  await productModuleService.listAndCountProductTypes(\n    {\n      id: [\"ptyp_123\", \"ptyp_321\"],\n    },\n    {\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 818,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L818"
								}
							],
							"parameters": [
								{
									"id": 11305,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to be applied on the retrieved product type."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11830,
										"name": "FilterableProductTypeProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11306,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product types are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product type."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11632,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11823,
												"name": "ProductTypeDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11307,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 11823,
													"name": "ProductTypeDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11308,
					"name": "createProductTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 838,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L838"
						},
						{
							"fileName": "product/service.ts",
							"line": 856,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L856"
						}
					],
					"signatures": [
						{
							"id": 11309,
							"name": "createProductTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a product type."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of created product types."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productTypes = await productModuleService.createProductTypes([\n  {\n    value: \"digital\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 838,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L838"
								}
							],
							"parameters": [
								{
									"id": 11310,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product types to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11836,
											"name": "CreateProductTypeDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 11311,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11823,
											"name": "ProductTypeDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 11312,
							"name": "createProductTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a product type."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created product type."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productType = await productModuleService.createProductTypes({\n  value: \"digital\",\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 856,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L856"
								}
							],
							"parameters": [
								{
									"id": 11313,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product type to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11836,
										"name": "CreateProductTypeDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11314,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 11823,
										"name": "ProductTypeDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11315,
					"name": "upsertProductTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 881,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L881"
						},
						{
							"fileName": "product/service.ts",
							"line": 901,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L901"
						}
					],
					"signatures": [
						{
							"id": 11316,
							"name": "upsertProductTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing types, or creates new ones if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated and created types."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productTypes = await productModuleService.upsertProductTypes([\n  {\n    id: \"ptyp_123\",\n    metadata: {\n      test: true,\n    },\n  },\n  {\n    value: \"Digital\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 881,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L881"
								}
							],
							"parameters": [
								{
									"id": 11317,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for each type."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11839,
											"name": "UpsertProductTypeDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 11318,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11823,
											"name": "ProductTypeDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 11319,
							"name": "upsertProductTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing type, or creates a new one if it doesn't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated or created type."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productType = await productModuleService.upsertProductTypes({\n  id: \"ptyp_123\",\n  metadata: {\n    test: true,\n  },\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 901,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L901"
								}
							],
							"parameters": [
								{
									"id": 11320,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for the type."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11839,
										"name": "UpsertProductTypeDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11321,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 11823,
										"name": "ProductTypeDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11322,
					"name": "updateProductTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 922,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L922"
						},
						{
							"fileName": "product/service.ts",
							"line": 946,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L946"
						}
					],
					"signatures": [
						{
							"id": 11323,
							"name": "updateProductTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a type."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated type."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productType = await productModuleService.updateProductTypes(\n  \"ptyp_123\",\n  {\n    value: \"Digital\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 922,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L922"
								}
							],
							"parameters": [
								{
									"id": 11324,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the type to be updated."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 11325,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the type to be updated"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11843,
										"name": "UpdateProductTypeDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11326,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 11823,
										"name": "ProductTypeDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 11327,
							"name": "updateProductTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a list of types matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated types."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productTypes = await productModuleService.updateProductTypes(\n  {\n    id: [\"ptyp_123\", \"ptyp_321\"],\n  },\n  {\n    value: \"Digital\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 946,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L946"
								}
							],
							"parameters": [
								{
									"id": 11328,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which types to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11830,
										"name": "FilterableProductTypeProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11329,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to be updated on the selected types"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11843,
										"name": "UpdateProductTypeDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11330,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11823,
											"name": "ProductTypeDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11331,
					"name": "deleteProductTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 965,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L965"
						}
					],
					"signatures": [
						{
							"id": 11332,
							"name": "deleteProductTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete a product type."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the product types are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.deleteProductTypes([\n  \"ptyp_123\",\n  \"ptyp_321\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 965,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L965"
								}
							],
							"parameters": [
								{
									"id": 11333,
									"name": "productTypeIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the product types to be deleted."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11334,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11335,
					"name": "softDeleteProductTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 991,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L991"
						}
					],
					"signatures": [
						{
							"id": 11336,
							"name": "softDeleteProductTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete types. Unlike the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "delete"
									},
									{
										"kind": "text",
										"text": " method, this method won't completely remove the type. It can still be accessed or retrieved using methods like "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "retrieve"
									},
									{
										"kind": "text",
										"text": " if you pass the "
									},
									{
										"kind": "code",
										"text": "`withDeleted`"
									},
									{
										"kind": "text",
										"text": " property to the "
									},
									{
										"kind": "code",
										"text": "`config`"
									},
									{
										"kind": "text",
										"text": " object parameter.\n\nThe soft-deleted types can be restored using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "restore"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted. The object's keys are the ID attribute names of the type entity's relations, and its value is an array of strings, each being the ID of a record associated with the type through this relation.\n\nIf there are no related records, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.softDeleteProductTypes([\n  \"ptyp_123\",\n  \"ptyp_321\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 991,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L991"
								}
							],
							"typeParameters": [
								{
									"id": 11337,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 11338,
									"name": "typeIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the types to soft-delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11339,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to soft delete along with the each of the types. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the type's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11799,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11337,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11340,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11341,
					"name": "restoreProductTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 1016,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1016"
						}
					],
					"signatures": [
						{
							"id": 11342,
							"name": "restoreProductTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to restore types which were deleted using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "softDelete"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored. The object's keys are the ID attribute names of the type entity's relations, and its value is an array of strings, each being the ID of the record associated with the type through this relation.\n\nIf there are no related records that were restored, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.restoreProductTypes([\n  \"ptyp_123\",\n  \"ptyp_321\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 1016,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1016"
								}
							],
							"typeParameters": [
								{
									"id": 11343,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 11344,
									"name": "typeIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the types to restore."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11345,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the types. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the type's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11802,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11343,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11346,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11347,
					"name": "retrieveProductOption",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 1051,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1051"
						}
					],
					"signatures": [
						{
							"id": 11348,
							"name": "retrieveProductOption",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a product option by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved product option."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a product option by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst option =\n  await productModuleService.retrieveProductOption(\"opt_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst option = await productModuleService.retrieveProductOption(\n  \"opt_123\",\n  {\n    relations: [\"product\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 1051,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1051"
								}
							],
							"parameters": [
								{
									"id": 11349,
									"name": "optionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the product option to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 11350,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product option is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product option."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11632,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11846,
												"name": "ProductOptionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11351,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 11846,
										"name": "ProductOptionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11352,
					"name": "listProductOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 1105,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1105"
						}
					],
					"signatures": [
						{
							"id": 11353,
							"name": "listProductOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product options based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product options."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product options using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst options = await productModuleService.listProductOptions({\n id: [\"opt_123\", \"opt_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product options:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst options = await productModuleService.listProductOptions(\n  {\n    id: [\"opt_123\", \"opt_321\"],\n  },\n  {\n    relations: [\"product\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst options = await productModuleService.listProductOptions(\n  {\n    id: [\"opt_123\", \"opt_321\"],\n  },\n  {\n    relations: [\"product\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 1105,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1105"
								}
							],
							"parameters": [
								{
									"id": 11354,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters applied on the retrieved product options."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11856,
										"name": "FilterableProductOptionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11355,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product options are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product option."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11632,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11846,
												"name": "ProductOptionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11356,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11846,
											"name": "ProductOptionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11357,
					"name": "listAndCountProductOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 1161,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1161"
						}
					],
					"signatures": [
						{
							"id": 11358,
							"name": "listAndCountProductOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product options along with the total count of available product options satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product options along with the total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product options using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [options, count] =\n  await productModuleService.listAndCountProductOptions({\n    id: [\"opt_123\", \"opt_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product types:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [options, count] =\n  await productModuleService.listAndCountProductOptions(\n    {\n      id: [\"opt_123\", \"opt_321\"],\n    },\n    {\n      relations: [\"product\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [options, count] =\n  await productModuleService.listAndCountProductOptions(\n    {\n      id: [\"opt_123\", \"opt_321\"],\n    },\n    {\n      relations: [\"product\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 1161,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1161"
								}
							],
							"parameters": [
								{
									"id": 11359,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters applied on the retrieved product options."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11856,
										"name": "FilterableProductOptionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11360,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product options are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product option."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11632,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11846,
												"name": "ProductOptionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11361,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 11846,
													"name": "ProductOptionDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11362,
					"name": "createProductOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 1189,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1189"
						},
						{
							"fileName": "product/service.ts",
							"line": 1209,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1209"
						}
					],
					"signatures": [
						{
							"id": 11363,
							"name": "createProductOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create product options."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of created product options."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst options = await productModuleService.createProductOptions([\n  {\n    title: \"Color\",\n    values: [\"Blue\", \"Green\"],\n    product_id: \"prod_123\",\n  },\n  {\n    title: \"Size\",\n    values: [\"Small\", \"Medium\"],\n    product_id: \"prod_321\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 1189,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1189"
								}
							],
							"parameters": [
								{
									"id": 11364,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product options to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11863,
											"name": "CreateProductOptionDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 11365,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11846,
											"name": "ProductOptionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 11366,
							"name": "createProductOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a product option."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created product option."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst option = await productModuleService.createProductOptions({\n  title: \"Color\",\n  values: [\"Blue\", \"Green\"],\n  product_id: \"prod_123\",\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 1209,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1209"
								}
							],
							"parameters": [
								{
									"id": 11367,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product option to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11863,
										"name": "CreateProductOptionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11368,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 11846,
										"name": "ProductOptionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11369,
					"name": "upsertProductOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 1234,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1234"
						},
						{
							"fileName": "product/service.ts",
							"line": 1252,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1252"
						}
					],
					"signatures": [
						{
							"id": 11370,
							"name": "upsertProductOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing options, or creates new ones if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated and created options."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst options = await productModuleService.upsertProductOptions([\n  {\n    id: \"opt_123\",\n    title: \"Color\",\n  },\n  {\n    title: \"Color\",\n    values: [\"Blue\", \"Green\"],\n    product_id: \"prod_123\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 1234,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1234"
								}
							],
							"parameters": [
								{
									"id": 11371,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for each option."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11867,
											"name": "UpsertProductOptionDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 11372,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11846,
											"name": "ProductOptionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 11373,
							"name": "upsertProductOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing option, or creates a new one if it doesn't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated or created option."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst option = await productModuleService.upsertProductOptions({\n  id: \"opt_123\",\n  title: \"Color\",\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 1252,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1252"
								}
							],
							"parameters": [
								{
									"id": 11374,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for the option."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11867,
										"name": "UpsertProductOptionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11375,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 11846,
										"name": "ProductOptionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11376,
					"name": "updateProductOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 1273,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1273"
						},
						{
							"fileName": "product/service.ts",
							"line": 1297,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1297"
						}
					],
					"signatures": [
						{
							"id": 11377,
							"name": "updateProductOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a option."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated option."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst option = await productModuleService.updateProductOptions(\n  \"opt_123\",\n  {\n    title: \"Color\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 1273,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1273"
								}
							],
							"parameters": [
								{
									"id": 11378,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the option to be updated."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 11379,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the option to be updated"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11872,
										"name": "UpdateProductOptionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11380,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 11846,
										"name": "ProductOptionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 11381,
							"name": "updateProductOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a list of options matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated options."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst options = await productModuleService.updateProductOptions(\n  {\n    title: \"Color\",\n  },\n  {\n    values: [\"Blue\", \"Green\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 1297,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1297"
								}
							],
							"parameters": [
								{
									"id": 11382,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which options to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11856,
										"name": "FilterableProductOptionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11383,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to be updated on the selected options"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11872,
										"name": "UpdateProductOptionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11384,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11846,
											"name": "ProductOptionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11385,
					"name": "deleteProductOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 1316,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1316"
						}
					],
					"signatures": [
						{
							"id": 11386,
							"name": "deleteProductOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete a product option."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the product options are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.deleteProductOptions([\n  \"opt_123\",\n  \"opt_321\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 1316,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1316"
								}
							],
							"parameters": [
								{
									"id": 11387,
									"name": "productOptionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the product options to delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11388,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11389,
					"name": "softDeleteProductOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 1342,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1342"
						}
					],
					"signatures": [
						{
							"id": 11390,
							"name": "softDeleteProductOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete options. Unlike the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "delete"
									},
									{
										"kind": "text",
										"text": " method, this method won't completely remove the option. It can still be accessed or retrieved using methods like "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "retrieve"
									},
									{
										"kind": "text",
										"text": " if you pass the "
									},
									{
										"kind": "code",
										"text": "`withDeleted`"
									},
									{
										"kind": "text",
										"text": " property to the "
									},
									{
										"kind": "code",
										"text": "`config`"
									},
									{
										"kind": "text",
										"text": " object parameter.\n\nThe soft-deleted options can be restored using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "restore"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted. The object's keys are the ID attribute names of the option entity's relations, and its value is an array of strings, each being the ID of a record associated with the option through this relation.\n\nIf there are no related records, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.softDeleteProductOptions([\n  \"opt_123\",\n  \"opt_321\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 1342,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1342"
								}
							],
							"typeParameters": [
								{
									"id": 11391,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 11392,
									"name": "optionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the options to soft-delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11393,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to soft delete along with the each of the options. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the option's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`option_value_id`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11799,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11391,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11394,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11395,
					"name": "restoreProductOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 1367,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1367"
						}
					],
					"signatures": [
						{
							"id": 11396,
							"name": "restoreProductOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to restore options which were deleted using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "softDelete"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored. The object's keys are the ID attribute names of the option entity's relations, and its value is an array of strings, each being the ID of the record associated with the option through this relation.\n\nIf there are no related records that were restored, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.restoreProductOptions([\n  \"opt_123\",\n  \"opt_321\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 1367,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1367"
								}
							],
							"typeParameters": [
								{
									"id": 11397,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 11398,
									"name": "optionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the options to restore."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11399,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the options. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the option's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11802,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11397,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11400,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11401,
					"name": "listProductOptionValues",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 1417,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1417"
						}
					],
					"signatures": [
						{
							"id": 11402,
							"name": "listProductOptionValues",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product option values based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product option values."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product option values using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst options = await productModuleService.listProductOptionValues({\n id: [\"optval_123\", \"optval_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product option values:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst options = await productModuleService.listProductOptionValues(\n  {\n    id: [\"optval_123\", \"optval_321\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst options = await productModuleService.listProductOptionValues(\n  {\n    id: [\"optval_123\", \"optval_321\"],\n  },\n  {\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 1417,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1417"
								}
							],
							"parameters": [
								{
									"id": 11403,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters applied on the retrieved product option values."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11876,
										"name": "FilterableProductOptionValueProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11404,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product option values are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product option."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11632,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11882,
												"name": "ProductOptionValueDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11405,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11882,
											"name": "ProductOptionValueDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11406,
					"name": "listAndCountProductOptionValues",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 1469,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1469"
						}
					],
					"signatures": [
						{
							"id": 11407,
							"name": "listAndCountProductOptionValues",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product option values along with the total count of available product option values satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product option values along with the total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product option values using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [options, count] =\n  await productModuleService.listAndCountProductOptionValues({\n    id: [\"optval_123\", \"optval_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product types:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [options, count] =\n  await productModuleService.listAndCountProductOptionValues(\n    {\n      id: [\"optval_123\", \"optval_321\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [options, count] =\n  await productModuleService.listAndCountProductOptionValues(\n    {\n      id: [\"optval_123\", \"optval_321\"],\n    },\n    {\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 1469,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1469"
								}
							],
							"parameters": [
								{
									"id": 11408,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters applied on the retrieved product option values."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11876,
										"name": "FilterableProductOptionValueProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11409,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product option values are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product option."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11632,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11882,
												"name": "ProductOptionValueDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11410,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 11882,
													"name": "ProductOptionValueDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11411,
					"name": "createProductOptionValues",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 1495,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1495"
						},
						{
							"fileName": "product/service.ts",
							"line": 1514,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1514"
						}
					],
					"signatures": [
						{
							"id": 11412,
							"name": "createProductOptionValues",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create product option values."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of created product option values."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst options = await productModuleService.createProductOptionValues([\n  {\n    value: \"Blue\",\n    option_id: \"opt_123\",\n  },\n  {\n    value: \"Green\",\n    option_id: \"opt_123\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 1495,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1495"
								}
							],
							"parameters": [
								{
									"id": 11413,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product option values to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11891,
											"name": "CreateProductOptionValueDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 11414,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11882,
											"name": "ProductOptionValueDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 11415,
							"name": "createProductOptionValues",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a product option."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created product option."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst option = await productModuleService.createProductOptionValues({\n  value: \"Blue\",\n  option_id: \"opt_123\",\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 1514,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1514"
								}
							],
							"parameters": [
								{
									"id": 11416,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product option to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11891,
										"name": "CreateProductOptionValueDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11417,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 11882,
										"name": "ProductOptionValueDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11418,
					"name": "updateProductOptionValues",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 1535,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1535"
						},
						{
							"fileName": "product/service.ts",
							"line": 1559,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1559"
						}
					],
					"signatures": [
						{
							"id": 11419,
							"name": "updateProductOptionValues",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a option."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated option."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst option = await productModuleService.updateProductOptionValues(\n  \"optval_123\",\n  {\n    value: \"Green\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 1535,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1535"
								}
							],
							"parameters": [
								{
									"id": 11420,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the option to be updated."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 11421,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the option to be updated"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11894,
										"name": "UpdateProductOptionValueDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11422,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 11882,
										"name": "ProductOptionValueDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 11423,
							"name": "updateProductOptionValues",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a list of options matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated options."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst options = await productModuleService.updateProductOptionValues(\n  {\n    value: \"Green\",\n  },\n  {\n    value: [\"Red\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 1559,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1559"
								}
							],
							"parameters": [
								{
									"id": 11424,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which options to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11876,
										"name": "FilterableProductOptionValueProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11425,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to be updated on the selected options"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11894,
										"name": "UpdateProductOptionValueDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11426,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11882,
											"name": "ProductOptionValueDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11427,
					"name": "deleteProductOptionValues",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 1578,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1578"
						}
					],
					"signatures": [
						{
							"id": 11428,
							"name": "deleteProductOptionValues",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete a product option."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the product option values are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.deleteProductOptionValues([\n  \"optval_123\",\n  \"optval_321\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 1578,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1578"
								}
							],
							"parameters": [
								{
									"id": 11429,
									"name": "productOptionValueIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the product option values to delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11430,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11431,
					"name": "softDeleteProductOptionValues",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 1604,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1604"
						}
					],
					"signatures": [
						{
							"id": 11432,
							"name": "softDeleteProductOptionValues",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete options. Unlike the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "delete"
									},
									{
										"kind": "text",
										"text": " method, this method won't completely remove the option. It can still be accessed or retrieved using methods like "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "retrieve"
									},
									{
										"kind": "text",
										"text": " if you pass the "
									},
									{
										"kind": "code",
										"text": "`withDeleted`"
									},
									{
										"kind": "text",
										"text": " property to the "
									},
									{
										"kind": "code",
										"text": "`config`"
									},
									{
										"kind": "text",
										"text": " object parameter.\n\nThe soft-deleted options can be restored using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "restore"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted. The object's keys are the ID attribute names of the option entity's relations, and its value is an array of strings, each being the ID of a record associated with the option through this relation.\n\nIf there are no related records, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.softDeleteProductOptionValues([\n  \"optval_123\",\n  \"optval_321\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 1604,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1604"
								}
							],
							"typeParameters": [
								{
									"id": 11433,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 11434,
									"name": "optionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the options to soft-delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11435,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to soft delete along with the each of the options. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the option's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`option_value_id`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11799,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11433,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11436,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11437,
					"name": "restoreProductOptionValues",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 1631,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1631"
						}
					],
					"signatures": [
						{
							"id": 11438,
							"name": "restoreProductOptionValues",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to restore options which were deleted using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "softDelete"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored. The object's keys are the ID attribute names of the option entity's relations, and its value is an array of strings, each being the ID of the record associated with the option through this relation.\n\nIf there are no related records that were restored, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.restoreProductOptionValues([\n  \"optval_123\",\n  \"optval_321\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 1631,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1631"
								}
							],
							"typeParameters": [
								{
									"id": 11439,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 11440,
									"name": "optionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the options to restore."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11441,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the options. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the option's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11802,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11439,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11442,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11443,
					"name": "retrieveProductVariant",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 1666,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1666"
						}
					],
					"signatures": [
						{
							"id": 11444,
							"name": "retrieveProductVariant",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a product variant by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved product variant."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a product variant by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst variant =\n  await productModuleService.retrieveProductVariant(\"variant_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst variant = await productModuleService.retrieveProductVariant(\n  \"variant_123\",\n  {\n    relations: [\"options\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 1666,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1666"
								}
							],
							"parameters": [
								{
									"id": 11445,
									"name": "productVariantId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the product variant to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 11446,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product variant is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product variant."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11632,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11897,
												"name": "ProductVariantDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11447,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 11897,
										"name": "ProductVariantDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11448,
					"name": "listProductVariants",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 1719,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1719"
						}
					],
					"signatures": [
						{
							"id": 11449,
							"name": "listProductVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product variants based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product variants."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product variants using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst variants = await productModuleService.listProductVariants({\n  id: [\"variant_123\", \"variant_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product variants:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst variants = await productModuleService.listProductVariants(\n  {\n    id: [\"variant_123\", \"variant_321\"],\n  },\n  {\n    relations: [\"options\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst variants = await productModuleService.listProductVariants(\n  {\n    id: [\"variant_123\", \"variant_321\"],\n  },\n  {\n    relations: [\"options\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 1719,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1719"
								}
							],
							"parameters": [
								{
									"id": 11450,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters applied on the retrieved product variants."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11923,
										"name": "FilterableProductVariantProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11451,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product variants are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product variant."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11632,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11897,
												"name": "ProductVariantDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11452,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11897,
											"name": "ProductVariantDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11453,
					"name": "listAndCountProductVariants",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 1775,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1775"
						}
					],
					"signatures": [
						{
							"id": 11454,
							"name": "listAndCountProductVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product variants along with the total count of available product variants satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product variants along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product variants using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [variants, count] =\n  await productModuleService.listAndCountProductVariants({\n    id: [\"variant_123\", \"variant_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product variants:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [variants, count] =\n  await productModuleService.listAndCountProductVariants(\n    {\n      id: [\"variant_123\", \"variant_321\"],\n    },\n    {\n      relations: [\"options\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [variants, count] =\n  await productModuleService.listAndCountProductVariants(\n    {\n      id: [\"variant_123\", \"variant_321\"],\n    },\n    {\n      relations: [\"options\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 1775,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1775"
								}
							],
							"parameters": [
								{
									"id": 11455,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters applied on the retrieved product variants."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11923,
										"name": "FilterableProductVariantProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11456,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product variants are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product variant."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11632,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11897,
												"name": "ProductVariantDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11457,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 11897,
													"name": "ProductVariantDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11458,
					"name": "createProductVariants",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 1807,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1807"
						},
						{
							"fileName": "product/service.ts",
							"line": 1829,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1829"
						}
					],
					"signatures": [
						{
							"id": 11459,
							"name": "createProductVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create product variants."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of created product variants."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst variants = await productModuleService.createProductVariants([\n  {\n    title: \"Blue Shirt\",\n    product_id: \"prod_123\",\n    options: {\n      Color: \"Blue\",\n    },\n  },\n  {\n    title: \"Green Shirt\",\n    product_id: \"prod_321\",\n    options: {\n      Color: \"Green\",\n    },\n  },\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 1807,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1807"
								}
							],
							"parameters": [
								{
									"id": 11460,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product variants to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11935,
											"name": "CreateProductVariantDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 11461,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11897,
											"name": "ProductVariantDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 11462,
							"name": "createProductVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a product variant."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created product variant."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst variant = await productModuleService.createProductVariants({\n  title: \"Blue Shirt\",\n  product_id: \"prod_123\",\n  options: {\n    Color: \"Blue\",\n  },\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 1829,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1829"
								}
							],
							"parameters": [
								{
									"id": 11463,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product variant to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11935,
										"name": "CreateProductVariantDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11464,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 11897,
										"name": "ProductVariantDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11465,
					"name": "upsertProductVariants",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 1855,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1855"
						},
						{
							"fileName": "product/service.ts",
							"line": 1873,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1873"
						}
					],
					"signatures": [
						{
							"id": 11466,
							"name": "upsertProductVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing variants, or creates new ones if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated and created variants."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst variants = await productModuleService.upsertProductVariants([\n  {\n    id: \"variant_123\",\n    title: \"Green Shirt\",\n  },\n  {\n    title: \"Blue Shirt\",\n    options: {\n      Color: \"Blue\",\n    },\n  },\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 1855,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1855"
								}
							],
							"parameters": [
								{
									"id": 11467,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for each variant."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11955,
											"name": "UpsertProductVariantDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 11468,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11897,
											"name": "ProductVariantDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 11469,
							"name": "upsertProductVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing variant, or creates a new one if it doesn't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated or created variant."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst variant = await productModuleService.upsertProductVariants({\n  id: \"variant_123\",\n  title: \"Green Shirt\",\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 1873,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1873"
								}
							],
							"parameters": [
								{
									"id": 11470,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for the variant."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11955,
										"name": "UpsertProductVariantDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11471,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 11897,
										"name": "ProductVariantDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11472,
					"name": "updateProductVariants",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 1894,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1894"
						},
						{
							"fileName": "product/service.ts",
							"line": 1918,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1918"
						}
					],
					"signatures": [
						{
							"id": 11473,
							"name": "updateProductVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a variant."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated variant."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst variant = await productModuleService.updateProductVariants(\n  \"variant_123\",\n  {\n    title: \"Blue Shirt\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 1894,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1894"
								}
							],
							"parameters": [
								{
									"id": 11474,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the variant to be updated."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 11475,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the variant to be updated"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11974,
										"name": "UpdateProductVariantDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11476,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 11897,
										"name": "ProductVariantDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 11477,
							"name": "updateProductVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a list of variants matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated variants."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst variants = await productModuleService.updateProductVariants(\n  {\n    id: [\"variant_123\", \"variant_321\"],\n  },\n  {\n    title: \"Blue Shirt\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 1918,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1918"
								}
							],
							"parameters": [
								{
									"id": 11478,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which variants to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11923,
										"name": "FilterableProductVariantProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11479,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to be updated on the selected variants"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11974,
										"name": "UpdateProductVariantDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11480,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11897,
											"name": "ProductVariantDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11481,
					"name": "deleteProductVariants",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 1937,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1937"
						}
					],
					"signatures": [
						{
							"id": 11482,
							"name": "deleteProductVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete ProductVariant. This method will completely remove the ProductVariant and they can no longer be accessed or retrieved."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the ProductVariant are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.deleteProductVariants([\n  \"variant_123\",\n  \"variant_321\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 1937,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1937"
								}
							],
							"parameters": [
								{
									"id": 11483,
									"name": "productVariantIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the ProductVariant to be deleted."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11484,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11485,
					"name": "softDeleteProductVariants",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 1963,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1963"
						}
					],
					"signatures": [
						{
							"id": 11486,
							"name": "softDeleteProductVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete variants. Unlike the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "delete"
									},
									{
										"kind": "text",
										"text": " method, this method won't completely remove the variant. It can still be accessed or retrieved using methods like "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "retrieve"
									},
									{
										"kind": "text",
										"text": " if you pass the "
									},
									{
										"kind": "code",
										"text": "`withDeleted`"
									},
									{
										"kind": "text",
										"text": " property to the "
									},
									{
										"kind": "code",
										"text": "`config`"
									},
									{
										"kind": "text",
										"text": " object parameter.\n\nThe soft-deleted variants can be restored using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "restore"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted. The object's keys are the ID attribute names of the variant entity's relations, and its value is an array of strings, each being the ID of a record associated with the variant through this relation.\n\nIf there are no related records, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.softDeleteProductVariants([\n  \"variant_123\",\n  \"variant_321\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 1963,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1963"
								}
							],
							"typeParameters": [
								{
									"id": 11487,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 11488,
									"name": "variantIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the variants to soft-delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11489,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to soft delete along with the each of the variants. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the variant's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`option_value_id`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11799,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11487,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11490,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11491,
					"name": "restoreProductVariants",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 1988,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1988"
						}
					],
					"signatures": [
						{
							"id": 11492,
							"name": "restoreProductVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to restore variants which were deleted using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "softDelete"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored. The object's keys are the ID attribute names of the variant entity's relations, and its value is an array of strings, each being the ID of the record associated with the variant through this relation.\n\nIf there are no related records that were restored, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.restoreProductVariants([\n  \"variant_123\",\n  \"variant_321\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 1988,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L1988"
								}
							],
							"typeParameters": [
								{
									"id": 11493,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 11494,
									"name": "variantIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the variants to restore."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11495,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the variants. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the variant's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11802,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11493,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11496,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11497,
					"name": "retrieveProductCollection",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 2021,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2021"
						}
					],
					"signatures": [
						{
							"id": 11498,
							"name": "retrieveProductCollection",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a product collection by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved product collection."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a product collection by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst collection =\n  await productModuleService.retrieveProductCollection(\"pcol_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst collection =\n  await productModuleService.retrieveProductCollection(\"pcol_123\", {\n    relations: [\"products\"],\n  })\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 2021,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2021"
								}
							],
							"parameters": [
								{
									"id": 11499,
									"name": "productCollectionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the product collection to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 11500,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product collection is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11632,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11992,
												"name": "ProductCollectionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11501,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 11992,
										"name": "ProductCollectionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11502,
					"name": "listProductCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 2077,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2077"
						}
					],
					"signatures": [
						{
							"id": 11503,
							"name": "listProductCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product collections based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product collections."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product collections using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst collections =\n  await productModuleService.listProductCollections({\n    id: [\"pcol_123\", \"pcol_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product collections:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst collections =\n  await productModuleService.listProductCollections(\n    {\n      id: [\"pcol_123\", \"pcol_321\"],\n    },\n    {\n      relations: [\"products\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst collections =\n  await productModuleService.listProductCollections(\n    {\n      id: [\"pcol_123\", \"pcol_321\"],\n    },\n    {\n      relations: [\"products\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 2077,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2077"
								}
							],
							"parameters": [
								{
									"id": 11504,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters applied on the retrieved product collections."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12001,
										"name": "FilterableProductCollectionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11505,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product collections are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11632,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11992,
												"name": "ProductCollectionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11506,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11992,
											"name": "ProductCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11507,
					"name": "listAndCountProductCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 2133,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2133"
						}
					],
					"signatures": [
						{
							"id": 11508,
							"name": "listAndCountProductCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product collections along with the total count of available product collections satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product collections along with the total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product collections using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [collections, count] =\n  await productModuleService.listAndCountProductCollections({\n    id: [\"pcol_123\", \"pcol_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product collections:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [collections, count] =\n  await productModuleService.listAndCountProductCollections(\n    {\n      id: [\"pcol_123\", \"pcol_321\"],\n    },\n    {\n      relations: [\"products\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [collections, count] =\n  await productModuleService.listAndCountProductCollections(\n    {\n      id: [\"pcol_123\", \"pcol_321\"],\n    },\n    {\n      relations: [\"products\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 2133,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2133"
								}
							],
							"parameters": [
								{
									"id": 11509,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters applied on the retrieved product collections."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12001,
										"name": "FilterableProductCollectionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11510,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product collections are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11632,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11992,
												"name": "ProductCollectionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11511,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 11992,
													"name": "ProductCollectionDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11512,
					"name": "createProductCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 2158,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2158"
						},
						{
							"fileName": "product/service.ts",
							"line": 2177,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2177"
						}
					],
					"signatures": [
						{
							"id": 11513,
							"name": "createProductCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create product collections."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of created product collections."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst collections =\n  await productModuleService.createProductCollections([\n    {\n      title: \"Summer Collection\",\n    },\n    {\n      title: \"Winter Collection\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 2158,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2158"
								}
							],
							"parameters": [
								{
									"id": 11514,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product collections to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 12008,
											"name": "CreateProductCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 11515,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11992,
											"name": "ProductCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 11516,
							"name": "createProductCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a product collection."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created product collection."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst collection =\n  await productModuleService.createProductCollections({\n    title: \"Summer Collection\",\n  })\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 2177,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2177"
								}
							],
							"parameters": [
								{
									"id": 11517,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product collection to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12008,
										"name": "CreateProductCollectionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11518,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 11992,
										"name": "ProductCollectionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11519,
					"name": "upsertProductCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 2201,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2201"
						},
						{
							"fileName": "product/service.ts",
							"line": 2220,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2220"
						}
					],
					"signatures": [
						{
							"id": 11520,
							"name": "upsertProductCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing collections, or creates new ones if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated and created collections."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst collections =\n  await productModuleService.upsertProductCollections([\n    {\n      id: \"pcol_123\",\n      title: \"Winter Collection\",\n    },\n    {\n      title: \"Summer Collection\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 2201,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2201"
								}
							],
							"parameters": [
								{
									"id": 11521,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for each collection."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 12013,
											"name": "UpsertProductCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 11522,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11992,
											"name": "ProductCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 11523,
							"name": "upsertProductCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing collection, or creates a new one if it doesn't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated or created collection."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst collection =\n  await productModuleService.upsertProductCollections({\n    id: \"pcol_123\",\n    title: \"Winter Collection\",\n  })\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 2220,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2220"
								}
							],
							"parameters": [
								{
									"id": 11524,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for the collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12013,
										"name": "UpsertProductCollectionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11525,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 11992,
										"name": "ProductCollectionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11526,
					"name": "updateProductCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 2239,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2239"
						},
						{
							"fileName": "product/service.ts",
							"line": 2264,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2264"
						}
					],
					"signatures": [
						{
							"id": 11527,
							"name": "updateProductCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a collection."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated collection."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst collection =\n  await productModuleService.updateProductCollections(\"pcol_123\", {\n    title: \"Summer Collection\",\n  })\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 2239,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2239"
								}
							],
							"parameters": [
								{
									"id": 11528,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the collection to be updated."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 11529,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the collection to be updated"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12020,
										"name": "UpdateProductCollectionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11530,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 11992,
										"name": "ProductCollectionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 11531,
							"name": "updateProductCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a list of collections matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated collections."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst collections =\n  await productModuleService.updateProductCollections(\n    {\n      id: [\"pcol_123\", \"pcol_321\"],\n    },\n    {\n      title: \"Summer Collection\",\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 2264,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2264"
								}
							],
							"parameters": [
								{
									"id": 11532,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which collections to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12001,
										"name": "FilterableProductCollectionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11533,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to be updated on the selected collections"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12020,
										"name": "UpdateProductCollectionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11534,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11992,
											"name": "ProductCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11535,
					"name": "deleteProductCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 2284,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2284"
						}
					],
					"signatures": [
						{
							"id": 11536,
							"name": "deleteProductCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete collections by their ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the product options are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.deleteProductCollections([\n  \"pcol_123\",\n  \"pcol_321\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 2284,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2284"
								}
							],
							"parameters": [
								{
									"id": 11537,
									"name": "productCollectionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the product collections to be updated."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11538,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11539,
					"name": "softDeleteProductCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 2310,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2310"
						}
					],
					"signatures": [
						{
							"id": 11540,
							"name": "softDeleteProductCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete product collections. Unlike the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "deleteCollections"
									},
									{
										"kind": "text",
										"text": " method, this method won't completely remove the collection. It can still be accessed or retrieved using methods like "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "retrieveCollections"
									},
									{
										"kind": "text",
										"text": " if you pass the "
									},
									{
										"kind": "code",
										"text": "`withDeleted`"
									},
									{
										"kind": "text",
										"text": " property to the "
									},
									{
										"kind": "code",
										"text": "`config`"
									},
									{
										"kind": "text",
										"text": " object parameter.\n\nThe soft-deleted collections can be restored using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "restoreCollections"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted. The object's keys are the ID attribute names of the collection entity's relations.\n\nIf there are no related records, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.softDeleteProductCollections([\n  \"pcol_123\",\n  \"pcol_321\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 2310,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2310"
								}
							],
							"typeParameters": [
								{
									"id": 11541,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 11542,
									"name": "collectionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the collections to soft-delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11543,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to soft delete along with the each of the collections. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the collection's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11799,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11541,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11544,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11545,
					"name": "restoreProductCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 2335,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2335"
						}
					],
					"signatures": [
						{
							"id": 11546,
							"name": "restoreProductCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to restore collections which were deleted using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "softDelete"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored. The object's keys are the ID attribute names of the product entity's relations.\n\nIf there are no related records that were restored, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.restoreProductCollections([\n  \"pcol_123\",\n  \"pcol_321\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 2335,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2335"
								}
							],
							"typeParameters": [
								{
									"id": 11547,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 11548,
									"name": "collectionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the collections to restore."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11549,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the collections. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the collection's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11802,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11547,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11550,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11551,
					"name": "retrieveProductCategory",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 2370,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2370"
						}
					],
					"signatures": [
						{
							"id": 11552,
							"name": "retrieveProductCategory",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a product category by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved product category."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a product category by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst category =\n  await productModuleService.retrieveProductCategory(\"pcat_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst category = await productModuleService.retrieveProductCategory(\n  \"pcat_123\",\n  {\n    relations: [\"products\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 2370,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2370"
								}
							],
							"parameters": [
								{
									"id": 11553,
									"name": "productCategoryId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the product category to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 11554,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product category is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product category."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11632,
										"typeArguments": [
											{
												"type": "reference",
												"target": 12026,
												"name": "ProductCategoryDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11555,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 12026,
										"name": "ProductCategoryDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11556,
					"name": "listProductCategories",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 2423,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2423"
						}
					],
					"signatures": [
						{
							"id": 11557,
							"name": "listProductCategories",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product categories based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product categories."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product categories using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst categories = await productModuleService.listProductCategories({\n  id: [\"pcat_123\", \"pcat_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product categories:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst categories = await productModuleService.listProductCategories(\n  {\n    id: [\"pcat_123\", \"pcat_321\"],\n  },\n  {\n    relations: [\"products\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst categories = await productModuleService.listProductCategories(\n  {\n    id: [\"pcat_123\", \"pcat_321\"],\n  },\n  {\n    relations: [\"products\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 2423,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2423"
								}
							],
							"parameters": [
								{
									"id": 11558,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to be applied on the retrieved product categories."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12042,
										"name": "FilterableProductCategoryProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11559,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product categories are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product category."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11632,
										"typeArguments": [
											{
												"type": "reference",
												"target": 12026,
												"name": "ProductCategoryDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11560,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 12026,
											"name": "ProductCategoryDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11561,
					"name": "listAndCountProductCategories",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 2479,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2479"
						}
					],
					"signatures": [
						{
							"id": 11562,
							"name": "listAndCountProductCategories",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product categories along with the total count of available product categories satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product categories along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product categories using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [categories, count] =\n  await productModuleService.listAndCountProductCategories({\n    id: [\"pcat_123\", \"pcat_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product categories:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [categories, count] =\n  await productModuleService.listAndCountProductCategories(\n    {\n      id: [\"pcat_123\", \"pcat_321\"],\n    },\n    {\n      relations: [\"products\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [categories, count] =\n  await productModuleService.listAndCountProductCategories(\n    {\n      id: [\"pcat_123\", \"pcat_321\"],\n    },\n    {\n      relations: [\"products\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 2479,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2479"
								}
							],
							"parameters": [
								{
									"id": 11563,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved product categories."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12042,
										"name": "FilterableProductCategoryProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11564,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product categories are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product category."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11632,
										"typeArguments": [
											{
												"type": "reference",
												"target": 12026,
												"name": "ProductCategoryDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11565,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 12026,
													"name": "ProductCategoryDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11566,
					"name": "createProductCategories",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 2504,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2504"
						},
						{
							"fileName": "product/service.ts",
							"line": 2523,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2523"
						}
					],
					"signatures": [
						{
							"id": 11567,
							"name": "createProductCategories",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create product categories."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of created product categories."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst categories =\n  await productModuleService.createProductCategories([\n    {\n      name: \"Tools\",\n    },\n    {\n      name: \"Clothing\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 2504,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2504"
								}
							],
							"parameters": [
								{
									"id": 11568,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product categories to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 12054,
											"name": "CreateProductCategoryDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 11569,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 12026,
											"name": "ProductCategoryDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 11570,
							"name": "createProductCategories",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a product category."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created product category."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst category =\n  await productModuleService.createProductCategories({\n    name: \"Tools\",\n  })\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 2523,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2523"
								}
							],
							"parameters": [
								{
									"id": 11571,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product category to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12054,
										"name": "CreateProductCategoryDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11572,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 12026,
										"name": "ProductCategoryDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11573,
					"name": "upsertProductCategories",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 2547,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2547"
						},
						{
							"fileName": "product/service.ts",
							"line": 2566,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2566"
						}
					],
					"signatures": [
						{
							"id": 11574,
							"name": "upsertProductCategories",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing categories, or creates new ones if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated and created categories."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst categories =\n  await productModuleService.upsertProductCategories([\n    {\n      id: \"pcat_123\",\n      name: \"Clothing\",\n    },\n    {\n      name: \"Tools\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 2547,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2547"
								}
							],
							"parameters": [
								{
									"id": 11575,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for each category."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 12063,
											"name": "UpsertProductCategoryDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 11576,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 12026,
											"name": "ProductCategoryDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 11577,
							"name": "upsertProductCategories",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing category, or creates a new one if it doesn't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated or created category."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst category =\n  await productModuleService.upsertProductCategories({\n    id: \"pcat_123\",\n    name: \"Clothing\",\n  })\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 2566,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2566"
								}
							],
							"parameters": [
								{
									"id": 11578,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for the category."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12063,
										"name": "UpsertProductCategoryDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11579,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 12026,
										"name": "ProductCategoryDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11580,
					"name": "updateProductCategories",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 2585,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2585"
						},
						{
							"fileName": "product/service.ts",
							"line": 2610,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2610"
						}
					],
					"signatures": [
						{
							"id": 11581,
							"name": "updateProductCategories",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a category."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated category."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst category =\n  await productModuleService.updateProductCategories(\"pcat_123\", {\n    title: \"Tools\",\n  })\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 2585,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2585"
								}
							],
							"parameters": [
								{
									"id": 11582,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the category to be updated."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 11583,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the category to be updated"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12073,
										"name": "UpdateProductCategoryDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11584,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 12026,
										"name": "ProductCategoryDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 11585,
							"name": "updateProductCategories",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a list of categories matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated categories."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst categories =\n  await productModuleService.updateProductCategories(\n    {\n      id: [\"pcat_123\", \"pcat_321\"],\n    },\n    {\n      title: \"Tools\",\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 2610,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2610"
								}
							],
							"parameters": [
								{
									"id": 11586,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which categories to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12042,
										"name": "FilterableProductCategoryProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11587,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to be updated on the selected categories"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12073,
										"name": "UpdateProductCategoryDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11588,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 12026,
											"name": "ProductCategoryDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11589,
					"name": "deleteProductCategories",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 2630,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2630"
						}
					],
					"signatures": [
						{
							"id": 11590,
							"name": "deleteProductCategories",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete categories by their ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the product options are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.deleteProductCategories([\n  \"pcat_123\",\n  \"pcat_321\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 2630,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2630"
								}
							],
							"parameters": [
								{
									"id": 11591,
									"name": "productCategoryIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the product categories to be updated."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11592,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11593,
					"name": "softDeleteProductCategories",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 2656,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2656"
						}
					],
					"signatures": [
						{
							"id": 11594,
							"name": "softDeleteProductCategories",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete product categories. Unlike the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "deleteCategories"
									},
									{
										"kind": "text",
										"text": " method, this method won't completely remove the category. It can still be accessed or retrieved using methods like "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "retrieveCategories"
									},
									{
										"kind": "text",
										"text": " if you pass the "
									},
									{
										"kind": "code",
										"text": "`withDeleted`"
									},
									{
										"kind": "text",
										"text": " property to the "
									},
									{
										"kind": "code",
										"text": "`config`"
									},
									{
										"kind": "text",
										"text": " object parameter.\n\nThe soft-deleted categories can be restored using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "restoreCategories"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted. The object's keys are the ID attribute names of the category entity's relations.\n\nIf there are no related records, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.softDeleteProductCategories([\n  \"pcat_123\",\n  \"pcat_321\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 2656,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2656"
								}
							],
							"typeParameters": [
								{
									"id": 11595,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 11596,
									"name": "categoryIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the categories to soft-delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11597,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to soft delete along with the each of the categories. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the category's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11799,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11595,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11598,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11599,
					"name": "restoreProductCategories",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "product/service.ts",
							"line": 2681,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2681"
						}
					],
					"signatures": [
						{
							"id": 11600,
							"name": "restoreProductCategories",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to restore categories which were deleted using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "softDelete"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored. The object's keys are the ID attribute names of the product entity's relations.\n\nIf there are no related records that were restored, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.restoreProductCategories([\n  \"pcat_123\",\n  \"pcat_321\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "product/service.ts",
									"line": 2681,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L2681"
								}
							],
							"typeParameters": [
								{
									"id": 11601,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 11602,
									"name": "categoryIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the categories to restore."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11603,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the categories. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the category's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11802,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11601,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11604,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11675,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						11185,
						11190,
						11195,
						11200,
						11207,
						11214,
						11223,
						11227,
						11233,
						11239,
						11244,
						11249,
						11254,
						11261,
						11268,
						11277,
						11281,
						11287,
						11293,
						11298,
						11303,
						11308,
						11315,
						11322,
						11331,
						11335,
						11341,
						11347,
						11352,
						11357,
						11362,
						11369,
						11376,
						11385,
						11389,
						11395,
						11401,
						11406,
						11411,
						11418,
						11427,
						11431,
						11437,
						11443,
						11448,
						11453,
						11458,
						11465,
						11472,
						11481,
						11485,
						11491,
						11497,
						11502,
						11507,
						11512,
						11519,
						11526,
						11535,
						11539,
						11545,
						11551,
						11556,
						11561,
						11566,
						11573,
						11580,
						11589,
						11593,
						11599
					]
				}
			],
			"sources": [
				{
					"fileName": "product/service.ts",
					"line": 51,
					"character": 17,
					"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/types/src/product/service.ts#L51"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 11618,
					"name": "IModuleService",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 12197,
			"name": "MessageAggregatorFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 12198,
					"name": "groupBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 5,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 12199,
					"name": "sortBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 6,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 12200,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
									"line": 6,
									"character": 11
								}
							],
							"indexSignatures": [
								{
									"id": 12201,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
											"line": 6,
											"character": 13
										}
									],
									"parameters": [
										{
											"id": 12202,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 12203,
					"name": "internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "will prevent the info log to be displayed about those events"
							}
						],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12198,
						12199,
						12203
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
					"line": 4,
					"character": 17
				}
			]
		},
		{
			"id": 12122,
			"name": "IMessageAggregator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 12123,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 15,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 12124,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
									"line": 15,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 12125,
									"name": "msg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 12193,
												"name": "Message",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 12193,
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 12126,
					"name": "getMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 16,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 12127,
							"name": "getMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
									"line": 16,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 12128,
									"name": "format",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 12197,
										"name": "MessageAggregatorFormat",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 12193,
											"name": "Message",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 12129,
					"name": "clearMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 17,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 12130,
							"name": "clearMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
									"line": 17,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 12131,
					"name": "saveRawMessageData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 18,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 12132,
							"name": "saveRawMessageData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
									"line": 18,
									"character": 2
								}
							],
							"typeParameters": [
								{
									"id": 12133,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 12134,
									"name": "messageData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 12204,
												"typeArguments": [
													{
														"type": "reference",
														"target": 12133,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RawMessageFormat",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 12204,
													"typeArguments": [
														{
															"type": "reference",
															"target": 12133,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "RawMessageFormat",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 12135,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						12123,
						12126,
						12129,
						12131
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
					"line": 14,
					"character": 17
				}
			]
		},
		{
			"id": 11675,
			"name": "Context",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A context used to share resources, such as transaction manager, between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 11676,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 31,
							"character": 2
						}
					],
					"type": {
						"type": "literal",
						"value": "MedusaContext"
					}
				},
				{
					"id": 11677,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`transactionManager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 35,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 11687,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 11678,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a manager, typically an entity manager, of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`manager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 39,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 11687,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 11679,
					"name": "isolationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the isolation level of the context. Possible values are "
							},
							{
								"kind": "code",
								"text": "`READ UNCOMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`READ COMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`REPEATABLE READ`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`SERIALIZABLE`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 43,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11680,
					"name": "enableNestedTransactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether nested transactions are enabled."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 47,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 11681,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 51,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11682,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 55,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11683,
					"name": "messageAggregator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a message aggregator, which is used to aggregate messages to be emitted at a later point."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 60,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 12122,
						"name": "IMessageAggregator",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 11684,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current request."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 65,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11685,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the current workflow execution."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 70,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11686,
					"name": "parentStepIdempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the parent workflow execution."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 75,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11676,
						11677,
						11678,
						11679,
						11680,
						11681,
						11682,
						11683,
						11684,
						11685,
						11686
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
					"line": 30,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 11687,
					"name": "TManager",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"children": [
				11632,
				12136,
				11799,
				11802,
				12221,
				12169,
				11618,
				11643,
				11897,
				12026,
				12054,
				12063,
				12073,
				11805,
				11992,
				11823,
				11846,
				12113,
				11882,
				11688,
				11810,
				11830,
				11856,
				11876,
				12001,
				11923,
				12042,
				12008,
				12013,
				12020,
				11836,
				11839,
				11843,
				12162,
				12218,
				11816,
				11818,
				11821,
				11863,
				11891,
				11867,
				11872,
				11894,
				12166,
				11935,
				11955,
				11974,
				11719,
				11746,
				11773,
				11184,
				12197,
				12122,
				11675
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				12107,
				12121,
				12214,
				12216,
				12241,
				12279,
				12269,
				12140,
				12266,
				12248,
				12268,
				12260,
				12245,
				12250,
				12235,
				12193,
				12204,
				12225,
				12253,
				12187,
				12082,
				12184,
				12112
			]
		}
	],
	"packageName": "@medusajs/types",
	"symbolIdMap": {
		"11183": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": ""
		},
		"11184": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService"
		},
		"11185": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProduct"
		},
		"11186": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProduct"
		},
		"11187": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productId"
		},
		"11188": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11189": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11190": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProducts"
		},
		"11191": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProducts"
		},
		"11192": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"11193": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11194": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11195": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProducts"
		},
		"11196": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProducts"
		},
		"11197": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"11198": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11199": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11200": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProducts"
		},
		"11201": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProducts"
		},
		"11202": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11203": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11204": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProducts"
		},
		"11205": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11206": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11207": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProducts"
		},
		"11208": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProducts"
		},
		"11209": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11210": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11211": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProducts"
		},
		"11212": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11213": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11214": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProducts"
		},
		"11215": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProducts"
		},
		"11216": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "id"
		},
		"11217": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11218": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11219": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProducts"
		},
		"11220": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "selector"
		},
		"11221": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11222": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11223": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProducts"
		},
		"11224": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProducts"
		},
		"11225": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productIds"
		},
		"11226": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11227": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProducts"
		},
		"11228": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProducts"
		},
		"11229": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"11230": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productIds"
		},
		"11231": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11232": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11233": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProducts"
		},
		"11234": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProducts"
		},
		"11235": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"11236": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productIds"
		},
		"11237": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11238": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11239": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProductTag"
		},
		"11240": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProductTag"
		},
		"11241": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "tagId"
		},
		"11242": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11243": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11244": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductTags"
		},
		"11245": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductTags"
		},
		"11246": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"11247": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11248": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11249": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductTags"
		},
		"11250": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductTags"
		},
		"11251": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"11252": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11253": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11254": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductTags"
		},
		"11255": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductTags"
		},
		"11256": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11257": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11258": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductTags"
		},
		"11259": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11260": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11261": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductTags"
		},
		"11262": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductTags"
		},
		"11263": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11264": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11265": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductTags"
		},
		"11266": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11267": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11268": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductTags"
		},
		"11269": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductTags"
		},
		"11270": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "id"
		},
		"11271": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11272": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11273": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductTags"
		},
		"11274": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "selector"
		},
		"11275": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11276": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11277": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductTags"
		},
		"11278": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductTags"
		},
		"11279": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productTagIds"
		},
		"11280": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11281": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductTags"
		},
		"11282": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductTags"
		},
		"11283": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"11284": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "tagIds"
		},
		"11285": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11286": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11287": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductTags"
		},
		"11288": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductTags"
		},
		"11289": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"11290": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "tagIds"
		},
		"11291": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11292": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11293": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProductType"
		},
		"11294": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProductType"
		},
		"11295": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "typeId"
		},
		"11296": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11297": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11298": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductTypes"
		},
		"11299": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductTypes"
		},
		"11300": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"11301": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11302": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11303": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductTypes"
		},
		"11304": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductTypes"
		},
		"11305": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"11306": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11307": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11308": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductTypes"
		},
		"11309": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductTypes"
		},
		"11310": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11311": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11312": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductTypes"
		},
		"11313": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11314": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11315": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductTypes"
		},
		"11316": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductTypes"
		},
		"11317": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11318": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11319": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductTypes"
		},
		"11320": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11321": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11322": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductTypes"
		},
		"11323": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductTypes"
		},
		"11324": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "id"
		},
		"11325": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11326": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11327": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductTypes"
		},
		"11328": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "selector"
		},
		"11329": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11330": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11331": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductTypes"
		},
		"11332": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductTypes"
		},
		"11333": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productTypeIds"
		},
		"11334": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11335": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductTypes"
		},
		"11336": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductTypes"
		},
		"11337": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"11338": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "typeIds"
		},
		"11339": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11340": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11341": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductTypes"
		},
		"11342": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductTypes"
		},
		"11343": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"11344": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "typeIds"
		},
		"11345": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11346": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11347": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProductOption"
		},
		"11348": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProductOption"
		},
		"11349": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "optionId"
		},
		"11350": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11351": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11352": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductOptions"
		},
		"11353": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductOptions"
		},
		"11354": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"11355": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11356": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11357": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductOptions"
		},
		"11358": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductOptions"
		},
		"11359": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"11360": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11361": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11362": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductOptions"
		},
		"11363": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductOptions"
		},
		"11364": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11365": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11366": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductOptions"
		},
		"11367": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11368": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11369": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductOptions"
		},
		"11370": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductOptions"
		},
		"11371": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11372": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11373": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductOptions"
		},
		"11374": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11375": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11376": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductOptions"
		},
		"11377": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductOptions"
		},
		"11378": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "id"
		},
		"11379": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11380": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11381": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductOptions"
		},
		"11382": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "selector"
		},
		"11383": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11384": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11385": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductOptions"
		},
		"11386": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductOptions"
		},
		"11387": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productOptionIds"
		},
		"11388": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11389": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductOptions"
		},
		"11390": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductOptions"
		},
		"11391": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"11392": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "optionIds"
		},
		"11393": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11394": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11395": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductOptions"
		},
		"11396": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductOptions"
		},
		"11397": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"11398": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "optionIds"
		},
		"11399": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11400": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11401": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductOptionValues"
		},
		"11402": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductOptionValues"
		},
		"11403": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"11404": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11405": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11406": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductOptionValues"
		},
		"11407": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductOptionValues"
		},
		"11408": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"11409": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11410": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11411": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductOptionValues"
		},
		"11412": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductOptionValues"
		},
		"11413": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11414": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11415": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductOptionValues"
		},
		"11416": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11417": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11418": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductOptionValues"
		},
		"11419": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductOptionValues"
		},
		"11420": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "id"
		},
		"11421": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11422": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11423": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductOptionValues"
		},
		"11424": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "selector"
		},
		"11425": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11426": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11427": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductOptionValues"
		},
		"11428": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductOptionValues"
		},
		"11429": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productOptionValueIds"
		},
		"11430": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11431": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductOptionValues"
		},
		"11432": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductOptionValues"
		},
		"11433": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"11434": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "optionIds"
		},
		"11435": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11436": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11437": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductOptionValues"
		},
		"11438": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductOptionValues"
		},
		"11439": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"11440": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "optionIds"
		},
		"11441": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11442": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11443": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProductVariant"
		},
		"11444": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProductVariant"
		},
		"11445": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productVariantId"
		},
		"11446": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11447": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11448": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductVariants"
		},
		"11449": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductVariants"
		},
		"11450": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"11451": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11452": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11453": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductVariants"
		},
		"11454": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductVariants"
		},
		"11455": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"11456": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11457": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11458": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductVariants"
		},
		"11459": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductVariants"
		},
		"11460": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11461": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11462": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductVariants"
		},
		"11463": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11464": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11465": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductVariants"
		},
		"11466": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductVariants"
		},
		"11467": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11468": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11469": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductVariants"
		},
		"11470": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11471": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11472": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductVariants"
		},
		"11473": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductVariants"
		},
		"11474": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "id"
		},
		"11475": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11476": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11477": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductVariants"
		},
		"11478": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "selector"
		},
		"11479": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11480": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11481": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductVariants"
		},
		"11482": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductVariants"
		},
		"11483": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productVariantIds"
		},
		"11484": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11485": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductVariants"
		},
		"11486": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductVariants"
		},
		"11487": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"11488": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "variantIds"
		},
		"11489": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11490": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11491": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductVariants"
		},
		"11492": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductVariants"
		},
		"11493": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"11494": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "variantIds"
		},
		"11495": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11496": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11497": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProductCollection"
		},
		"11498": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProductCollection"
		},
		"11499": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productCollectionId"
		},
		"11500": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11501": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11502": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductCollections"
		},
		"11503": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductCollections"
		},
		"11504": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"11505": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11506": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11507": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductCollections"
		},
		"11508": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductCollections"
		},
		"11509": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"11510": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11511": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11512": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductCollections"
		},
		"11513": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductCollections"
		},
		"11514": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11515": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11516": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductCollections"
		},
		"11517": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11518": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11519": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductCollections"
		},
		"11520": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductCollections"
		},
		"11521": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11522": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11523": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductCollections"
		},
		"11524": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11525": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11526": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductCollections"
		},
		"11527": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductCollections"
		},
		"11528": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "id"
		},
		"11529": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11530": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11531": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductCollections"
		},
		"11532": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "selector"
		},
		"11533": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11534": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11535": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductCollections"
		},
		"11536": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductCollections"
		},
		"11537": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productCollectionIds"
		},
		"11538": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11539": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductCollections"
		},
		"11540": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductCollections"
		},
		"11541": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"11542": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "collectionIds"
		},
		"11543": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11544": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11545": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductCollections"
		},
		"11546": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductCollections"
		},
		"11547": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"11548": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "collectionIds"
		},
		"11549": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11550": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11551": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProductCategory"
		},
		"11552": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProductCategory"
		},
		"11553": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productCategoryId"
		},
		"11554": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11555": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11556": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductCategories"
		},
		"11557": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductCategories"
		},
		"11558": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"11559": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11560": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11561": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductCategories"
		},
		"11562": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductCategories"
		},
		"11563": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"11564": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11565": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11566": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductCategories"
		},
		"11567": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductCategories"
		},
		"11568": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11569": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11570": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductCategories"
		},
		"11571": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11572": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11573": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductCategories"
		},
		"11574": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductCategories"
		},
		"11575": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11576": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11577": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductCategories"
		},
		"11578": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11579": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11580": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductCategories"
		},
		"11581": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductCategories"
		},
		"11582": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "id"
		},
		"11583": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11584": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11585": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductCategories"
		},
		"11586": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "selector"
		},
		"11587": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"11588": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11589": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductCategories"
		},
		"11590": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductCategories"
		},
		"11591": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productCategoryIds"
		},
		"11592": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11593": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductCategories"
		},
		"11594": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductCategories"
		},
		"11595": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"11596": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "categoryIds"
		},
		"11597": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11598": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11599": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductCategories"
		},
		"11600": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductCategories"
		},
		"11601": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"11602": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "categoryIds"
		},
		"11603": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"11604": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11618": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService"
		},
		"11619": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService.__joinerConfig"
		},
		"11620": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService.__joinerConfig"
		},
		"11621": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService.__hooks"
		},
		"11622": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"11623": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.onApplicationStart"
		},
		"11624": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"11625": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"11626": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.onApplicationShutdown"
		},
		"11627": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"11628": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"11629": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.onApplicationPrepareShutdown"
		},
		"11630": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"11631": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"11632": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig"
		},
		"11633": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"11634": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"11635": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"11636": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"11637": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"11638": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"11639": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.withDeleted"
		},
		"11640": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.filters"
		},
		"11641": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.options"
		},
		"11642": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"11643": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO"
		},
		"11644": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.id"
		},
		"11645": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.title"
		},
		"11646": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.handle"
		},
		"11647": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.subtitle"
		},
		"11648": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.description"
		},
		"11649": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.is_giftcard"
		},
		"11650": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.status"
		},
		"11651": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.thumbnail"
		},
		"11652": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.width"
		},
		"11653": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.weight"
		},
		"11654": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.length"
		},
		"11655": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.height"
		},
		"11656": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.origin_country"
		},
		"11657": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.hs_code"
		},
		"11658": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.mid_code"
		},
		"11659": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.material"
		},
		"11660": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.collection"
		},
		"11661": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.collection_id"
		},
		"11662": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.categories"
		},
		"11663": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.type"
		},
		"11664": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.type_id"
		},
		"11665": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.tags"
		},
		"11666": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.variants"
		},
		"11667": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.options"
		},
		"11668": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.images"
		},
		"11669": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.discountable"
		},
		"11670": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.external_id"
		},
		"11671": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.created_at"
		},
		"11672": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.updated_at"
		},
		"11673": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.deleted_at"
		},
		"11674": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.metadata"
		},
		"11675": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "Context"
		},
		"11676": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__type"
		},
		"11677": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"11678": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"11679": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"11680": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"11681": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"11682": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionId"
		},
		"11683": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.messageAggregator"
		},
		"11684": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.requestId"
		},
		"11685": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"11686": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.parentStepIdempotencyKey"
		},
		"11687": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "TManager"
		},
		"11688": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps"
		},
		"11689": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.q"
		},
		"11690": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.status"
		},
		"11691": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.title"
		},
		"11692": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.handle"
		},
		"11693": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.sku"
		},
		"11694": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.id"
		},
		"11695": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.external_id"
		},
		"11696": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.is_giftcard"
		},
		"11697": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.tags"
		},
		"11698": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type"
		},
		"11699": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type.id"
		},
		"11700": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.variants"
		},
		"11701": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type"
		},
		"11702": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type.options"
		},
		"11703": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type"
		},
		"11704": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type.value"
		},
		"11705": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type.option_id"
		},
		"11706": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type.option"
		},
		"11707": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.type_id"
		},
		"11708": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.categories"
		},
		"11709": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type"
		},
		"11710": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type.id"
		},
		"11711": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type"
		},
		"11712": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type.id"
		},
		"11713": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.collection_id"
		},
		"11714": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.created_at"
		},
		"11715": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.updated_at"
		},
		"11716": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.deleted_at"
		},
		"11717": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"11718": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"11719": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO"
		},
		"11720": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.id"
		},
		"11721": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.title"
		},
		"11722": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.subtitle"
		},
		"11723": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.description"
		},
		"11724": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.is_giftcard"
		},
		"11725": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.discountable"
		},
		"11726": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.thumbnail"
		},
		"11727": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.handle"
		},
		"11728": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.status"
		},
		"11729": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.images"
		},
		"11730": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.external_id"
		},
		"11731": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.type_id"
		},
		"11732": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.collection_id"
		},
		"11733": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.tag_ids"
		},
		"11734": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.category_ids"
		},
		"11735": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.options"
		},
		"11736": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.variants"
		},
		"11737": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.width"
		},
		"11738": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.height"
		},
		"11739": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.length"
		},
		"11740": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.weight"
		},
		"11741": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.origin_country"
		},
		"11742": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.hs_code"
		},
		"11743": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.material"
		},
		"11744": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.mid_code"
		},
		"11745": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.metadata"
		},
		"11746": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductDTO"
		},
		"11747": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductDTO.id"
		},
		"11748": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.title"
		},
		"11749": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.subtitle"
		},
		"11750": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.description"
		},
		"11751": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.is_giftcard"
		},
		"11752": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.discountable"
		},
		"11753": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.thumbnail"
		},
		"11754": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.handle"
		},
		"11755": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.status"
		},
		"11756": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.images"
		},
		"11757": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.external_id"
		},
		"11758": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.type_id"
		},
		"11759": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.collection_id"
		},
		"11760": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.tag_ids"
		},
		"11761": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.category_ids"
		},
		"11762": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.options"
		},
		"11763": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.variants"
		},
		"11764": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.width"
		},
		"11765": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.height"
		},
		"11766": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.length"
		},
		"11767": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.weight"
		},
		"11768": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.origin_country"
		},
		"11769": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.hs_code"
		},
		"11770": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.material"
		},
		"11771": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.mid_code"
		},
		"11772": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.metadata"
		},
		"11773": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO"
		},
		"11774": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.title"
		},
		"11775": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.subtitle"
		},
		"11776": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.description"
		},
		"11777": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.is_giftcard"
		},
		"11778": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.discountable"
		},
		"11779": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.thumbnail"
		},
		"11780": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.handle"
		},
		"11781": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.status"
		},
		"11782": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.images"
		},
		"11783": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.external_id"
		},
		"11784": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.type_id"
		},
		"11785": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.collection_id"
		},
		"11786": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.tag_ids"
		},
		"11787": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.category_ids"
		},
		"11788": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.options"
		},
		"11789": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.variants"
		},
		"11790": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.width"
		},
		"11791": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.height"
		},
		"11792": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.length"
		},
		"11793": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.weight"
		},
		"11794": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.origin_country"
		},
		"11795": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.hs_code"
		},
		"11796": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.material"
		},
		"11797": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.mid_code"
		},
		"11798": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.metadata"
		},
		"11799": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "SoftDeleteReturn"
		},
		"11800": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"11801": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"11802": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RestoreReturn"
		},
		"11803": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"11804": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"11805": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductTagDTO"
		},
		"11806": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductTagDTO.id"
		},
		"11807": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductTagDTO.value"
		},
		"11808": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductTagDTO.metadata"
		},
		"11809": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductTagDTO.products"
		},
		"11810": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductTagProps"
		},
		"11811": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductTagProps.q"
		},
		"11812": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductTagProps.id"
		},
		"11813": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductTagProps.value"
		},
		"11814": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"11815": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"11816": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductTagDTO"
		},
		"11817": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductTagDTO.value"
		},
		"11818": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductTagDTO"
		},
		"11819": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductTagDTO.id"
		},
		"11820": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductTagDTO.value"
		},
		"11821": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductTagDTO"
		},
		"11822": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductTagDTO.value"
		},
		"11823": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductTypeDTO"
		},
		"11824": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductTypeDTO.id"
		},
		"11825": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductTypeDTO.value"
		},
		"11826": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductTypeDTO.metadata"
		},
		"11827": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductTypeDTO.created_at"
		},
		"11828": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductTypeDTO.updated_at"
		},
		"11829": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductTypeDTO.deleted_at"
		},
		"11830": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductTypeProps"
		},
		"11831": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductTypeProps.q"
		},
		"11832": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductTypeProps.id"
		},
		"11833": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductTypeProps.value"
		},
		"11834": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"11835": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"11836": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductTypeDTO"
		},
		"11837": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductTypeDTO.value"
		},
		"11838": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductTypeDTO.metadata"
		},
		"11839": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductTypeDTO"
		},
		"11840": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductTypeDTO.id"
		},
		"11841": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductTypeDTO.value"
		},
		"11842": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductTypeDTO.metadata"
		},
		"11843": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductTypeDTO"
		},
		"11844": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductTypeDTO.value"
		},
		"11845": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductTypeDTO.metadata"
		},
		"11846": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO"
		},
		"11847": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.id"
		},
		"11848": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.title"
		},
		"11849": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.product"
		},
		"11850": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.product_id"
		},
		"11851": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.values"
		},
		"11852": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.metadata"
		},
		"11853": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.created_at"
		},
		"11854": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.updated_at"
		},
		"11855": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.deleted_at"
		},
		"11856": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductOptionProps"
		},
		"11857": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductOptionProps.q"
		},
		"11858": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductOptionProps.id"
		},
		"11859": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductOptionProps.title"
		},
		"11860": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductOptionProps.product_id"
		},
		"11861": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"11862": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"11863": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductOptionDTO"
		},
		"11864": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductOptionDTO.title"
		},
		"11865": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductOptionDTO.values"
		},
		"11866": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductOptionDTO.product_id"
		},
		"11867": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductOptionDTO"
		},
		"11868": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductOptionDTO.id"
		},
		"11869": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductOptionDTO.title"
		},
		"11870": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductOptionDTO.values"
		},
		"11871": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductOptionDTO.product_id"
		},
		"11872": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductOptionDTO"
		},
		"11873": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductOptionDTO.title"
		},
		"11874": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductOptionDTO.values"
		},
		"11875": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductOptionDTO.product_id"
		},
		"11876": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductOptionValueProps"
		},
		"11877": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductOptionValueProps.q"
		},
		"11878": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductOptionValueProps.id"
		},
		"11879": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductOptionValueProps.value"
		},
		"11880": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"11881": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"11882": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO"
		},
		"11883": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.id"
		},
		"11884": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.value"
		},
		"11885": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.option"
		},
		"11886": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.option_id"
		},
		"11887": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.metadata"
		},
		"11888": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.created_at"
		},
		"11889": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.updated_at"
		},
		"11890": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.deleted_at"
		},
		"11891": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductOptionValueDTO"
		},
		"11892": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductOptionValueDTO.value"
		},
		"11893": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductOptionValueDTO.metadata"
		},
		"11894": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductOptionValueDTO"
		},
		"11895": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductOptionValueDTO.value"
		},
		"11896": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductOptionValueDTO.metadata"
		},
		"11897": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO"
		},
		"11898": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.id"
		},
		"11899": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.title"
		},
		"11900": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.sku"
		},
		"11901": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.barcode"
		},
		"11902": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.ean"
		},
		"11903": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.upc"
		},
		"11904": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.allow_backorder"
		},
		"11905": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.manage_inventory"
		},
		"11906": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.requires_shipping"
		},
		"11907": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.hs_code"
		},
		"11908": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.origin_country"
		},
		"11909": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.mid_code"
		},
		"11910": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.material"
		},
		"11911": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.weight"
		},
		"11912": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.length"
		},
		"11913": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.height"
		},
		"11914": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.width"
		},
		"11915": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.options"
		},
		"11916": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.metadata"
		},
		"11917": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product"
		},
		"11918": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product_id"
		},
		"11919": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.variant_rank"
		},
		"11920": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.created_at"
		},
		"11921": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.updated_at"
		},
		"11922": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.deleted_at"
		},
		"11923": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductVariantProps"
		},
		"11924": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductVariantProps.q"
		},
		"11925": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductVariantProps.id"
		},
		"11926": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductVariantProps.sku"
		},
		"11927": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductVariantProps.product_id"
		},
		"11928": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductVariantProps.options"
		},
		"11929": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type"
		},
		"11930": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type.value"
		},
		"11931": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type.option_id"
		},
		"11932": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type.option"
		},
		"11933": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"11934": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"11935": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO"
		},
		"11936": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.product_id"
		},
		"11937": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.title"
		},
		"11938": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.sku"
		},
		"11939": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.barcode"
		},
		"11940": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.ean"
		},
		"11941": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.upc"
		},
		"11942": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.allow_backorder"
		},
		"11943": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.manage_inventory"
		},
		"11944": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.inventory_items"
		},
		"11945": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.hs_code"
		},
		"11946": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.origin_country"
		},
		"11947": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.mid_code"
		},
		"11948": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.material"
		},
		"11949": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.weight"
		},
		"11950": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.length"
		},
		"11951": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.height"
		},
		"11952": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.width"
		},
		"11953": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.options"
		},
		"11954": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.metadata"
		},
		"11955": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductVariantDTO"
		},
		"11956": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductVariantDTO.id"
		},
		"11957": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.title"
		},
		"11958": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.sku"
		},
		"11959": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.barcode"
		},
		"11960": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.ean"
		},
		"11961": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.upc"
		},
		"11962": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.allow_backorder"
		},
		"11963": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.manage_inventory"
		},
		"11964": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.hs_code"
		},
		"11965": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.origin_country"
		},
		"11966": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.mid_code"
		},
		"11967": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.material"
		},
		"11968": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.weight"
		},
		"11969": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.length"
		},
		"11970": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.height"
		},
		"11971": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.width"
		},
		"11972": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.options"
		},
		"11973": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.metadata"
		},
		"11974": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO"
		},
		"11975": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.title"
		},
		"11976": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.sku"
		},
		"11977": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.barcode"
		},
		"11978": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.ean"
		},
		"11979": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.upc"
		},
		"11980": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.allow_backorder"
		},
		"11981": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.manage_inventory"
		},
		"11982": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.hs_code"
		},
		"11983": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.origin_country"
		},
		"11984": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.mid_code"
		},
		"11985": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.material"
		},
		"11986": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.weight"
		},
		"11987": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.length"
		},
		"11988": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.height"
		},
		"11989": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.width"
		},
		"11990": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.options"
		},
		"11991": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.metadata"
		},
		"11992": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO"
		},
		"11993": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.id"
		},
		"11994": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.title"
		},
		"11995": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.handle"
		},
		"11996": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.metadata"
		},
		"11997": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.created_at"
		},
		"11998": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.updated_at"
		},
		"11999": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.deleted_at"
		},
		"12000": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.products"
		},
		"12001": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCollectionProps"
		},
		"12002": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCollectionProps.q"
		},
		"12003": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCollectionProps.id"
		},
		"12004": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCollectionProps.handle"
		},
		"12005": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCollectionProps.title"
		},
		"12006": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"12007": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"12008": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCollectionDTO"
		},
		"12009": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCollectionDTO.title"
		},
		"12010": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCollectionDTO.handle"
		},
		"12011": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCollectionDTO.product_ids"
		},
		"12012": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCollectionDTO.metadata"
		},
		"12013": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductCollectionDTO"
		},
		"12014": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductCollectionDTO.id"
		},
		"12015": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.value"
		},
		"12016": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.title"
		},
		"12017": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.handle"
		},
		"12018": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.product_ids"
		},
		"12019": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.metadata"
		},
		"12020": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO"
		},
		"12021": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.value"
		},
		"12022": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.title"
		},
		"12023": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.handle"
		},
		"12024": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.product_ids"
		},
		"12025": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.metadata"
		},
		"12026": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO"
		},
		"12027": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.id"
		},
		"12028": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.name"
		},
		"12029": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.description"
		},
		"12030": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.handle"
		},
		"12031": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.is_active"
		},
		"12032": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.is_internal"
		},
		"12033": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.rank"
		},
		"12034": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.metadata"
		},
		"12035": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.parent_category"
		},
		"12036": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.parent_category_id"
		},
		"12037": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.category_children"
		},
		"12038": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.products"
		},
		"12039": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.created_at"
		},
		"12040": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.updated_at"
		},
		"12041": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.deleted_at"
		},
		"12042": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps"
		},
		"12043": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps.q"
		},
		"12044": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps.id"
		},
		"12045": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps.name"
		},
		"12046": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps.parent_category_id"
		},
		"12047": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps.handle"
		},
		"12048": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps.is_active"
		},
		"12049": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps.is_internal"
		},
		"12050": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps.include_descendants_tree"
		},
		"12051": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps.include_ancestors_tree"
		},
		"12052": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"12053": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"12054": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCategoryDTO"
		},
		"12055": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCategoryDTO.name"
		},
		"12056": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCategoryDTO.description"
		},
		"12057": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCategoryDTO.handle"
		},
		"12058": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCategoryDTO.is_active"
		},
		"12059": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCategoryDTO.is_internal"
		},
		"12060": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCategoryDTO.rank"
		},
		"12061": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCategoryDTO.parent_category_id"
		},
		"12062": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCategoryDTO.metadata"
		},
		"12063": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductCategoryDTO"
		},
		"12064": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductCategoryDTO.id"
		},
		"12065": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.name"
		},
		"12066": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.description"
		},
		"12067": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.handle"
		},
		"12068": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.is_active"
		},
		"12069": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.is_internal"
		},
		"12070": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.rank"
		},
		"12071": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.parent_category_id"
		},
		"12072": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.metadata"
		},
		"12073": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO"
		},
		"12074": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.name"
		},
		"12075": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.description"
		},
		"12076": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.handle"
		},
		"12077": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.is_active"
		},
		"12078": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.is_internal"
		},
		"12079": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.rank"
		},
		"12080": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.parent_category_id"
		},
		"12081": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.metadata"
		},
		"12082": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"12083": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"12084": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"12085": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"12086": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"12087": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"12088": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"12089": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.entity"
		},
		"12090": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"12091": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"12092": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"12093": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"12094": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isList"
		},
		"12095": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"12096": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"12097": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"12098": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"12099": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"12100": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"12101": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraDataFields"
		},
		"12102": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"12103": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"12104": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"12105": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"12106": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"12107": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfigOrder"
		},
		"12108": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"12109": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.__index"
		},
		"12111": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"12112": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductStatus"
		},
		"12113": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductImageDTO"
		},
		"12114": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductImageDTO.id"
		},
		"12115": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductImageDTO.url"
		},
		"12116": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductImageDTO.rank"
		},
		"12117": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductImageDTO.metadata"
		},
		"12118": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductImageDTO.created_at"
		},
		"12119": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductImageDTO.updated_at"
		},
		"12120": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductImageDTO.deleted_at"
		},
		"12121": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "MetadataType"
		},
		"12122": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator"
		},
		"12123": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"12124": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"12125": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "msg"
		},
		"12126": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"12127": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"12128": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "format"
		},
		"12129": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"12130": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"12131": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"12132": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"12133": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "T"
		},
		"12134": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "messageData"
		},
		"12135": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "options"
		},
		"12136": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable"
		},
		"12137": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"12138": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"12139": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.T"
		},
		"12140": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "OperatorMap"
		},
		"12141": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"12142": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$and"
		},
		"12143": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$or"
		},
		"12144": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$eq"
		},
		"12145": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ne"
		},
		"12146": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$in"
		},
		"12147": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$nin"
		},
		"12148": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$not"
		},
		"12149": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gt"
		},
		"12150": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gte"
		},
		"12151": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lt"
		},
		"12152": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lte"
		},
		"12153": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$like"
		},
		"12154": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$re"
		},
		"12155": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ilike"
		},
		"12156": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$fulltext"
		},
		"12157": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$overlap"
		},
		"12158": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contains"
		},
		"12159": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contained"
		},
		"12160": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$exists"
		},
		"12161": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"12162": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductImageDTO"
		},
		"12163": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductImageDTO.id"
		},
		"12164": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductImageDTO.url"
		},
		"12165": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductImageDTO.metadata"
		},
		"12166": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantInventoryKit"
		},
		"12167": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantInventoryKit.inventory_item_id"
		},
		"12168": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantInventoryKit.required_quantity"
		},
		"12169": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"12170": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"12171": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"12172": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"12173": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"12174": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"12175": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"12176": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"12177": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"12178": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"12179": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"12180": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"12181": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.entity"
		},
		"12182": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"12183": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"12184": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"12185": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"12186": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"12187": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LinkModulesExtraFields"
		},
		"12188": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"12189": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"12190": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"12191": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"12192": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"12193": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Message"
		},
		"12194": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"12195": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"12196": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"12197": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat"
		},
		"12198": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.groupBy"
		},
		"12199": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.sortBy"
		},
		"12200": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type"
		},
		"12201": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__index"
		},
		"12203": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.internal"
		},
		"12204": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "RawMessageFormat"
		},
		"12205": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"12206": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"12207": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"12208": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.source"
		},
		"12209": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"12210": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"12211": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.context"
		},
		"12212": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"12213": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"12214": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Query"
		},
		"12215": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"12216": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ExpandScalar"
		},
		"12217": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"12218": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductImageDTO"
		},
		"12219": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductImageDTO.url"
		},
		"12220": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductImageDTO.metadata"
		},
		"12221": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"12222": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"12223": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.entity"
		},
		"12224": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"12225": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"12226": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"12227": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"12228": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"12229": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"12230": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"12231": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.entity"
		},
		"12232": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"12233": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"12234": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"12235": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Event"
		},
		"12236": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"12237": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.name"
		},
		"12238": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"12239": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"12240": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"12241": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Scalar"
		},
		"12242": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"12243": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"12244": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"12245": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterQuery"
		},
		"12246": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"12247": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Prev"
		},
		"12248": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue"
		},
		"12249": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"12250": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "EventMetadata"
		},
		"12251": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"12252": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"12253": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "Constructor"
		},
		"12254": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"12255": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"12256": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"12257": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"12258": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "args"
		},
		"12259": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "T"
		},
		"12260": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterQueryProperties"
		},
		"12261": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"12262": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"12264": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"12265": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Prev"
		},
		"12266": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue2"
		},
		"12267": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"12268": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "PrevLimit"
		},
		"12269": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Primary"
		},
		"12270": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"12271": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.[PrimaryKeyType]"
		},
		"12272": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"12273": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type._id"
		},
		"12274": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"12275": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.uuid"
		},
		"12276": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"12277": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.id"
		},
		"12278": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"12279": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ReadonlyPrimary"
		},
		"12280": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/types/src/product/service.ts"
		},
		"reflections": {
			"1": 11183
		}
	}
}
