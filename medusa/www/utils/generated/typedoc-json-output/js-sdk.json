{
	"id": 39174,
	"name": "js-sdk",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 39175,
			"name": "admin",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 40974,
					"name": "ApiKey",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 40978,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/api-key.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 40975,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/api-key.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 40976,
									"name": "ApiKey",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/api-key.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 40977,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 40974,
										"name": "ApiKey",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 40979,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/api-key.ts",
									"line": 63,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40980,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This methods retrieves a paginated list of API keys. It sends a request to the \n[List API Keys](https://docs.medusajs.com/api/admin#api-keys_getapikeys) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of API keys."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of API keys:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.apiKey.list()\n.then(({ api_keys, count, limit, offset }) => {\n  console.log(api_keys)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.apiKey.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ api_keys, count, limit, offset }) => {\n  console.log(api_keys)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each API key:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.apiKey.list({\n  fields: \"id,*sales_channels\"\n})\n.then(({ api_keys, count, limit, offset }) => {\n  console.log(api_keys)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/api-key.ts",
											"line": 63,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40981,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/api-key/admin/queries.ts",
													"qualifiedName": "AdminGetApiKeysParams"
												},
												"name": "AdminGetApiKeysParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40982,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/api-key/admin/responses.ts",
													"qualifiedName": "AdminApiKeyListResponse"
												},
												"name": "AdminApiKeyListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40983,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/api-key.ts",
									"line": 93,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40984,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates an API key. It sends a request to the [Create API Key](https://docs.medusajs.com/api/admin#api-keys_postapikeys)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created API key"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.apiKey.create({\n  title: \"Development\",\n  type: \"publishable\"\n})\n.then(({ api_key }) => {\n  console.log(api_key)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/api-key.ts",
											"line": 93,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40985,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The API key's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/api-key/admin/payloads.ts",
													"qualifiedName": "AdminCreateApiKey"
												},
												"name": "AdminCreateApiKey",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40986,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the created API key."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/api-key/admin/queries.ts",
													"qualifiedName": "AdminGetApiKeysParams"
												},
												"name": "AdminGetApiKeysParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40987,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/api-key/admin/responses.ts",
													"qualifiedName": "AdminApiKeyResponse"
												},
												"name": "AdminApiKeyResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40988,
							"name": "revoke",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/api-key.ts",
									"line": 123,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40989,
									"name": "revoke",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method revokes an API key. It sends a request to the \n[Revoke API Key](https://docs.medusajs.com/api/admin#api-keys_postapikeysidrevoke) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The API key's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.apiKey.revoke(\"apk_123\")\n.then(({ api_key }) => {\n  console.log(api_key)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/api-key.ts",
											"line": 123,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40990,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The API key's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40991,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/api-key/admin/responses.ts",
													"qualifiedName": "AdminApiKeyResponse"
												},
												"name": "AdminApiKeyResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40992,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/api-key.ts",
									"line": 147,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40993,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves an API key's details. It sends a request to the \n[Get API key](https://docs.medusajs.com/api/admin#api-keys_getapikeysid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The API key's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.apiKey.retrieve(\"apk_123\")\n.then(({ api_key }) => {\n  console.log(api_key)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/api-key.ts",
											"line": 147,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40994,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The API key's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40995,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/api-key/admin/responses.ts",
													"qualifiedName": "AdminApiKeyResponse"
												},
												"name": "AdminApiKeyResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40996,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/api-key.ts",
									"line": 174,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40997,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an API key's details. It sends a request to the \n[Update API Key](https://docs.medusajs.com/api/admin#api-keys_postapikeysid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The API key's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.apiKey.update(\"apk_123\", {\n  title: \"Development\"\n})\n.then(({ api_key }) => {\n  console.log(api_key)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/api-key.ts",
											"line": 174,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40998,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The API key's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40999,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update in the API key."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/api-key/admin/payloads.ts",
													"qualifiedName": "AdminUpdateApiKey"
												},
												"name": "AdminUpdateApiKey",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41000,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the API key."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/api-key/admin/queries.ts",
													"qualifiedName": "AdminGetApiKeysParams"
												},
												"name": "AdminGetApiKeysParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41001,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/api-key/admin/responses.ts",
													"qualifiedName": "AdminApiKeyResponse"
												},
												"name": "AdminApiKeyResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41002,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/api-key.ts",
									"line": 205,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 41003,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes an API key by its ID. It sends a request to the \n[Delete API Key](https://docs.medusajs.com/api/admin#api-keys_deleteapikeysid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.apiKey.delete(\"apk_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/api-key.ts",
											"line": 205,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 41004,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The API key's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41005,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/api-key/admin/responses.ts",
													"qualifiedName": "AdminApiKeyDeleteResponse"
												},
												"name": "AdminApiKeyDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41006,
							"name": "batchSalesChannels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/api-key.ts",
									"line": 234,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 41007,
									"name": "batchSalesChannels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages the sales channels associated with a publishable API key to either add\nor remove associations. It sends a request to the [Manage Sales Channels](https://docs.medusajs.com/api/admin#api-keys_postapikeysidsaleschannels)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The API key's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.apiKey.batchSalesChannels(\"apk_123\", {\n  add: [\"sc_123\"],\n  remove: [\"sc_321\"]\n})\n.then(({ api_key }) => {\n  console.log(api_key)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/api-key.ts",
											"line": 234,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 41008,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The API key's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41009,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The sales channels to add or remove from the API key."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "AdminBatchLink"
												},
												"name": "AdminBatchLink",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41010,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/api-key/admin/responses.ts",
													"qualifiedName": "AdminApiKeyResponse"
												},
												"name": "AdminApiKeyResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								40975
							]
						},
						{
							"title": "Properties",
							"children": [
								40978
							]
						},
						{
							"title": "Methods",
							"children": [
								40979,
								40983,
								40988,
								40992,
								40996,
								41002,
								41006
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/api-key.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 41149,
					"name": "Campaign",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 41153,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/campaign.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 41150,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/campaign.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 41151,
									"name": "Campaign",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/campaign.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 41152,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 41149,
										"name": "Campaign",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 41154,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/campaign.ts",
									"line": 49,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 41155,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a campaign by its ID. It sends a request to the \n[Get Campaign](https://docs.medusajs.com/api/admin#campaigns_getcampaignsid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The campaign's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a campaign by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.campaign.retrieve(\"procamp_123\")\n.then(({ campaign }) => {\n  console.log(campaign)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.campaign.retrieve(\"procamp_123\", {\n  fields: \"id,*budget\"\n})\n.then(({ campaign }) => {\n  console.log(campaign)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/campaign.ts",
											"line": 49,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 41156,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The campaign's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41157,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the campaign."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/queries.ts",
													"qualifiedName": "AdminGetCampaignParams"
												},
												"name": "AdminGetCampaignParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41158,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
													"qualifiedName": "AdminCampaignResponse"
												},
												"name": "AdminCampaignResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41159,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/campaign.ts",
									"line": 109,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 41160,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of campaigns. It sends a request to the \n[List Campaigns](https://docs.medusajs.com/api/admin#campaigns_getcampaigns) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of campaigns."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of campaigns:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.campaign.list()\n.then(({ campaigns, count, limit, offset }) => {\n  console.log(campaigns)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.campaign.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ campaigns, count, limit, offset }) => {\n  console.log(campaigns)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each campaign:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.campaign.list({\n  fields: \"id,*budget\"\n})\n.then(({ campaigns, count, limit, offset }) => {\n  console.log(campaigns)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/campaign.ts",
											"line": 109,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 41161,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/queries.ts",
													"qualifiedName": "AdminGetCampaignsParams"
												},
												"name": "AdminGetCampaignsParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41162,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
													"qualifiedName": "AdminCampaignListResponse"
												},
												"name": "AdminCampaignListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41163,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/campaign.ts",
									"line": 138,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 41164,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a campaign. It sends a request to the \n[Create Campaign](https://docs.medusajs.com/api/admin#campaigns_postcampaigns) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The campaign's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.campaign.create({\n  name: \"Summer Campaign\"\n})\n.then(({ campaign }) => {\n  console.log(campaign)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/campaign.ts",
											"line": 138,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 41165,
											"name": "payload",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the campaign to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
													"qualifiedName": "AdminCreateCampaign"
												},
												"name": "AdminCreateCampaign",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41166,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
													"qualifiedName": "AdminCampaignResponse"
												},
												"name": "AdminCampaignResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41167,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/campaign.ts",
									"line": 169,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 41168,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a campaign. It sends a request to the \n[Update Campaign](https://docs.medusajs.com/api/admin#campaigns_postcampaignsid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The campaign's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.campaign.update(\"procamp_123\", {\n  name: \"Summer Campaign\"\n})\n.then(({ campaign }) => {\n  console.log(campaign)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/campaign.ts",
											"line": 169,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 41169,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The campaign's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41170,
											"name": "payload",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update in the campaign."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
													"qualifiedName": "AdminUpdateCampaign"
												},
												"name": "AdminUpdateCampaign",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41171,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
													"qualifiedName": "AdminCampaignResponse"
												},
												"name": "AdminCampaignResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41172,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/campaign.ts",
									"line": 198,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 41173,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a campaign by its ID. It sends a request to the\n[Delete Campaign](https://docs.medusajs.com/api/admin#campaigns_deletecampaignsid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.campaign.delete(\"procamp_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/campaign.ts",
											"line": 198,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 41174,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The campaign's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41175,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
													"qualifiedName": "DeleteResponse"
												},
												"typeArguments": [
													{
														"type": "literal",
														"value": "campaign"
													}
												],
												"name": "DeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41176,
							"name": "batchPromotions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/campaign.ts",
									"line": 218,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 41177,
									"name": "batchPromotions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages the promotions of a campaign to either add or remove the association between them.\nIt sends a request to the [Manage Promotions](https://docs.medusajs.com/api/admin#campaigns_postcampaignsidpromotions)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The campaign's details."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/campaign.ts",
											"line": 218,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 41178,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The campaign's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41179,
											"name": "payload",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The promotions to add or remove associations to them."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "AdminBatchLink"
												},
												"name": "AdminBatchLink",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41180,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
													"qualifiedName": "AdminCampaignResponse"
												},
												"name": "AdminCampaignResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								41150
							]
						},
						{
							"title": "Properties",
							"children": [
								41153
							]
						},
						{
							"title": "Methods",
							"children": [
								41154,
								41159,
								41163,
								41167,
								41172,
								41176
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/campaign.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 40522,
					"name": "Claim",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 40526,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 10,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 40523,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 14,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 40524,
									"name": "Claim",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 14,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 40525,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 40522,
										"name": "Claim",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 40527,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 64,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40528,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of claims. It sends a request to the \n[List Claims](https://docs.medusajs.com/api/admin#claims_getclaims) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of claims."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of claims:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.list()\n.then(({ claims, count, limit, offset }) => {\n  console.log(claims)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ claims, count, limit, offset }) => {\n  console.log(claims)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each claim:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.list({\n  fields: \"id,*additional_items\"\n})\n.then(({ claims, count, limit, offset }) => {\n  console.log(claims)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 64,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40529,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/queries.ts",
													"qualifiedName": "AdminClaimListParams"
												},
												"name": "AdminClaimListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40530,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimListResponse"
												},
												"name": "AdminClaimListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40531,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 106,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40532,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a claim. It sends a request to the\n[Get Claim](https://docs.medusajs.com/api/admin#claims_getclaimsid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The claim's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a claim by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.retrieve(\"claim_123\")\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.retrieve(\"claim_123\", {\n  fields: \"id,*additional_items\"\n})\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 106,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40533,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40534,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40535,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimResponse"
												},
												"name": "AdminClaimResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40536,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 138,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40537,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a claim. It sends a request to the \n[Create Claim](https://docs.medusajs.com/api/admin#claims_postclaims) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The claim and order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.create({\n  type: \"refund\",\n  order_id: \"order_123\",\n})\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 138,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40538,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
													"qualifiedName": "AdminCreateClaim"
												},
												"name": "AdminCreateClaim",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40539,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40540,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimOrderResponse"
												},
												"name": "AdminClaimOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40541,
							"name": "cancel",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 169,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40542,
									"name": "cancel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method cancels a claim. It sends a request to the\n[Cancel Claim](https://docs.medusajs.com/api/admin#claims_postclaimsidcancel) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The claim's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.cancel(\"claim_123\")\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 169,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40543,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40544,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40545,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimResponse"
												},
												"name": "AdminClaimResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40546,
							"name": "addItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 207,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40547,
									"name": "addItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds items to the claim. It sends a request to the\n[Add Items](https://docs.medusajs.com/api/admin#claims_postclaimsidclaimitems) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The claim's details with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.addItems(\"claim_123\", {\n  items: [\n    {\n      id: \"orli_123\",\n      quantity: 1\n    }\n  ]\n})\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 207,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40548,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the claim to add the items to."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40549,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The items' details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
													"qualifiedName": "AdminAddClaimItems"
												},
												"name": "AdminAddClaimItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40550,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40551,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimPreviewResponse"
												},
												"name": "AdminClaimPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40552,
							"name": "updateItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 250,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40553,
									"name": "updateItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a claim item by the ID of the item's "
											},
											{
												"kind": "code",
												"text": "`WRITE_OFF_ITEM`"
											},
											{
												"kind": "text",
												"text": " action. It\nsends a request to the [Update Claim Item](https://docs.medusajs.com/api/admin#claims_postclaimsidclaimitemsaction_id) API route.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The claim's details with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.updateItem(\n  \"claim_123\", \n  \"ordchact_123\",\n  {\n    quantity: 1\n  }\n  )\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 250,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40554,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40555,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the order item's "
													},
													{
														"kind": "code",
														"text": "`WRITE_OFF_ITEM`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40556,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
													"qualifiedName": "AdminUpdateClaimItem"
												},
												"name": "AdminUpdateClaimItem",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40557,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40558,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimPreviewResponse"
												},
												"name": "AdminClaimPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40559,
							"name": "removeItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 291,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40560,
									"name": "removeItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes a claim item from a claim by the ID of the item's "
											},
											{
												"kind": "code",
												"text": "`WRITE_OFF_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\nIt sends a request to the [Remove Claim Item](https://docs.medusajs.com/api/admin#claims_deleteclaimsidclaimitemsaction_id)\nAPI route.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The claim's details with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.removeItem(\n  \"claim_123\", \n  \"ordchact_123\",\n  )\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 291,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40561,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40562,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the order item's "
													},
													{
														"kind": "code",
														"text": "`WRITE_OFF_ITEM`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40563,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40564,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimPreviewResponse"
												},
												"name": "AdminClaimPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40565,
							"name": "addInboundItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 335,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40566,
									"name": "addInboundItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds inbound (or return) items to the claim. These inbound items will have a "
											},
											{
												"kind": "code",
												"text": "`RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\n\nThis method sends a request to the [Add Inbound Items](https://docs.medusajs.com/api/admin#claims_postclaimsidinbounditems)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the return associated with the claim, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.addInboundItems(\n  \"claim_123\", \n  {\n    items: [\n      {\n        id: \"orli_123\",\n        quantity: 1\n      }\n    ]\n  },\n  )\n.then(({ return: returnData }) => {\n  console.log(returnData)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 335,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40567,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the claim to add the inbound items to."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40568,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inbound items' details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
													"qualifiedName": "AdminAddClaimInboundItems"
												},
												"name": "AdminAddClaimInboundItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40569,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40570,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimReturnPreviewResponse"
												},
												"name": "AdminClaimReturnPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40571,
							"name": "updateInboundItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 379,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40572,
									"name": "updateInboundItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an inbound (or return) item of a claim using the ID of the item's "
											},
											{
												"kind": "code",
												"text": "`RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\nIt sends a request to the [Update Inbound Item](https://docs.medusajs.com/api/admin#claims_postclaimsidinbounditemsaction_id)\nAPI route.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the return associated wth the claim, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.updateInboundItem(\n  \"claim_123\", \n  \"ordchact_123\",\n  {\n    quantity: 1\n  },\n  )\n.then(({ return: returnData }) => {\n  console.log(returnData)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 379,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40573,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40574,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the return item's "
													},
													{
														"kind": "code",
														"text": "`RETURN_ITEM`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40575,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to update in the inbound item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
													"qualifiedName": "AdminUpdateClaimInboundItem"
												},
												"name": "AdminUpdateClaimInboundItem",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40576,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40577,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimReturnPreviewResponse"
												},
												"name": "AdminClaimReturnPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40578,
							"name": "removeInboundItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 420,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40579,
									"name": "removeInboundItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes an inbound (or return) item from a claim using the ID of the item's "
											},
											{
												"kind": "code",
												"text": "`RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\nIt sends a request to the [Remove Inbound Item](https://docs.medusajs.com/api/admin#claims_deleteclaimsidinbounditemsaction_id)\nAPI route.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the return associated wth the claim, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.removeInboundItem(\n  \"claim_123\", \n  \"ordchact_123\",\n  )\n.then(({ return: returnData }) => {\n  console.log(returnData)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 420,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40580,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40581,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return item's "
													},
													{
														"kind": "code",
														"text": "`RETURN_ITEM`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40582,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40583,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimReturnPreviewResponse"
												},
												"name": "AdminClaimReturnPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40584,
							"name": "addInboundShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 461,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40585,
									"name": "addInboundShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds an inbound (or return) shipping method to a claim. \nThe inbound shipping method will have a "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nThis method sends a request to the [Add Inbound Shipping](https://docs.medusajs.com/api/admin#claims_postclaimsidinboundshippingmethod)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the return associated wth the claim, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.addInboundShipping(\n  \"claim_123\", \n  {\n    shipping_option_id: \"so_123\",\n    custom_amount: 10\n  },\n  )\n.then(({ return: returnData }) => {\n  console.log(returnData)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 461,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40586,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40587,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The shipping method's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
													"qualifiedName": "AdminClaimAddInboundShipping"
												},
												"name": "AdminClaimAddInboundShipping",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40588,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40589,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimReturnPreviewResponse"
												},
												"name": "AdminClaimReturnPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40590,
							"name": "updateInboundShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 505,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40591,
									"name": "updateInboundShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a shipping method for returning items in the claim using the ID of the method's "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\nIt sends a request to the [Update Inbound Shipping](https://docs.medusajs.com/api/admin#claims_postclaimsidinboundshippingmethodaction_id)\nAPI route.\n\nEvery shipping method has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the claim, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.updateInboundShipping(\n  \"claim_123\", \n  \"ordchact_123\",\n  {\n    custom_amount: 10\n  },\n  )\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 505,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40592,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40593,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the shipping method's "
													},
													{
														"kind": "code",
														"text": "`SHIPPING_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40594,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to update in the shipping method"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
													"qualifiedName": "AdminClaimUpdateInboundShipping"
												},
												"name": "AdminClaimUpdateInboundShipping",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40595,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40596,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimPreviewResponse"
												},
												"name": "AdminClaimPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40597,
							"name": "deleteInboundShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 546,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40598,
									"name": "deleteInboundShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a shipping method for returning items in the claim using the ID of the method's "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\nIt sends a request to the [Remove Inbound Shipping](https://docs.medusajs.com/api/admin#claims_deleteclaimsidinboundshippingmethodaction_id)\nAPI route.\n\nEvery shipping method has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the return associated wth the claim, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.deleteInboundShipping(\n  \"claim_123\", \n  \"ordchact_123\",\n  )\n.then(({ return: returnData }) => {\n  console.log(returnData)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 546,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40599,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40600,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the shipping method's "
													},
													{
														"kind": "code",
														"text": "`SHIPPING_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40601,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40602,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimReturnPreviewResponse"
												},
												"name": "AdminClaimReturnPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40603,
							"name": "addOutboundItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 587,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40604,
									"name": "addOutboundItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds outbound (or new) items to a claim. These outbound items will have an "
											},
											{
												"kind": "code",
												"text": "`ITEM_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\nIt sends a request to the [Add Outbound Items](https://docs.medusajs.com/api/admin#claims_postclaimsidoutbounditems)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the claim, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.addOutboundItems(\n  \"claim_123\", \n  {\n    items: [{\n      id: \"orli_123\",\n      quantity: 1\n    }]\n  },\n  )\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 587,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40605,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the claim to add the outbound items to."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40606,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The items' details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
													"qualifiedName": "AdminAddClaimOutboundItems"
												},
												"name": "AdminAddClaimOutboundItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40607,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40608,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimPreviewResponse"
												},
												"name": "AdminClaimPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40609,
							"name": "updateOutboundItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 631,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40610,
									"name": "updateOutboundItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an outbound (or new) item of a claim using the ID of the item's "
											},
											{
												"kind": "code",
												"text": "`ITEM_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\nIt sends a request to the [Update Outbound Item](https://docs.medusajs.com/api/admin#claims_postclaimsidoutbounditemsaction_id)\nAPI route.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the claim, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.updateOutboundItem(\n  \"claim_123\", \n  \"ordchact_123\",\n  {\n    quantity: 1\n  },\n  )\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 631,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40611,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40612,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the new claim item's "
													},
													{
														"kind": "code",
														"text": "`ITEM_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40613,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The item's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
													"qualifiedName": "AdminUpdateClaimOutboundItem"
												},
												"name": "AdminUpdateClaimOutboundItem",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40614,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40615,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimPreviewResponse"
												},
												"name": "AdminClaimPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40616,
							"name": "removeOutboundItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 672,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40617,
									"name": "removeOutboundItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes an outbound (or new) item from a claim using the ID of the item's "
											},
											{
												"kind": "code",
												"text": "`ITEM_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\nIt sends a request to the [Remove Outbound Item](https://docs.medusajs.com/api/admin#claims_deleteclaimsidoutbounditemsaction_id)\nAPI route.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the claim, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.removeOutboundItem(\n  \"claim_123\", \n  \"ordchact_123\",\n)\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 672,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40618,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40619,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the new claim item's "
													},
													{
														"kind": "code",
														"text": "`ITEM_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40620,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40621,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimPreviewResponse"
												},
												"name": "AdminClaimPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40622,
							"name": "addOutboundShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 714,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40623,
									"name": "addOutboundShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds outbound an outbound shipping method to a claim. \nThe outbound shipping method will have a "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nThis method sends a request to the \n[Add Outbound Shipping](https://docs.medusajs.com/api/admin#claims_postclaimsidoutboundshippingmethod)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the claim, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n* sdk.admin.claim.addOutboundShipping(\n  \"claim_123\", \n  {\n    shipping_option_id: \"so_123\",\n    custom_amount: 10\n  },\n)\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 714,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40624,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40625,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The shipping method's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
													"qualifiedName": "AdminClaimAddOutboundShipping"
												},
												"name": "AdminClaimAddOutboundShipping",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40626,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40627,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimPreviewResponse"
												},
												"name": "AdminClaimPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40628,
							"name": "updateOutboundShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 758,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40629,
									"name": "updateOutboundShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates the shipping method for delivering outbound items in a claim using the ID of the method's "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\nIt sends a request to the [Update Outbound Shipping](https://docs.medusajs.com/api/admin#claims_postclaimsidoutboundshippingmethodaction_id)\nAPI route.\n\nEvery shipping method has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the claim, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.updateOutboundShipping(\n  \"claim_123\", \n  \"ordchact_123\",\n  {\n    custom_amount: 10\n  },\n)\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 758,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40630,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40631,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the shipping method's "
													},
													{
														"kind": "code",
														"text": "`SHIPPING_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40632,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The shipping method's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
													"qualifiedName": "AdminClaimUpdateOutboundShipping"
												},
												"name": "AdminClaimUpdateOutboundShipping",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40633,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40634,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimPreviewResponse"
												},
												"name": "AdminClaimPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40635,
							"name": "deleteOutboundShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 797,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40636,
									"name": "deleteOutboundShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes the shipping method for delivering outbound items in the claim using the ID of the method's "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery shipping method has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the claim, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.deleteOutboundShipping(\n  \"claim_123\", \n  \"ordchact_123\",\n)\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 797,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40637,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40638,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the shipping method's "
													},
													{
														"kind": "code",
														"text": "`SHIPPING_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40639,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40640,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimPreviewResponse"
												},
												"name": "AdminClaimPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40641,
							"name": "request",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 833,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40642,
									"name": "request",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method confirms a claim request, applying its changes on the associated order.\nIt sends a request to the [Confirm Claim Request](https://docs.medusajs.com/api/admin#claims_postclaimsidrequest)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the claim and its associated return, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.request(\n  \"claim_123\", \n  {},\n)\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 833,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40643,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40644,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The confirmation details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
													"qualifiedName": "AdminRequestClaim"
												},
												"name": "AdminRequestClaim",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40645,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40646,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimRequestResponse"
												},
												"name": "AdminClaimRequestResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40647,
							"name": "cancelRequest",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 868,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40648,
									"name": "cancelRequest",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method cancels a requested claim. It sends a request to the\n[Cancel Claim Request](https://docs.medusajs.com/api/admin#claims_deleteclaimsidrequest)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The cancelation's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.cancelRequest(\n  \"claim_123\", \n)\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 868,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40649,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40650,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40651,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimDeleteResponse"
												},
												"name": "AdminClaimDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								40523
							]
						},
						{
							"title": "Properties",
							"children": [
								40526
							]
						},
						{
							"title": "Methods",
							"children": [
								40527,
								40531,
								40536,
								40541,
								40546,
								40552,
								40559,
								40565,
								40571,
								40578,
								40584,
								40590,
								40597,
								40603,
								40609,
								40616,
								40622,
								40628,
								40635,
								40641,
								40647
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
							"line": 6,
							"character": 13
						}
					]
				},
				{
					"id": 40892,
					"name": "Currency",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 40896,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/currency.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 40893,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/currency.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 40894,
									"name": "Currency",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/currency.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 40895,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 40892,
										"name": "Currency",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 40897,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/currency.ts",
									"line": 64,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40898,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of currencies. It sends a request to the\n[List Currencies](https://docs.medusajs.com/api/admin#currencies_getcurrencies)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of currencies."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of currencies:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.currency.list()\n.then(({ currencies, count, limit, offset }) => {\n  console.log(currencies)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.currency.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ currencies, count, limit, offset }) => {\n  console.log(currencies)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each currency:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.currency.list({\n  fields: \"code,symbol\"\n})\n.then(({ currencies, count, limit, offset }) => {\n  console.log(currencies)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/currency.ts",
											"line": 64,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40899,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/currency/admin/queries.ts",
													"qualifiedName": "AdminCurrencyListParams"
												},
												"name": "AdminCurrencyListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40900,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/currency/admin/responses.ts",
													"qualifiedName": "AdminCurrencyListResponse"
												},
												"name": "AdminCurrencyListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40901,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/currency.ts",
									"line": 109,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40902,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a currency by its code. It sends a request to the\n[Get Currency](https://docs.medusajs.com/api/admin#currencies_getcurrenciescode) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The currency's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a currency by its code:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.currency.retrieve(\"usd\")\n.then(({ currency }) => {\n  console.log(currency)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.currency.retrieve(\"usd\", {\n  fields: \"code,symbol\"\n})\n.then(({ currency }) => {\n  console.log(currency)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/currency.ts",
											"line": 109,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40903,
											"name": "code",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The currency's code."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40904,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the currency."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/currency/admin/queries.ts",
													"qualifiedName": "AdminCurrencyParams"
												},
												"name": "AdminCurrencyParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40905,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/currency/admin/responses.ts",
													"qualifiedName": "AdminCurrencyResponse"
												},
												"name": "AdminCurrencyResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								40893
							]
						},
						{
							"title": "Properties",
							"children": [
								40896
							]
						},
						{
							"title": "Methods",
							"children": [
								40897,
								40901
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/currency.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 41053,
					"name": "CustomerGroup",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 41057,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 41054,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 41055,
									"name": "CustomerGroup",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 41056,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 41053,
										"name": "CustomerGroup",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 41058,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
									"line": 49,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 41059,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a customer group by its ID. It sends a request to the\n[Get Customer Group](https://docs.medusajs.com/api/admin#customer-groups_getcustomergroupsid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The group's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a customer group by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customerGroup.retrieve(\"cusgroup_123\")\n.then(({ customer_group }) => {\n  console.log(customer_group)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customerGroup.retrieve(\"cusgroup_123\", {\n  fields: \"id,*customer\"\n})\n.then(({ customer_group }) => {\n  console.log(customer_group)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
											"line": 49,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 41060,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer group's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41061,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the customer group."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
													"qualifiedName": "AdminGetCustomerGroupParams"
												},
												"name": "AdminGetCustomerGroupParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41062,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/responses.ts",
													"qualifiedName": "AdminCustomerGroupResponse"
												},
												"name": "AdminCustomerGroupResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41063,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
									"line": 111,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 41064,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of customer groups. It sends a request to the\n[List Customer Groups](https://docs.medusajs.com/api/admin#customer-groups_getcustomergroups)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of customer groups."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of customer groups:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customerGroup.list()\n.then(({ customer_groups, count, limit, offset }) => {\n  console.log(customer_groups)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customerGroup.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ customer_groups, count, limit, offset }) => {\n  console.log(customer_groups)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each customer group:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customerGroup.list({\n  fields: \"id,*customer\"\n})\n.then(({ customer_groups, count, limit, offset }) => {\n  console.log(customer_groups)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
											"line": 111,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 41065,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
													"qualifiedName": "AdminGetCustomerGroupsParams"
												},
												"name": "AdminGetCustomerGroupsParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41066,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/responses.ts",
													"qualifiedName": "AdminCustomerGroupListResponse"
												},
												"name": "AdminCustomerGroupListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41067,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
									"line": 143,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 41068,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a customer group. It sends a request to the\n[Create Customer Group](https://docs.medusajs.com/api/admin#customer-groups_postcustomergroups)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The customer group's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customerGroup.create({\n  name: \"VIP\"\n})\n.then(({ customer_group }) => {\n  console.log(customer_group)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
											"line": 143,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 41069,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer group's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/payloads.ts",
													"qualifiedName": "AdminCreateCustomerGroup"
												},
												"name": "AdminCreateCustomerGroup",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41070,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the customer group."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
													"qualifiedName": "AdminGetCustomerGroupParams"
												},
												"name": "AdminGetCustomerGroupParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41071,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/responses.ts",
													"qualifiedName": "AdminCustomerGroupResponse"
												},
												"name": "AdminCustomerGroupResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41072,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
									"line": 178,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 41073,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a customer group's details. It sends a request to the\n[Update Customer](https://docs.medusajs.com/api/admin#customer-groups_postcustomergroupsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The customer group's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customerGroup.update(\"cusgroup_123\", {\n  name: \"VIP\"\n})\n.then(({ customer_group }) => {\n  console.log(customer_group)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
											"line": 178,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 41074,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer group's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41075,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to update in the group."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/payloads.ts",
													"qualifiedName": "AdminUpdateCustomerGroup"
												},
												"name": "AdminUpdateCustomerGroup",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41076,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the customer group."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
													"qualifiedName": "AdminGetCustomerGroupParams"
												},
												"name": "AdminGetCustomerGroupParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41077,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/responses.ts",
													"qualifiedName": "AdminCustomerGroupResponse"
												},
												"name": "AdminCustomerGroupResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41078,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
									"line": 210,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 41079,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a customer group. This method sends a request to the\n[Delete Customer Group](https://docs.medusajs.com/api/admin#customer-groups_deletecustomergroupsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customerGroup.delete(\"cusgroup_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
											"line": 210,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 41080,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer group's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41081,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/responses.ts",
													"qualifiedName": "AdminCustomerGroupDeleteResponse"
												},
												"name": "AdminCustomerGroupDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41082,
							"name": "batchCustomers",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
									"line": 239,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 41083,
									"name": "batchCustomers",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages customers of a group to add or remove them from the group.\nIt sends a request to the [Manage Customers](https://docs.medusajs.com/api/admin#customer-groups_postcustomergroupsidcustomers)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The customer group's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customerGroup.batchCustomers(\"cusgroup_123\", {\n  add: [\"cus_123\"],\n  remove: [\"cus_321\"]\n})\n.then(({ customer_group }) => {\n  console.log(customer_group)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
											"line": 239,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 41084,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The group's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41085,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customers to add or remove from the group."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "AdminBatchLink"
												},
												"name": "AdminBatchLink",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41086,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/responses.ts",
													"qualifiedName": "AdminCustomerGroupResponse"
												},
												"name": "AdminCustomerGroupResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								41054
							]
						},
						{
							"title": "Properties",
							"children": [
								41057
							]
						},
						{
							"title": "Methods",
							"children": [
								41058,
								41063,
								41067,
								41072,
								41078,
								41082
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 39538,
					"name": "Customer",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 39542,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
									"line": 12,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39539,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
									"line": 16,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 39540,
									"name": "Customer",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
											"line": 16,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 39541,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 39538,
										"name": "Customer",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 39543,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
									"line": 37,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39544,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a customer. It sends a request to the\n[Create Customer](https://docs.medusajs.com/api/admin#customers_postcustomers) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The customer's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customer.create({\n  email: \"customer@gmail.com\"\n})\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
											"line": 37,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39545,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/payloads.ts",
													"qualifiedName": "AdminCreateCustomer"
												},
												"name": "AdminCreateCustomer",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39546,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the customer."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39547,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/responses.ts",
													"qualifiedName": "AdminCustomerResponse"
												},
												"name": "AdminCustomerResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39548,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
									"line": 70,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39549,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a customer's details. It sends a request to the\n[Update Customer](https://docs.medusajs.com/api/admin#customers_postcustomersid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The customer's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customer.update(\"cus_123\", {\n  first_name: \"John\"\n})\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
											"line": 70,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39550,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39551,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to update of the customer."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/payloads.ts",
													"qualifiedName": "AdminUpdateCustomer"
												},
												"name": "AdminUpdateCustomer",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39552,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the customer."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39553,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/responses.ts",
													"qualifiedName": "AdminCustomerResponse"
												},
												"name": "AdminCustomerResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39554,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
									"line": 134,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39555,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of customers. It sends a request to the\n[List Customers](https://docs.medusajs.com/api/admin#customers_getcustomers)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of customers."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of customers:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customer.list()\n.then(({ customers, count, limit, offset }) => {\n  console.log(customers)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customer.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ customers, count, limit, offset }) => {\n  console.log(customers)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each customer:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customer.list({\n  fields: \"id,*groups\"\n})\n.then(({ customers, count, limit, offset }) => {\n  console.log(customers)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
											"line": 134,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39556,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/queries.ts",
													"qualifiedName": "AdminCustomerFilters"
												},
												"name": "AdminCustomerFilters",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39557,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/responses.ts",
													"qualifiedName": "AdminCustomerListResponse"
												},
												"name": "AdminCustomerListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39558,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
									"line": 179,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39559,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a customer by its ID. It sends a request to the \n[Get Customer](https://docs.medusajs.com/api/admin#customers_getcustomersid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The customer's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a customer by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customer.retrieve(\"cus_123\")\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customer.retrieve(\"cus_123\", {\n  fields: \"id,*groups\"\n})\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
											"line": 179,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39560,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39561,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the customer."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39562,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/responses.ts",
													"qualifiedName": "AdminCustomerResponse"
												},
												"name": "AdminCustomerResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39563,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
									"line": 204,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39564,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a customer by its ID. It sends a request to the \n[Delete Customer](https://docs.medusajs.com/api/admin#customers_deletecustomersid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customer.delete(\"cus_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
											"line": 204,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39565,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39566,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/responses.ts",
													"qualifiedName": "AdminCustomerDeleteResponse"
												},
												"name": "AdminCustomerDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39567,
							"name": "batchCustomerGroups",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
									"line": 233,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39568,
									"name": "batchCustomerGroups",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages customer groups for a customer.\nIt sends a request to the [Manage Customers](https://docs.medusajs.com/api/admin#customers_postcustomersidcustomergroups)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The customers details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customer.batchCustomerGroups(\"cus_123\", {\n  add: [\"cusgroup_123\"],\n  remove: [\"cusgroup_321\"]\n})\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
											"line": 233,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39569,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39570,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The groups to add customer to or remove customer from."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "AdminBatchLink"
												},
												"name": "AdminBatchLink",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39571,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/responses.ts",
													"qualifiedName": "AdminCustomerResponse"
												},
												"name": "AdminCustomerResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								39539
							]
						},
						{
							"title": "Properties",
							"children": [
								39542
							]
						},
						{
							"title": "Methods",
							"children": [
								39543,
								39548,
								39554,
								39558,
								39563,
								39567
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
							"line": 8,
							"character": 13
						}
					]
				},
				{
					"id": 40312,
					"name": "DraftOrder",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 40316,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 10,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 40313,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 14,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 40314,
									"name": "DraftOrder",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 14,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 40315,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 40312,
										"name": "DraftOrder",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 40317,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 51,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40318,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a draft order by its ID. It sends a request to the\n[Get Draft Order](https://docs.medusajs.com/api/admin#draft-orders_getdraftordersid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The draft order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a draft order by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.retrieve(\"draft_order_123\")\n.then(({ draft_order }) => {\n  console.log(draft_order)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.retrieve(\"draft_order_123\", {\n  fields: \"id,*items\"\n})\n.then(({ draft_order }) => {\n  console.log(draft_order)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 51,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40319,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40320,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the draft order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/queries.ts",
													"qualifiedName": "AdminDraftOrderParams"
												},
												"name": "AdminDraftOrderParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40321,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderResponse"
												},
												"name": "AdminDraftOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40322,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 111,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40323,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of draft orders. It sends a request to the\n[List Draft Orders](https://docs.medusajs.com/api/admin#draft-orders_getdraftorders) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of draft orders."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of draft orders:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.list()\n.then(({ draft_orders, count, limit, offset }) => {\n  console.log(draft_orders)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ draft_orders, count, limit, offset }) => {\n  console.log(draft_orders)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each draft order:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.list({\n  fields: \"id,*items\"\n})\n.then(({ draft_orders, count, limit, offset }) => {\n  console.log(draft_orders)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 111,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40324,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/queries.ts",
													"qualifiedName": "AdminDraftOrderListParams"
												},
												"name": "AdminDraftOrderListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40325,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderListResponse"
												},
												"name": "AdminDraftOrderListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40326,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 152,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40327,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a draft order. It sends a request to the\n[Create Draft Order](https://docs.medusajs.com/api/admin#draft-orders_postdraftorders) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To create a draft order:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.create({\n  email: \"test@test.com\",\n  items: [\n    {\n      variant_id: \"variant_123\",\n      quantity: 1,\n    },\n  ],\n  region_id: \"region_123\",\n  sales_channel_id: \"sales_channel_123\",\n})\n.then(({ draft_order }) => {\n  console.log(draft_order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 152,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40328,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to create the draft order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/payloads.ts",
													"qualifiedName": "AdminCreateDraftOrder"
												},
												"name": "AdminCreateDraftOrder",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40329,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the draft order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/queries.ts",
													"qualifiedName": "AdminDraftOrderParams"
												},
												"name": "AdminDraftOrderParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40330,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderResponse"
												},
												"name": "AdminDraftOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40331,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 189,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40332,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a draft order. It sends a request to the\n[Update Draft Order](https://docs.medusajs.com/api/admin#draft-orders_postdraftordersid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To update a draft order:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.update(\"draft_order_123\", {\n  email: \"test@test.com\",\n})\n.then(({ draft_order }) => {\n  console.log(draft_order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 189,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40333,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40334,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update the draft order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/payloads.ts",
													"qualifiedName": "AdminUpdateDraftOrder"
												},
												"name": "AdminUpdateDraftOrder",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40335,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the draft order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/queries.ts",
													"qualifiedName": "AdminDraftOrderParams"
												},
												"name": "AdminDraftOrderParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40336,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderResponse"
												},
												"name": "AdminDraftOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								40313
							]
						},
						{
							"title": "Properties",
							"children": [
								40316
							]
						},
						{
							"title": "Methods",
							"children": [
								40317,
								40322,
								40326,
								40331
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
							"line": 6,
							"character": 13
						}
					]
				},
				{
					"id": 40652,
					"name": "Exchange",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 40656,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 10,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 40653,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 14,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 40654,
									"name": "Exchange",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 14,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 40655,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 40652,
										"name": "Exchange",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 40657,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 65,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40658,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of exchanges. It sends a request to the\n[List Exchanges](https://docs.medusajs.com/api/admin#exchanges_getexchanges)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of exchanges."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of exchanges:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.list()\n.then(({ exchanges, count, limit, offset }) => {\n  console.log(exchanges)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ exchanges, count, limit, offset }) => {\n  console.log(exchanges)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each exchange:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.list({\n  fields: \"id,*order\"\n})\n.then(({ exchanges, count, limit, offset }) => {\n  console.log(exchanges)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 65,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40659,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/queries.ts",
													"qualifiedName": "AdminExchangeListParams"
												},
												"name": "AdminExchangeListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40660,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangeListResponse"
												},
												"name": "AdminExchangeListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40661,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 111,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40662,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves an exchange by its ID. It sends a request to the \n[Get Exchange](https://docs.medusajs.com/api/admin#exchanges_getexchangesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The exchange's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve an exchange by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.retrieve(\"exchange_123\")\n.then(({ exchange }) => {\n  console.log(exchange)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.retrieve(\"exchange_123\", {\n  fields: \"id,*order\"\n})\n.then(({ exchange }) => {\n  console.log(exchange)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 111,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40663,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40664,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the exchange."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40665,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangeResponse"
												},
												"name": "AdminExchangeResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40666,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 142,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40667,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates an admin exchange. It sends a request to the\n[Create Exchange](https://docs.medusajs.com/api/admin#exchanges_postexchanges) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The exchange's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.create({\n  order_id: \"order_123\"\n})\n.then(({ exchange }) => {\n  console.log(exchange)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 142,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40668,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
													"qualifiedName": "AdminCreateExchange"
												},
												"name": "AdminCreateExchange",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40669,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the exchange."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40670,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangeResponse"
												},
												"name": "AdminExchangeResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40671,
							"name": "cancel",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 173,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40672,
									"name": "cancel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method cancels an exchange. It sends a request to the\n[Cancel Exchange](https://docs.medusajs.com/api/admin#exchanges_postexchangesidcancel) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The exchange's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.cancel(\"exchange_123\")\n.then(({ exchange }) => {\n  console.log(exchange)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 173,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40673,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40674,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the exchange."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40675,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangeResponse"
												},
												"name": "AdminExchangeResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40676,
							"name": "addInboundItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 212,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40677,
									"name": "addInboundItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds inbound (or return) items to an exchange. These inbound items will \nhave the action "
											},
											{
												"kind": "code",
												"text": "`RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": ".\n\nThis method sends a request to the [Add Inbound Items](https://docs.medusajs.com/api/admin#exchanges_postexchangesidinbounditems)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the return associated with the exchange, with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.addInboundItems(\"exchange_123\", {\n  items: [{\n    id: \"orli_123\",\n    quantity: 1\n  }]\n})\n.then(({ return: returnData }) => {\n  console.log(returnData)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 212,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40678,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40679,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The items to add."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
													"qualifiedName": "AdminAddExchangeInboundItems"
												},
												"name": "AdminAddExchangeInboundItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40680,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40681,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangeReturnResponse"
												},
												"name": "AdminExchangeReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40682,
							"name": "updateInboundItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 258,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40683,
									"name": "updateInboundItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an inbound (or return) item from an exchange using the ID of \nthe item's "
											},
											{
												"kind": "code",
												"text": "`RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. You can \ncheck the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nThis method sends a request to the [Update Inbound Item](https://docs.medusajs.com/api/admin#exchanges_postexchangesidinbounditemsaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the return associated with the exchange, with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.updateInboundItem(\n  \"exchange_123\", \n  \"ordchact_123\",\n  {\n    quantity: 1\n  }\n)\n.then(({ return: returnData }) => {\n  console.log(returnData)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 258,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40684,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40685,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the return item's "
													},
													{
														"kind": "code",
														"text": "`RETURN_ITEM`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40686,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
													"qualifiedName": "AdminUpdateExchangeInboundItem"
												},
												"name": "AdminUpdateExchangeInboundItem",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40687,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40688,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangeReturnResponse"
												},
												"name": "AdminExchangeReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40689,
							"name": "removeInboundItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 301,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40690,
									"name": "removeInboundItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes an inbound (or return) item from an exchange using the ID of the \nitem's "
											},
											{
												"kind": "code",
												"text": "`RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nThis method sends a request to the [Remove Inbound Item](https://docs.medusajs.com/api/admin#exchanges_deleteexchangesidinbounditemsaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the return associated with the exchange, with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.removeInboundItem(\n  \"exchange_123\", \n  \"ordchact_123\",\n)\n.then(({ return: returnData }) => {\n  console.log(returnData)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 301,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40691,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40692,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the return item's "
													},
													{
														"kind": "code",
														"text": "`RETURN_ITEM`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40693,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40694,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangeReturnResponse"
												},
												"name": "AdminExchangeReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40695,
							"name": "addInboundShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 341,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40696,
									"name": "addInboundShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds an inbound (or return) shipping method to an exchange. \nThe inbound shipping method will have a "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nThis method sends a request to the [Add Inbound Shipping](https://docs.medusajs.com/api/admin#exchanges_postexchangesidinboundshippingmethod)\nAPI route.\n\nThis method sends a request to the [Add Inbound Shipping](https://docs.medusajs.com/api/admin#exchanges_postexchangesidinboundshippingmethod)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the return associated with the exchange, with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.addInboundShipping(\"exchange_123\", {\n  shipping_option_id: \"so_123\"\n})\n.then(({ return: returnData }) => {\n  console.log(returnData)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 341,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40697,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40698,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The shipping method's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
													"qualifiedName": "AdminExchangeAddInboundShipping"
												},
												"name": "AdminExchangeAddInboundShipping",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40699,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40700,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangeReturnResponse"
												},
												"name": "AdminExchangeReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40701,
							"name": "updateInboundShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 387,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40702,
									"name": "updateInboundShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates the shipping method for returning items in the exchange using the ID \nof the method's "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery shipping method has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nThis method sends a request to the [Update Inbound Shipping](https://docs.medusajs.com/api/admin#exchanges_postexchangesidinboundshippingmethodaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the return associated with the exchange, with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.updateInboundShipping(\n  \"exchange_123\",\n  \"ordchact_123\",\n   {\n    custom_amount: 10\n  }\n)\n.then(({ return: returnData }) => {\n  console.log(returnData)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 387,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40703,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40704,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the shipping method's "
													},
													{
														"kind": "code",
														"text": "`SHIPPING_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40705,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
													"qualifiedName": "AdminExchangeUpdateInboundShipping"
												},
												"name": "AdminExchangeUpdateInboundShipping",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40706,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40707,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangeReturnResponse"
												},
												"name": "AdminExchangeReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40708,
							"name": "deleteInboundShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 430,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40709,
									"name": "deleteInboundShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes the shipping method for returning items in the exchange using the ID \nof the method's "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery shipping method has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nThis method sends a request to the [Remove Inbound Shipping](https://docs.medusajs.com/api/admin#exchanges_deleteexchangesidinboundshippingmethodaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the return associated with the exchange, with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.deleteInboundShipping(\n  \"exchange_123\",\n  \"ordchact_123\",\n)\n.then(({ return: returnData }) => {\n  console.log(returnData)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 430,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40710,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40711,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the shipping method's "
													},
													{
														"kind": "code",
														"text": "`SHIPPING_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40712,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40713,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangeReturnResponse"
												},
												"name": "AdminExchangeReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40714,
							"name": "addOutboundItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 470,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40715,
									"name": "addOutboundItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds outbound (or new) items to an exchange. \nThese outbound items will have the action "
											},
											{
												"kind": "code",
												"text": "`ITEM_ADD`"
											},
											{
												"kind": "text",
												"text": ".\n\nThis method sends a request to the [Add Outbound Items](https://docs.medusajs.com/api/admin#exchanges_postexchangesidoutbounditems)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The exchange's details with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.addOutboundItems(\"exchange_123\", {\n  items: [{\n    id: \"variant_123\",\n    quantity: 1\n  }]\n})\n.then(({ exchange }) => {\n  console.log(exchange)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 470,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40716,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40717,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The items to add."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
													"qualifiedName": "AdminAddExchangeOutboundItems"
												},
												"name": "AdminAddExchangeOutboundItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40718,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the exchange."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40719,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangePreviewResponse"
												},
												"name": "AdminExchangePreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40720,
							"name": "updateOutboundItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 516,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40721,
									"name": "updateOutboundItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an outbound (or new) item from an exchange using the ID \nof the item's "
											},
											{
												"kind": "code",
												"text": "`ITEM_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nThis method sends a request to the [Update Inbound Item](https://docs.medusajs.com/api/admin#exchanges_postexchangesidoutbounditemsaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The exchange's details with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.updateOutboundItem(\n  \"exchange_123\",\n  \"ordchact_123\",\n  {\n    quantity: 1\n  }\n)\n.then(({ exchange }) => {\n  console.log(exchange)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 516,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40722,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40723,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the new exchange item's "
													},
													{
														"kind": "code",
														"text": "`ITEM_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40724,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The item's details to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
													"qualifiedName": "AdminUpdateExchangeOutboundItem"
												},
												"name": "AdminUpdateExchangeOutboundItem",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40725,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the exchange."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40726,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangePreviewResponse"
												},
												"name": "AdminExchangePreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40727,
							"name": "removeOutboundItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 559,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40728,
									"name": "removeOutboundItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes an outbound (or new) item from an exchange using the ID \nof the item's "
											},
											{
												"kind": "code",
												"text": "`ITEM_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nThis method sends a request to the [Update Outbound Item](https://docs.medusajs.com/api/admin#exchanges_deleteexchangesidoutbounditemsaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The exchange's details with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.removeOutboundItem(\n  \"exchange_123\",\n  \"ordchact_123\",\n)\n.then(({ exchange }) => {\n  console.log(exchange)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 559,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40729,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40730,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the new exchange item's "
													},
													{
														"kind": "code",
														"text": "`ITEM_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40731,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the exchange."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40732,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangePreviewResponse"
												},
												"name": "AdminExchangePreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40733,
							"name": "addOutboundShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 596,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40734,
									"name": "addOutboundShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds an outbound shipping method to an exchange. The outbound shipping method \nwill have a "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nThis method sends a request to the [Add Outbound Shipping](https://docs.medusajs.com/api/admin#exchanges_postexchangesidoutboundshippingmethod)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The exchange's details with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.addOutboundShipping(\"exchange_123\", {\n  shipping_option_id: \"so_123\"\n})\n.then(({ exchange }) => {\n  console.log(exchange)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 596,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40735,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40736,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The shipping method's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
													"qualifiedName": "AdminExchangeAddOutboundShipping"
												},
												"name": "AdminExchangeAddOutboundShipping",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40737,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the exchange."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40738,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangePreviewResponse"
												},
												"name": "AdminExchangePreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40739,
							"name": "updateOutboundShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 642,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40740,
									"name": "updateOutboundShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates the shipping method for delivering outbound items in the exchange using \nthe ID of the method's "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery shipping method has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nThis method sends a request to the [Update Outbound Shipping](https://docs.medusajs.com/api/admin#exchanges_postexchangesidoutboundshippingmethodaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The exchange's details with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.updateOutboundShipping(\n  \"exchange_123\",\n  \"ordchact_123\",\n  {\n    custom_amount: 10\n  }\n)\n.then(({ exchange }) => {\n  console.log(exchange)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 642,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40741,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40742,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the shipping method's "
													},
													{
														"kind": "code",
														"text": "`SHIPPING_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40743,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
													"qualifiedName": "AdminExchangeUpdateOutboundShipping"
												},
												"name": "AdminExchangeUpdateOutboundShipping",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40744,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the exchange."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40745,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangePreviewResponse"
												},
												"name": "AdminExchangePreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40746,
							"name": "deleteOutboundShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 685,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40747,
									"name": "deleteOutboundShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes the shipping method for delivering outbound items in the exchange using \nthe ID of the method's "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery shipping method has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nThis method sends a request to the [Remove Outbound Shipping](https://docs.medusajs.com/api/admin#exchanges_deleteexchangesidoutboundshippingmethodaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The exchange's details with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.deleteOutboundShipping(\n  \"exchange_123\",\n  \"ordchact_123\",\n)\n.then(({ exchange }) => {\n  console.log(exchange)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 685,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40748,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40749,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the shipping method's "
													},
													{
														"kind": "code",
														"text": "`SHIPPING_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40750,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the exchange."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40751,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangePreviewResponse"
												},
												"name": "AdminExchangePreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40752,
							"name": "request",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 719,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40753,
									"name": "request",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method confirms an exchange request, applying its changes on the associated order.\n\nThis method sends a request to the [Confirm Exchange](https://docs.medusajs.com/api/admin#exchanges_postexchangesidrequest)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The exchange and associated return's details with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.request(\"exchange_123\", {})\n.then(({ exchange }) => {\n  console.log(exchange)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 719,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40754,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40755,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The confirmation's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
													"qualifiedName": "AdminRequestExchange"
												},
												"name": "AdminRequestExchange",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40756,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the exchange."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40757,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangeRequestResponse"
												},
												"name": "AdminExchangeRequestResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40758,
							"name": "cancelRequest",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 752,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40759,
									"name": "cancelRequest",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method cancels an exchange request. It sends a request to the\n[Cancel Exchange Request](https://docs.medusajs.com/api/admin#exchanges_deleteexchangesidrequest)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The cancelation's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.cancel(\"exchange_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 752,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40760,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40761,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the exchange."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40762,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangeDeleteResponse"
												},
												"name": "AdminExchangeDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								40653
							]
						},
						{
							"title": "Properties",
							"children": [
								40656
							]
						},
						{
							"title": "Methods",
							"children": [
								40657,
								40661,
								40666,
								40671,
								40676,
								40682,
								40689,
								40695,
								40701,
								40708,
								40714,
								40720,
								40727,
								40733,
								40739,
								40746,
								40752,
								40758
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
							"line": 6,
							"character": 13
						}
					]
				},
				{
					"id": 40089,
					"name": "FulfillmentProvider",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 40093,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-provider.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 40090,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-provider.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 40091,
									"name": "FulfillmentProvider",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-provider.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 40092,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 40089,
										"name": "FulfillmentProvider",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 40094,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-provider.ts",
									"line": 64,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40095,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of fulfillment providers. It sends a request to the\n[List Fulfillment Providers](https://docs.medusajs.com/api/admin#fulfillment-providers_getfulfillmentproviders)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of providers."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of fulfillment providers:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillmentProvider.list()\n.then(({ fulfillment_providers, count, limit, offset }) => {\n  console.log(fulfillment_providers)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillmentProvider.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ fulfillment_providers, count, limit, offset }) => {\n  console.log(fulfillment_providers)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each fulfillment provider:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillmentProvider.list({\n  fields: \"id\"\n})\n.then(({ fulfillment_providers, count, limit, offset }) => {\n  console.log(fulfillment_providers)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-provider.ts",
											"line": 64,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40096,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/queries.ts",
													"qualifiedName": "AdminFulfillmentProviderListParams"
												},
												"name": "AdminFulfillmentProviderListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40097,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/responses.ts",
													"qualifiedName": "AdminFulfillmentProviderListResponse"
												},
												"name": "AdminFulfillmentProviderListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40098,
							"name": "listFulfillmentOptions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-provider.ts",
									"line": 87,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40099,
									"name": "listFulfillmentOptions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of fulfillment options for a given fulfillment provider. It sends a request to the\n[List Fulfillment Options](https://docs.medusajs.com/api/admin#fulfillment-providers_getfulfillmentprovideroptions)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of fulfillment options."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-provider.ts",
											"line": 87,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40100,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the fulfillment provider."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40101,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/responses.ts",
													"qualifiedName": "AdminFulfillmentProviderOptionsListResponse"
												},
												"name": "AdminFulfillmentProviderOptionsListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								40090
							]
						},
						{
							"title": "Properties",
							"children": [
								40093
							]
						},
						{
							"title": "Methods",
							"children": [
								40094,
								40098
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-provider.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 40035,
					"name": "FulfillmentSet",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 40039,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 40036,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 40037,
									"name": "FulfillmentSet",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 40038,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 40035,
										"name": "FulfillmentSet",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 40040,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
									"line": 32,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40041,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a fulfillment set. It sends a request to the\n[Delete Fulfillment Set](https://docs.medusajs.com/api/admin#fulfillment-sets_deletefulfillmentsetsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillmentSet.delete(\"fset_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
											"line": 32,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40042,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The fulfillment set's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40043,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
													"qualifiedName": "AdminFulfillmentSetDeleteResponse"
												},
												"name": "AdminFulfillmentSetDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40044,
							"name": "createServiceZone",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
									"line": 65,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40045,
									"name": "createServiceZone",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds a service zone to a fulfillment set. It uses the \n[Add Service Zone](https://docs.medusajs.com/api/admin#fulfillment-sets_postfulfillmentsetsidservicezones)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The fulfillment set's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillmentSet.createServiceZone(\"fset_123\", {\n  name: \"Europe Service Zone\",\n  geo_zones: [{\n    type: \"country\",\n    country_code: \"us\"\n  }]\n})\n.then(({ fulfillment_set }) => {\n  console.log(fulfillment_set)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
											"line": 65,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40046,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The fulfillment set's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40047,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The service zone's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
													"qualifiedName": "AdminCreateFulfillmentSetServiceZone"
												},
												"name": "AdminCreateFulfillmentSetServiceZone",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40048,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the fulfillment set."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40049,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
													"qualifiedName": "AdminFulfillmentSetResponse"
												},
												"name": "AdminFulfillmentSetResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40050,
							"name": "retrieveServiceZone",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
									"line": 123,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40051,
									"name": "retrieveServiceZone",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a fulfillment set's service zone's details. It sends a request to the\n[Get Service Zone](https://docs.medusajs.com/api/admin#fulfillment-sets_getfulfillmentsetsidservicezoneszone_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The service zone's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a fulfillment set's service zone by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillmentSet.retrieveServiceZone(\n  \"fset_123\",\n  \"serzo_123\"\n)\n.then(({ service_zone }) => {\n  console.log(service_zone)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillmentSet.retrieveServiceZone(\n  \"fset_123\",\n  \"serzo_123\",\n  {\n    fields: \"id,*geo_zones\"\n  }\n)\n.then(({ service_zone }) => {\n  console.log(service_zone)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
											"line": 123,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40052,
											"name": "fulfillmentSetId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The fulfillment set's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40053,
											"name": "serviceZoneId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The service zone's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40054,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the service zone."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40055,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
													"qualifiedName": "AdminServiceZoneResponse"
												},
												"name": "AdminServiceZoneResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40056,
							"name": "updateServiceZone",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
									"line": 163,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40057,
									"name": "updateServiceZone",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a service zone in a fulfillment set. It sends a request to the\n[Update Service Zone](https://docs.medusajs.com/api/admin#fulfillment-sets_postfulfillmentsetsidservicezoneszone_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The fulfillment set's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillmentSet.updateServiceZone(\n  \"fset_123\", \n  \"serzo_123\",\n  {\n    name: \"Europe Service Zone\",\n  }\n)\n.then(({ fulfillment_set }) => {\n  console.log(fulfillment_set)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
											"line": 163,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40058,
											"name": "fulfillmentSetId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The fulfillment set's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40059,
											"name": "serviceZoneId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The service zone's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40060,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update in the service zone."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
													"qualifiedName": "AdminUpdateFulfillmentSetServiceZone"
												},
												"name": "AdminUpdateFulfillmentSetServiceZone",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40061,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the fulfillment set."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40062,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
													"qualifiedName": "AdminFulfillmentSetResponse"
												},
												"name": "AdminFulfillmentSetResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40063,
							"name": "deleteServiceZone",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
									"line": 200,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40064,
									"name": "deleteServiceZone",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a service zone in a fulfillment set. It sends a request to the\n[Remove Service Zone](https://docs.medusajs.com/api/admin#fulfillment-sets_deletefulfillmentsetsidservicezoneszone_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillmentSet.deleteServiceZone(\n  \"fset_123\", \n  \"serzo_123\",\n)\n.then(({ deleted, parent: fulfillmentSet }) => {\n  console.log(deleted, fulfillmentSet)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
											"line": 200,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40065,
											"name": "fulfillmentSetId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The fulfullment set's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40066,
											"name": "serviceZoneId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The service zone's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40067,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
													"qualifiedName": "AdminServiceZoneDeleteResponse"
												},
												"name": "AdminServiceZoneDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								40036
							]
						},
						{
							"title": "Properties",
							"children": [
								40039
							]
						},
						{
							"title": "Methods",
							"children": [
								40040,
								40044,
								40050,
								40056,
								40063
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 40068,
					"name": "Fulfillment",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 40072,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 40069,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 40070,
									"name": "Fulfillment",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 40071,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 40068,
										"name": "Fulfillment",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 40073,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment.ts",
									"line": 50,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40074,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a fulfillment. It sends a request to the \n[Create Fulfillment](https://docs.medusajs.com/api/admin#fulfillments_postfulfillments)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The fulfillment's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillment.create({\n  location_id: \"sloc_123\",\n  provider_id: \"my_fulfillment\",\n  delivery_address: {\n    country_code: \"us\"\n  },\n  items: [\n    {\n      title: \"Shirt\",\n      sku: \"SHIRT\",\n      quantity: 1,\n      barcode: \"123\"\n    }\n  ],\n  labels: [],\n  order: {},\n  order_id: \"order_123\"\n})\n.then(({ fulfillment }) => {\n  console.log(fulfillment)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment.ts",
											"line": 50,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40075,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The fulfillment's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment/admin/payloads.ts",
													"qualifiedName": "AdminCreateFulfillment"
												},
												"name": "AdminCreateFulfillment",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40076,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the fulfillment."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40077,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment/admin/responses.ts",
													"qualifiedName": "AdminFulfillmentResponse"
												},
												"name": "AdminFulfillmentResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40078,
							"name": "cancel",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment.ts",
									"line": 82,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40079,
									"name": "cancel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method cancels a fulfillment. It sends a request to the\n[Cancel Fulfillment](https://docs.medusajs.com/api/admin#fulfillments_postfulfillmentsidcancel)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The fulfillment's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillment.cancel(\"ful_123\")\n.then(({ fulfillment }) => {\n  console.log(fulfillment)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment.ts",
											"line": 82,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40080,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The fulfillment's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40081,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the fulfillment."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40082,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment/admin/responses.ts",
													"qualifiedName": "AdminFulfillmentResponse"
												},
												"name": "AdminFulfillmentResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40083,
							"name": "createShipment",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment.ts",
									"line": 123,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40084,
									"name": "createShipment",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a shipment for a fulfillment. It sends a request to the\n[Create Shipment](https://docs.medusajs.com/api/admin#fulfillments_postfulfillmentsidshipment)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The fulfillment's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillment.createShipment(\"ful_123\", {\n  labels: [\n    {\n      tracking_number: \"123\",\n      tracking_url: \"example.com\",\n      label_url: \"example.com\"\n    }\n  ]\n})\n.then(({ fulfillment }) => {\n  console.log(fulfillment)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment.ts",
											"line": 123,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40085,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The fulfillment's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40086,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The shipment's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment/admin/payloads.ts",
													"qualifiedName": "AdminCreateFulfillmentShipment"
												},
												"name": "AdminCreateFulfillmentShipment",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40087,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the fulfillment."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40088,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment/admin/responses.ts",
													"qualifiedName": "AdminFulfillmentResponse"
												},
												"name": "AdminFulfillmentResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								40069
							]
						},
						{
							"title": "Properties",
							"children": [
								40072
							]
						},
						{
							"title": "Methods",
							"children": [
								40073,
								40078,
								40083
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 39176,
					"name": "Admin",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 39180,
							"name": "invite",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "user"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 49,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L49"
								}
							],
							"type": {
								"type": "reference",
								"target": 39504,
								"name": "Invite",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39181,
							"name": "customer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "customer"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 53,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L53"
								}
							],
							"type": {
								"type": "reference",
								"target": 39538,
								"name": "Customer",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39182,
							"name": "productCollection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "product"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 57,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L57"
								}
							],
							"type": {
								"type": "reference",
								"target": 39572,
								"name": "ProductCollection",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39183,
							"name": "productCategory",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "product"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 61,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L61"
								}
							],
							"type": {
								"type": "reference",
								"target": 39606,
								"name": "ProductCategory",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39184,
							"name": "priceList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "pricing"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 65,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L65"
								}
							],
							"type": {
								"type": "reference",
								"target": 39641,
								"name": "PriceList",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39185,
							"name": "pricePreference",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "pricing"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 69,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L69"
								}
							],
							"type": {
								"type": "reference",
								"target": 39682,
								"name": "PricePreference",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39186,
							"name": "product",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "product"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 73,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L73"
								}
							],
							"type": {
								"type": "reference",
								"target": 39711,
								"name": "Product",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39187,
							"name": "productType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "product"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 77,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L77"
								}
							],
							"type": {
								"type": "reference",
								"target": 39833,
								"name": "ProductType",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39188,
							"name": "upload",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "file"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 81,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L81"
								}
							],
							"type": {
								"type": "reference",
								"target": 39862,
								"name": "Upload",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39189,
							"name": "region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "region"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 85,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L85"
								}
							],
							"type": {
								"type": "reference",
								"target": 39885,
								"name": "Region",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39190,
							"name": "returnReason",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "order"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 89,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L89"
								}
							],
							"type": {
								"type": "reference",
								"target": 39922,
								"name": "ReturnReason",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39191,
							"name": "stockLocation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "stock location"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 93,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L93"
								}
							],
							"type": {
								"type": "reference",
								"target": 39952,
								"name": "StockLocation",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39192,
							"name": "salesChannel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "sales channel"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 97,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L97"
								}
							],
							"type": {
								"type": "reference",
								"target": 39996,
								"name": "SalesChannel",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39193,
							"name": "fulfillmentSet",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "fulfillment"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 101,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L101"
								}
							],
							"type": {
								"type": "reference",
								"target": 40035,
								"name": "FulfillmentSet",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39194,
							"name": "fulfillment",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "fulfillment"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 105,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L105"
								}
							],
							"type": {
								"type": "reference",
								"target": 40068,
								"name": "Fulfillment",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39195,
							"name": "fulfillmentProvider",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "fulfillment"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 109,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L109"
								}
							],
							"type": {
								"type": "reference",
								"target": 40089,
								"name": "FulfillmentProvider",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39196,
							"name": "shippingOption",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "fulfillment"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 113,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L113"
								}
							],
							"type": {
								"type": "reference",
								"target": 40102,
								"name": "ShippingOption",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39197,
							"name": "shippingProfile",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "fulfillment"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 117,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L117"
								}
							],
							"type": {
								"type": "reference",
								"target": 40136,
								"name": "ShippingProfile",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39198,
							"name": "inventoryItem",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "inventory"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 121,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L121"
								}
							],
							"type": {
								"type": "reference",
								"target": 40165,
								"name": "InventoryItem",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39199,
							"name": "notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "notification"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 125,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L125"
								}
							],
							"type": {
								"type": "reference",
								"target": 40226,
								"name": "Notification",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39200,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "order"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 129,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L129"
								}
							],
							"type": {
								"type": "reference",
								"target": 40240,
								"name": "Order",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39201,
							"name": "draftOrder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "order"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 133,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L133"
								}
							],
							"type": {
								"type": "reference",
								"target": 40312,
								"name": "DraftOrder",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39202,
							"name": "orderEdit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "order"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 137,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L137"
								}
							],
							"type": {
								"type": "reference",
								"target": 40337,
								"name": "OrderEdit",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39203,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "order"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 141,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L141"
								}
							],
							"type": {
								"type": "reference",
								"target": 40388,
								"name": "Return",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39204,
							"name": "claim",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "order"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 145,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L145"
								}
							],
							"type": {
								"type": "reference",
								"target": 40522,
								"name": "Claim",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39205,
							"name": "exchange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "order"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 149,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L149"
								}
							],
							"type": {
								"type": "reference",
								"target": 40652,
								"name": "Exchange",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39206,
							"name": "taxRate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "tax"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 153,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L153"
								}
							],
							"type": {
								"type": "reference",
								"target": 40763,
								"name": "TaxRate",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39207,
							"name": "taxRegion",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "tax"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 157,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L157"
								}
							],
							"type": {
								"type": "reference",
								"target": 40792,
								"name": "TaxRegion",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39208,
							"name": "store",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "store"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 161,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L161"
								}
							],
							"type": {
								"type": "reference",
								"target": 40815,
								"name": "Store",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39209,
							"name": "productTag",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "product"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 165,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L165"
								}
							],
							"type": {
								"type": "reference",
								"target": 40835,
								"name": "ProductTag",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39210,
							"name": "user",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "user"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 169,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L169"
								}
							],
							"type": {
								"type": "reference",
								"target": 40864,
								"name": "User",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39211,
							"name": "currency",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "currency"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 173,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L173"
								}
							],
							"type": {
								"type": "reference",
								"target": 40892,
								"name": "Currency",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39212,
							"name": "payment",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "payment"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 177,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L177"
								}
							],
							"type": {
								"type": "reference",
								"target": 40906,
								"name": "Payment",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39213,
							"name": "productVariant",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "product"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 181,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L181"
								}
							],
							"type": {
								"type": "reference",
								"target": 40936,
								"name": "ProductVariant",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39214,
							"name": "refundReason",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "order"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 185,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L185"
								}
							],
							"type": {
								"type": "reference",
								"target": 40945,
								"name": "RefundReason",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39215,
							"name": "paymentCollection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "payment"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 189,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L189"
								}
							],
							"type": {
								"type": "reference",
								"target": 40954,
								"name": "PaymentCollection",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39216,
							"name": "apiKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "api key"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 193,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L193"
								}
							],
							"type": {
								"type": "reference",
								"target": 40974,
								"name": "ApiKey",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39217,
							"name": "workflowExecution",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "workflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 197,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L197"
								}
							],
							"type": {
								"type": "reference",
								"target": 41011,
								"name": "WorkflowExecution",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39218,
							"name": "reservation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "inventory"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 201,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L201"
								}
							],
							"type": {
								"type": "reference",
								"target": 41024,
								"name": "Reservation",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39219,
							"name": "customerGroup",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "customer"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 205,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L205"
								}
							],
							"type": {
								"type": "reference",
								"target": 41053,
								"name": "CustomerGroup",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39220,
							"name": "promotion",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "promotion"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 209,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L209"
								}
							],
							"type": {
								"type": "reference",
								"target": 41087,
								"name": "Promotion",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39221,
							"name": "campaign",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "promotion"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 213,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L213"
								}
							],
							"type": {
								"type": "reference",
								"target": 41149,
								"name": "Campaign",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39177,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 215,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L215"
								}
							],
							"signatures": [
								{
									"id": 39178,
									"name": "Admin",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "admin/index.ts",
											"line": 215,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L215"
										}
									],
									"parameters": [
										{
											"id": 39179,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 39176,
										"name": "Admin",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								39177
							]
						},
						{
							"title": "Properties",
							"children": [
								39180,
								39181,
								39182,
								39183,
								39184,
								39185,
								39186,
								39187,
								39188,
								39189,
								39190,
								39191,
								39192,
								39193,
								39194,
								39195,
								39196,
								39197,
								39198,
								39199,
								39200,
								39201,
								39202,
								39203,
								39204,
								39205,
								39206,
								39207,
								39208,
								39209,
								39210,
								39211,
								39212,
								39213,
								39214,
								39215,
								39216,
								39217,
								39218,
								39219,
								39220,
								39221
							]
						}
					],
					"sources": [
						{
							"fileName": "admin/index.ts",
							"line": 45,
							"character": 13,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L45"
						}
					]
				},
				{
					"id": 40165,
					"name": "InventoryItem",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 40169,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 40166,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 40167,
									"name": "InventoryItem",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 40168,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 40165,
										"name": "InventoryItem",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 40170,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 35,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40171,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates an inventory item. It sends a request to the\n[Create Inventory Item](https://docs.medusajs.com/api/admin#inventory-items_postinventoryitems)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The inventory item's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.create({\n  sku: \"SHIRT\"\n})\n.then(({ inventory_item }) => {\n  console.log(inventory_item)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
											"line": 35,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40172,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
													"qualifiedName": "AdminCreateInventoryItem"
												},
												"name": "AdminCreateInventoryItem",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40173,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the inventory item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40174,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
													"qualifiedName": "AdminInventoryItemResponse"
												},
												"name": "AdminInventoryItemResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40175,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 70,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40176,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an inventory level. It sends a request to the\n[Update Inventory Item](https://docs.medusajs.com/api/admin#inventory-items_postinventoryitemsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The inventory item's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.update(\"iitem_123\", {\n  sku: \"SHIRT\"\n})\n.then(({ inventory_item }) => {\n  console.log(inventory_item)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
											"line": 70,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40177,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40178,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
													"qualifiedName": "AdminUpdateInventoryItem"
												},
												"name": "AdminUpdateInventoryItem",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40179,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the inventory item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40180,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
													"qualifiedName": "AdminInventoryItemResponse"
												},
												"name": "AdminInventoryItemResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40181,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 134,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40182,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of inventory items. It sends a request to the\n[List Inventory Items](https://docs.medusajs.com/api/admin#inventory-items_getinventoryitems)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of inventory items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of inventory items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.list()\n.then(({ inventory_items, count, limit, offset }) => {\n  console.log(inventory_items)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ inventory_items, count, limit, offset }) => {\n  console.log(inventory_items)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each inventory item:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.list({\n  fields: \"id,*location_levels\"\n})\n.then(({ inventory_items, count, limit, offset }) => {\n  console.log(inventory_items)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
											"line": 134,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40183,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
													"qualifiedName": "AdminInventoryItemParams"
												},
												"name": "AdminInventoryItemParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40184,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
													"qualifiedName": "AdminInventoryItemListResponse"
												},
												"name": "AdminInventoryItemListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40185,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 179,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40186,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves an inventory item by its ID. It sends a request to the\n[Get Inventory Item](https://docs.medusajs.com/api/admin#inventory-items_getinventoryitemsid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The inventory item's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve an inventory item by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.retrieve(\"iitem_123\")\n.then(({ inventory_item }) => {\n  console.log(inventory_item)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.retrieve(\"iitem_123\", {\n  fields: \"id,*location_levels\"\n})\n.then(({ inventory_item }) => {\n  console.log(inventory_item)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
											"line": 179,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40187,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40188,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the inventory item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40189,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
													"qualifiedName": "AdminInventoryItemResponse"
												},
												"name": "AdminInventoryItemResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40190,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 204,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40191,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes an inventory item. This sends a request to the\n[Delete Inventory Item](https://docs.medusajs.com/api/admin#inventory-items_deleteinventoryitemsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.delete(\"iitem_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
											"line": 204,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40192,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40193,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
													"qualifiedName": "AdminInventoryItemDeleteResponse"
												},
												"name": "AdminInventoryItemDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40194,
							"name": "listLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 262,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40195,
									"name": "listLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of inventory levels that belong to an inventory item.\nIt sends a request to the [List Inventory Items](https://docs.medusajs.com/api/admin#inventory-items_getinventoryitems)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of inventory levels."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of inventory levels:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.listLevels(\"iitem_123\")\n.then(({ inventory_levels, count, limit, offset }) => {\n  console.log(inventory_levels)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.listLevels(\"iitem_123\", {\n  limit: 10,\n  offset: 10\n})\n.then(({ inventory_levels, count, limit, offset }) => {\n  console.log(inventory_levels)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each inventory level:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.listLevels(\"iitem_123\", {\n  fields: \"id,*inventory_item\"\n})\n.then(({ inventory_levels, count, limit, offset }) => {\n  console.log(inventory_levels)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
											"line": 262,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40196,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40197,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/queries.ts",
													"qualifiedName": "AdminInventoryLevelFilters"
												},
												"name": "AdminInventoryLevelFilters",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40198,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/responses.ts",
													"qualifiedName": "AdminInventoryLevelListResponse"
												},
												"name": "AdminInventoryLevelListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40199,
							"name": "updateLevel",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 303,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40200,
									"name": "updateLevel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates the inventory level of the specified inventory item and\nstock location.\n\nThis method sends a request to the\n[Update Inventory Level](https://docs.medusajs.com/api/admin#inventory-items_postinventoryitemsidlocationlevelslocation_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The inventory item's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.updateLevel(\n  \"iitem_123\",\n  \"sloc_123\",\n  {\n    stocked_quantity: 10\n  }\n)\n.then(({ inventory_item }) => {\n  console.log(inventory_item)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
											"line": 303,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40201,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40202,
											"name": "locationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The stock location's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40203,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
													"qualifiedName": "AdminUpdateInventoryLevel"
												},
												"name": "AdminUpdateInventoryLevel",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40204,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the inventory item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40205,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
													"qualifiedName": "AdminInventoryItemResponse"
												},
												"name": "AdminInventoryItemResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40206,
							"name": "deleteLevel",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 343,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40207,
									"name": "deleteLevel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes an inventory level associated with an inventory item\nand a stock location.\n\nThis method sends a request to the\n[Remove Inventory Level](https://docs.medusajs.com/api/admin#inventory-items_deleteinventoryitemsidlocationlevelslocation_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.deleteLevel(\n  \"iitem_123\",\n  \"sloc_123\",\n)\n.then(({ deleted, parent: inventoryItem }) => {\n  console.log(deleted, inventoryItem)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
											"line": 343,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40208,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40209,
											"name": "locationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The stock location's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40210,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
													"qualifiedName": "AdminInventoryLevelDeleteResponse"
												},
												"name": "AdminInventoryLevelDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40211,
							"name": "batchUpdateLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 378,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40212,
									"name": "batchUpdateLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages the inventory levels of an inventory item. It sends a request to the\n[Manage Inventory Levels](https://docs.medusajs.com/api/admin#inventory-items_postinventoryitemsidlocationlevelsbatch)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@deprecated",
												"content": [
													{
														"kind": "text",
														"text": "Use "
													},
													{
														"kind": "code",
														"text": "`batchInventoryItemLocationLevels`"
													},
													{
														"kind": "text",
														"text": " instead."
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The inventory item's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.batchUpdateLevels(\"iitem_123\", {\n  create: [{\n    location_id: \"sloc_123\",\n    stocked_quantity: 10\n  }],\n  delete: [\"ilvl_123\"]\n})\n.then(({ created, updated, deleted }) => {\n  console.log(created, updated, deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
											"line": 378,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40213,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40214,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory levels to create or delete."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
													"qualifiedName": "AdminBatchInventoryItemLocationLevels"
												},
												"name": "AdminBatchInventoryItemLocationLevels",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40215,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the inventory item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40216,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/responses.ts",
													"qualifiedName": "AdminBatchInventoryItemLocationLevelsResponse"
												},
												"name": "AdminBatchInventoryItemLocationLevelsResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40217,
							"name": "batchInventoryItemLocationLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 417,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40218,
									"name": "batchInventoryItemLocationLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages the inventory levels of an inventory item. It sends a request to the\n[Manage Inventory Levels](https://docs.medusajs.com/api/admin#inventory-items_postinventoryitemsidlocationlevelsbatch)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The inventory item's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.batchInventoryItemLocationLevels(\"iitem_123\", {\n  create: [{\n    location_id: \"sloc_123\",\n    stocked_quantity: 10\n  }],\n  delete: [\"ilvl_123\"]\n})\n.then(({ created, updated, deleted }) => {\n  console.log(created, updated, deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
											"line": 417,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40219,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40220,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory levels to create, update or delete, and an optional "
													},
													{
														"kind": "code",
														"text": "`force`"
													},
													{
														"kind": "text",
														"text": " flag."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
													"qualifiedName": "AdminBatchInventoryItemLocationLevels"
												},
												"name": "AdminBatchInventoryItemLocationLevels",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40221,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/responses.ts",
													"qualifiedName": "AdminBatchInventoryItemLocationLevelsResponse"
												},
												"name": "AdminBatchInventoryItemLocationLevelsResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40222,
							"name": "batchInventoryItemsLocationLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 452,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40223,
									"name": "batchInventoryItemsLocationLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages the inventory levels of multiple inventory items."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The inventory item's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.batchInventoryItemsLocationLevels({\n  create: [{\n    inventory_item_id: \"iitem_123\",\n    location_id: \"sloc_123\",\n    stocked_quantity: 10\n  }],\n  delete: [\"ilvl_123\"]\n})\n.then(({ created, updated, deleted }) => {\n  console.log(created, updated, deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
											"line": 452,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40224,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory levels to create, update or delete, and an optional "
													},
													{
														"kind": "code",
														"text": "`force`"
													},
													{
														"kind": "text",
														"text": " flag."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
													"qualifiedName": "AdminBatchInventoryItemsLocationLevels"
												},
												"name": "AdminBatchInventoryItemsLocationLevels",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40225,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/responses.ts",
													"qualifiedName": "AdminBatchInventoryItemsLocationLevelsResponse"
												},
												"name": "AdminBatchInventoryItemsLocationLevelsResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								40166
							]
						},
						{
							"title": "Properties",
							"children": [
								40169
							]
						},
						{
							"title": "Methods",
							"children": [
								40170,
								40175,
								40181,
								40185,
								40190,
								40194,
								40199,
								40206,
								40211,
								40217,
								40222
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 39504,
					"name": "Invite",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 39508,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/invite.ts",
									"line": 13,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39505,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/invite.ts",
									"line": 17,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 39506,
									"name": "Invite",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/invite.ts",
											"line": 17,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 39507,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 39504,
										"name": "Invite",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 39509,
							"name": "accept",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/invite.ts",
									"line": 55,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39510,
									"name": "accept",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method accepts an invite. It requires sending a previous request to\nthe "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Auth.register"
											},
											{
												"kind": "text",
												"text": ".\n\nThis method sends a request to the [Accept Invite]\n(https://docs.medusajs.com/api/admin#invites_postinvitesaccept)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The user's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst token = await sdk.auth.register(\"user\", \"emailpass\", {\n  email: \"user@gmail.com\",\n  password: \"supersecret\"\n})\n\nsdk.admin.invite.accept(\n  {\n    email: \"user@gmail.com\",\n    first_name: \"John\",\n    last_name: \"Smith\",\n    invite_token: \"12345...\"\n  },\n  {\n    Authorization: `Bearer ${token}`\n  }\n)\n.then(({ user }) => {\n  console.log(user)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/invite.ts",
											"line": 55,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39511,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the user to create."
													}
												]
											},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/payloads.ts",
															"qualifiedName": "AdminAcceptInvite"
														},
														"name": "AdminAcceptInvite",
														"package": "@medusajs/types"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 39512,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 39513,
																	"name": "invite_token",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The invite's token."
																			}
																		]
																	},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/invite.ts",
																			"line": 60,
																			"character": 6
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		39513
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/invite.ts",
																	"line": 56,
																	"character": 41
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 39514,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the user."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39515,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
													"qualifiedName": "AdminAcceptInviteResponse"
												},
												"name": "AdminAcceptInviteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39516,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/invite.ts",
									"line": 95,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39517,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates an invite. It sends a request to the\n[Create Invite](https://docs.medusajs.com/api/admin#invites_postinvites)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The invite's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.invite.create({\n  email: \"user@gmail.com\",\n})\n.then(({ invite }) => {\n  console.log(invite)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/invite.ts",
											"line": 95,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39518,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The invite's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/payloads.ts",
													"qualifiedName": "AdminCreateInvite"
												},
												"name": "AdminCreateInvite",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39519,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the invite."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39520,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
													"qualifiedName": "AdminInviteResponse"
												},
												"name": "AdminInviteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39521,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/invite.ts",
									"line": 144,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39522,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves an invite by its ID. It sends a request to the\n[Get Invite](https://docs.medusajs.com/api/admin#invites_getinvitesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The invite's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve an invite its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.invite.retrieve(\"invite_123\")\n.then(({ invite }) => {\n  console.log(invite)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.invite.retrieve(\"invite_123\", {\n  fields: \"id,email\"\n})\n.then(({ invite }) => {\n  console.log(invite)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/invite.ts",
											"line": 144,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39523,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The invite's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39524,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the invite."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39525,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
													"qualifiedName": "AdminInviteResponse"
												},
												"name": "AdminInviteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39526,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/invite.ts",
									"line": 201,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39527,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of invites. It sends a request to the\n[List Invites](https://docs.medusajs.com/api/admin#invites_getinvites)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of invites."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of invites:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.invite.list()\n.then(({ invites, count, limit, offset }) => {\n  console.log(invites)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.invite.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ invites, count, limit, offset }) => {\n  console.log(invites)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each invite:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.invite.list({\n  fields: \"id,email\"\n})\n.then(({ invites, count, limit, offset }) => {\n  console.log(invites)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/invite.ts",
											"line": 201,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39528,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "FindParams"
												},
												"name": "FindParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39529,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
													"qualifiedName": "AdminInviteListResponse"
												},
												"name": "AdminInviteListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39530,
							"name": "resend",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/invite.ts",
									"line": 225,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39531,
									"name": "resend",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method refreshes the token of an invite. It sends a request to the\n[Refresh Invite Token](https://docs.medusajs.com/api/admin#invites_postinvitesidresend)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The invite's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.invite.resend(\"invite_123\")\n.then(({ invite }) => {\n  console.log(invite)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/invite.ts",
											"line": 225,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39532,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The invite's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39533,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
													"qualifiedName": "AdminInviteResponse"
												},
												"name": "AdminInviteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39534,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/invite.ts",
									"line": 250,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39535,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes an invite. It sends a request to the\n[Delete Invite](https://docs.medusajs.com/api/admin#invites_deleteinvitesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.invite.delete(\"invite_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/invite.ts",
											"line": 250,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39536,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The invite's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39537,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
													"qualifiedName": "AdminInviteDeleteResponse"
												},
												"name": "AdminInviteDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								39505
							]
						},
						{
							"title": "Properties",
							"children": [
								39508
							]
						},
						{
							"title": "Methods",
							"children": [
								39509,
								39516,
								39521,
								39526,
								39530,
								39534
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/invite.ts",
							"line": 9,
							"character": 13
						}
					]
				},
				{
					"id": 40226,
					"name": "Notification",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 40230,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/notification.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 40227,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/notification.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 40228,
									"name": "Notification",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/notification.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 40229,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 40226,
										"name": "Notification",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 40231,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/notification.ts",
									"line": 50,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40232,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a notification's details. It sends a request to the \n[Get Notification](https://docs.medusajs.com/api/admin#notifications_getnotificationsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The notification's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a notification by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.notification.retrieve(\"notif_123\")\n.then(({ notification }) => {\n  console.log(notification)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.notification.retrieve(\"notif_123\", {\n  fields: \"id,to\"\n})\n.then(({ notification }) => {\n  console.log(notification)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/notification.ts",
											"line": 50,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40233,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The notification's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40234,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the notification."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/queries.ts",
													"qualifiedName": "AdminNotificationParams"
												},
												"name": "AdminNotificationParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40235,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/responses.ts",
													"qualifiedName": "AdminNotificationResponse"
												},
												"name": "AdminNotificationResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40236,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/notification.ts",
									"line": 112,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40237,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of notifications. It sends a request to the \n[List Notifications](https://docs.medusajs.com/api/admin#notifications_getnotifications)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of notifications."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of notifications:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.notification.list()\n.then(({ notifications, count, limit, offset }) => {\n  console.log(notifications)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.notification.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ notifications, count, limit, offset }) => {\n  console.log(notifications)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each notification:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.notification.list({\n  fields: \"id,to\"\n})\n.then(({ notifications, count, limit, offset }) => {\n  console.log(notifications)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/notification.ts",
											"line": 112,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40238,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/queries.ts",
													"qualifiedName": "AdminNotificationListParams"
												},
												"name": "AdminNotificationListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40239,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/responses.ts",
													"qualifiedName": "AdminNotificationListResponse"
												},
												"name": "AdminNotificationListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								40227
							]
						},
						{
							"title": "Properties",
							"children": [
								40230
							]
						},
						{
							"title": "Methods",
							"children": [
								40231,
								40236
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/notification.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 40337,
					"name": "OrderEdit",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 40341,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 40338,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 40339,
									"name": "OrderEdit",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 40340,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 40337,
										"name": "OrderEdit",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 40342,
							"name": "initiateRequest",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
									"line": 35,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40343,
									"name": "initiateRequest",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates an order edit request. It sends a HTTP request to the\n[Create Order Edit](https://docs.medusajs.com/api/admin#order-edits_postorderedits)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order edit's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.orderEdit.initiateRequest({\n  order_id: \"order_123\"\n})\n.then(({ order_change }) => {\n  console.log(order_change)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
											"line": 35,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40344,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order edit's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
													"qualifiedName": "AdminInitiateOrderEditRequest"
												},
												"name": "AdminInitiateOrderEditRequest",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40345,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order edit."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40346,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/responses.ts",
													"qualifiedName": "AdminOrderEditResponse"
												},
												"name": "AdminOrderEditResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40347,
							"name": "request",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
									"line": 67,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40348,
									"name": "request",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method changes an order edit to requested. It sends a request to the\n[Request Order Edit](https://docs.medusajs.com/api/admin#order-edits_postordereditsidrequest)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.orderEdit.request(\"ordch_123\")\n.then(({ order_preview }) => {\n  console.log(order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
											"line": 67,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40349,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order edit's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40350,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order preview."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40351,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/responses.ts",
													"qualifiedName": "AdminOrderEditPreviewResponse"
												},
												"name": "AdminOrderEditPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40352,
							"name": "confirm",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
									"line": 98,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40353,
									"name": "confirm",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method confirms an order edit and applies it on the order. It sends a request\nto the [Confirm Order Edit](https://docs.medusajs.com/api/admin#order-edits_postordereditsidconfirm)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.orderEdit.confirm(\"ordch_123\")\n.then(({ order_preview }) => {\n  console.log(order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
											"line": 98,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40354,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order edit's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40355,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order preview."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40356,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/responses.ts",
													"qualifiedName": "AdminOrderEditPreviewResponse"
												},
												"name": "AdminOrderEditPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40357,
							"name": "cancelRequest",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
									"line": 129,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40358,
									"name": "cancelRequest",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method cancels a requested order edit. It sends a request to the\n[Cancel Order Edit](https://docs.medusajs.com/api/admin#order-edits_deleteordereditsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.orderEdit.cancelRequest(\"ordch_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
											"line": 129,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40359,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order edit's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40360,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Query parameters"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40361,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/responses.ts",
													"qualifiedName": "AdminOrderEditDeleteResponse"
												},
												"name": "AdminOrderEditDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40362,
							"name": "addItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
									"line": 169,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40363,
									"name": "addItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds items to an order edit. These items will have the action "
											},
											{
												"kind": "code",
												"text": "`ITEM_ADD`"
											},
											{
												"kind": "text",
												"text": ".\n\nThe method sends a request to the [Add Items](https://docs.medusajs.com/api/admin#order-edits_postordereditsiditems)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.orderEdit.addItems(\"ordch_123\", {\n  items: [\n    {\n      variant_id: \"variant_123\",\n      quantity: 1\n    }\n  ]\n})\n.then(({ order_preview }) => {\n  console.log(order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
											"line": 169,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40364,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order edit's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40365,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The items to add."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
													"qualifiedName": "AdminAddOrderEditItems"
												},
												"name": "AdminAddOrderEditItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40366,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order preview."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40367,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/responses.ts",
													"qualifiedName": "AdminOrderEditPreviewResponse"
												},
												"name": "AdminOrderEditPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40368,
							"name": "updateOriginalItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
									"line": 210,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40369,
									"name": "updateOriginalItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates the quantity and other details of an item in an order. It sends a request to the\n[Update Item Quantity](https://docs.medusajs.com/api/admin#order-edits_postordereditsiditemsitemitem_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.orderEdit.updateOriginalItem(\n  \"ordch_123\", \n  \"orli_123\",\n  {\n    quantity: 1\n  }\n)\n.then(({ order_preview }) => {\n  console.log(order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
											"line": 210,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40370,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order edit's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40371,
											"name": "itemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The item's ID in the order."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40372,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to edit in the item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
													"qualifiedName": "AdminUpdateOrderEditItem"
												},
												"name": "AdminUpdateOrderEditItem",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40373,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order preview."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40374,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/responses.ts",
													"qualifiedName": "AdminOrderEditPreviewResponse"
												},
												"name": "AdminOrderEditPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40375,
							"name": "updateAddedItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
									"line": 257,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40376,
									"name": "updateAddedItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an added item in the order edit by the ID of the item's "
											},
											{
												"kind": "code",
												"text": "`ITEM_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nIt sends a request\nto the [Update Item](https://docs.medusajs.com/api/admin#order-edits_postordereditsiditemsaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.orderEdit.updateAddedItem(\n  \"ordch_123\", \n  \"orli_123\",\n  {\n    quantity: 1\n  }\n)\n.then(({ order_preview }) => {\n  console.log(order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
											"line": 257,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40377,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order edit's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40378,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the new item's "
													},
													{
														"kind": "code",
														"text": "`ITEM_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40379,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
													"qualifiedName": "AdminUpdateOrderEditItem"
												},
												"name": "AdminUpdateOrderEditItem",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40380,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order preview."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40381,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/responses.ts",
													"qualifiedName": "AdminOrderEditPreviewResponse"
												},
												"name": "AdminOrderEditPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40382,
							"name": "removeAddedItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
									"line": 296,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40383,
									"name": "removeAddedItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes an added item in the order edit by the ID of the item's "
											},
											{
												"kind": "code",
												"text": "`ITEM_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.orderEdit.removeAddedItem(\n  \"ordch_123\", \n  \"orli_123\",\n)\n.then(({ order_preview }) => {\n  console.log(order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
											"line": 296,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40384,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order edit's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40385,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the new item's "
													},
													{
														"kind": "code",
														"text": "`ITEM_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40386,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order preview."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40387,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/responses.ts",
													"qualifiedName": "AdminOrderEditPreviewResponse"
												},
												"name": "AdminOrderEditPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								40338
							]
						},
						{
							"title": "Properties",
							"children": [
								40341
							]
						},
						{
							"title": "Methods",
							"children": [
								40342,
								40347,
								40352,
								40357,
								40362,
								40368,
								40375,
								40382
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 40240,
					"name": "Order",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 40244,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 16,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 40241,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 20,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 40242,
									"name": "Order",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 20,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 40243,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 40240,
										"name": "Order",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 40245,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 57,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40246,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves an order by its ID. It sends a request to the\n[Get Order](https://docs.medusajs.com/api/admin#orders_getordersid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve an order by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.retrieve(\"order_123\")\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.retrieve(\"order_123\", {\n  fields: \"id,*items\"\n})\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 57,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40247,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40248,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40249,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderResponse"
												},
												"name": "AdminOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40250,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 93,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40251,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an order. It sends a request to the\n[Update Order Email](https://docs.medusajs.com/api/admin#orders_postordersid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.update(\n  \"order_123\",\n  {\n    email: \"new_email@example.com\",\n    shipping_address: {\n      first_name: \"John\",\n      last_name: \"Doe\",\n      address_1: \"123 Main St\",\n    }\n  }\n)\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 93,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40252,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40253,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The update details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/payload.ts",
													"qualifiedName": "AdminUpdateOrder"
												},
												"name": "AdminUpdateOrder",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40254,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderResponse"
												},
												"name": "AdminOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40255,
							"name": "retrievePreview",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 123,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40256,
									"name": "retrievePreview",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves the preview of an order based on its last associated change. It sends a request to the\n[Get Order Preview](https://docs.medusajs.com/api/admin#orders_getordersidpreview) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.retrievePreview(\"order_123\")\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 123,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40257,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40258,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Query parameters."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/queries.ts",
													"qualifiedName": "AdminOrderFilters"
												},
												"name": "AdminOrderFilters",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40259,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderPreviewResponse"
												},
												"name": "AdminOrderPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40260,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 183,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40261,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of orders. It sends a request to the\n[List Orders](https://docs.medusajs.com/api/admin#orders_getorders) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of orders."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of orders:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.list()\n.then(({ orders, count, limit, offset }) => {\n  console.log(orders)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ orders, count, limit, offset }) => {\n  console.log(orders)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each order:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.list({\n  fields: \"id,*items\"\n})\n.then(({ orders, count, limit, offset }) => {\n  console.log(orders)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 183,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40262,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/queries.ts",
													"qualifiedName": "AdminOrderFilters"
												},
												"name": "AdminOrderFilters",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40263,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderListResponse"
												},
												"name": "AdminOrderListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40264,
							"name": "cancel",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 211,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40265,
									"name": "cancel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method cancels an order. It sends a request to the\n[Cancel Order](https://docs.medusajs.com/api/admin#orders_postordersidcancel)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.cancel(\"order_123\")\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 211,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40266,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40267,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderResponse"
												},
												"name": "AdminOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40268,
							"name": "requestTransfer",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 240,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40269,
									"name": "requestTransfer",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method requests an order transfer. It sends a request to the\n[Request Order Transfer](https://docs.medusajs.com/api/admin#orders_postordersidrequesttransfer)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.requestTransfer(\"order_123\", {\n  customer_id: \"cus_123\",\n  internal_note: \"Internal note\",\n})\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 240,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40270,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40271,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The transfer's details - the id of the next owner."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/payload.ts",
													"qualifiedName": "AdminRequestOrderTransfer"
												},
												"name": "AdminRequestOrderTransfer",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40272,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderResponse"
												},
												"name": "AdminOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40273,
							"name": "cancelTransfer",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 270,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40274,
									"name": "cancelTransfer",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method cancels an order transfer request. It sends a request to the\n[Cancel Order Transfer Request](https://docs.medusajs.com/api/admin#orders_postordersidcanceltransferrequest)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.cancelTransfer(\"order_123\")\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 270,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40275,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40276,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderResponse"
												},
												"name": "AdminOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40277,
							"name": "createFulfillment",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 304,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40278,
									"name": "createFulfillment",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a fulfillment for an order. It sends a request to the\n[Create Fulfillment](https://docs.medusajs.com/api/admin#orders_postordersidfulfillments)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.createFulfillment(\"order_123\", {\n  items: [\n    {\n      id: \"orli_123\",\n      quantity: 1\n    }\n  ]\n})\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 304,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40279,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40280,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The fulfillment's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/payload.ts",
													"qualifiedName": "AdminCreateOrderFulfillment"
												},
												"name": "AdminCreateOrderFulfillment",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40281,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40282,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderResponse"
												},
												"name": "AdminOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40283,
							"name": "cancelFulfillment",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 344,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40284,
									"name": "cancelFulfillment",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method cancels an order's fulfillment. It sends a request to the\n[Cancel Fulfillment](https://docs.medusajs.com/api/admin#orders_postordersidfulfillmentsfulfillment_idcancel)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.cancelFulfillment(\n  \"order_123\",\n  \"ful_123\",\n  {\n    no_notification: false\n  }\n)\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 344,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40285,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40286,
											"name": "fulfillmentId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the fulfillment to cancel."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40287,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The cancelation's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/payload.ts",
													"qualifiedName": "AdminCancelOrderFulfillment"
												},
												"name": "AdminCancelOrderFulfillment",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40288,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderResponse"
												},
												"name": "AdminOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40289,
							"name": "createShipment",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 389,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40290,
									"name": "createShipment",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a shipment for an order's fulfillment. It sends a request to the\n[Create Shipment](https://docs.medusajs.com/api/admin#orders_postordersidfulfillmentsfulfillment_idshipments)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.createShipment(\n  \"order_123\",\n  \"ful_123\",\n  {\n    items: [\n      {\n        id: \"fulit_123\",\n        quantity: 1\n      }\n    ]\n  }\n)\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 389,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40291,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40292,
											"name": "fulfillmentId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the fulfillment."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40293,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The shipment's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/payload.ts",
													"qualifiedName": "AdminCreateOrderShipment"
												},
												"name": "AdminCreateOrderShipment",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40294,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40295,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderResponse"
												},
												"name": "AdminOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40296,
							"name": "markAsDelivered",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 427,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40297,
									"name": "markAsDelivered",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method marks an order's fulfillment as delivered. It sends a request to the\n[Mark Delivered ](https://docs.medusajs.com/api/admin#orders_postordersidfulfillmentsfulfillment_idmarkasdelivered)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.markAsDelivered(\n  \"order_123\",\n  \"ful_123\",\n)\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 427,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40298,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40299,
											"name": "fulfillmentId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The fulfillment's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40300,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40301,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderResponse"
												},
												"name": "AdminOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40302,
							"name": "listChanges",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 460,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40303,
									"name": "listChanges",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of changes made on an order, including returns, exchanges, etc...\n\nThis method sends a request to the [List Changes](https://docs.medusajs.com/api/admin#orders_getordersidchanges)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of order changes."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.listChanges(\"order_123\")\n.then(({ order_changes }) => {\n  console.log(order_changes)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 460,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40304,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40305,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in each order change."
													}
												]
											},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
															"qualifiedName": "FindParams"
														},
														"name": "FindParams",
														"package": "@medusajs/types"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/http/order/admin/queries.ts",
															"qualifiedName": "AdminOrderChangesFilters"
														},
														"name": "AdminOrderChangesFilters",
														"package": "@medusajs/types"
													}
												]
											}
										},
										{
											"id": 40306,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
													"qualifiedName": "PaginatedResponse"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
															"qualifiedName": "AdminOrderChangesResponse"
														},
														"name": "AdminOrderChangesResponse",
														"package": "@medusajs/types"
													}
												],
												"name": "PaginatedResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40307,
							"name": "listLineItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 489,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40308,
									"name": "listLineItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves the order's line items. It sends a request to the\n[List Line Items](https://docs.medusajs.com/api/admin#orders_getordersidlineitems)\nAPI routes."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of line items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.listLineItems(\"order_123\")\n.then(({ order_items }) => {\n  console.log(order_items)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 489,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40309,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40310,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in each line item."
													}
												]
											},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
															"qualifiedName": "FindParams"
														},
														"name": "FindParams",
														"package": "@medusajs/types"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/http/order/admin/queries.ts",
															"qualifiedName": "AdminOrderItemsFilters"
														},
														"name": "AdminOrderItemsFilters",
														"package": "@medusajs/types"
													}
												]
											}
										},
										{
											"id": 40311,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderLineItemsListResponse"
												},
												"name": "AdminOrderLineItemsListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								40241
							]
						},
						{
							"title": "Properties",
							"children": [
								40244
							]
						},
						{
							"title": "Methods",
							"children": [
								40245,
								40250,
								40255,
								40260,
								40264,
								40268,
								40273,
								40277,
								40283,
								40289,
								40296,
								40302,
								40307
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
							"line": 12,
							"character": 13
						}
					]
				},
				{
					"id": 40954,
					"name": "PaymentCollection",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 40958,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment-collection.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 40955,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment-collection.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 40956,
									"name": "PaymentCollection",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment-collection.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 40957,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 40954,
										"name": "PaymentCollection",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 40959,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment-collection.ts",
									"line": 35,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40960,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a payment collection. It sends a request to the\n[Create Payment Collection](https://docs.medusajs.com/api/admin#payment-collections_postpaymentcollections)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The payment collection's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.paymentCollection.create({\n  order_id: \"order_123\"\n})\n.then(({ payment_collection }) => {\n  console.log(payment_collection)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment-collection.ts",
											"line": 35,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40961,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the payment collection to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/payloads.ts",
													"qualifiedName": "AdminCreatePaymentCollection"
												},
												"name": "AdminCreatePaymentCollection",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40962,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the payment collection."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40963,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/responses.ts",
													"qualifiedName": "AdminPaymentCollectionResponse"
												},
												"name": "AdminPaymentCollectionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40964,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment-collection.ts",
									"line": 66,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40965,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a payment collection. It sends a request to the\n[Delete Payment Collection](https://docs.medusajs.com/api/admin#payment-collections_deletepaymentcollectionsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.paymentCollection.delete(\"paycol_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment-collection.ts",
											"line": 66,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40966,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The payment collection's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40967,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/responses.ts",
													"qualifiedName": "AdminDeletePaymentCollectionResponse"
												},
												"name": "AdminDeletePaymentCollectionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40968,
							"name": "markAsPaid",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment-collection.ts",
									"line": 98,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40969,
									"name": "markAsPaid",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method marks a payment collection as paid. It sends a request to the \n[Mark as Paid](https://docs.medusajs.com/api/admin#payment-collections_postpaymentcollectionsidmarkaspaid)\nAPI route.\n\nThe API route creates and authorizes a payment session, then capture its payment, \nusing the manual payment provider."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The payment collection's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.paymentCollection.markAsPaid(\"paycol_123\", {\n  order_id: \"order_123\"\n})\n.then(({ payment_collection }) => {\n  console.log(payment_collection)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment-collection.ts",
											"line": 98,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40970,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The payment collection to mark as paid."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40971,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to mark the payment collection as paid."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/payloads.ts",
													"qualifiedName": "AdminMarkPaymentCollectionAsPaid"
												},
												"name": "AdminMarkPaymentCollectionAsPaid",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40972,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the payment collection."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40973,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/responses.ts",
													"qualifiedName": "AdminPaymentCollectionResponse"
												},
												"name": "AdminPaymentCollectionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								40955
							]
						},
						{
							"title": "Properties",
							"children": [
								40958
							]
						},
						{
							"title": "Methods",
							"children": [
								40959,
								40964,
								40968
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment-collection.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 40906,
					"name": "Payment",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 40910,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 40907,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 40908,
									"name": "Payment",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 40909,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 40906,
										"name": "Payment",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 40911,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment.ts",
									"line": 63,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40912,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of payments. It sends a request to the \n[List Payments](https://docs.medusajs.com/api/admin#payments_getpayments) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of payments."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of payments:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.payment.list()\n.then(({ payments, count, limit, offset }) => {\n  console.log(payments)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.payment.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ payments, count, limit, offset }) => {\n  console.log(payments)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each payment:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.payment.list({\n  fields: \"id,*payment_collection\"\n})\n.then(({ payments, count, limit, offset }) => {\n  console.log(payments)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment.ts",
											"line": 63,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40913,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/queries.ts",
													"qualifiedName": "AdminPaymentFilters"
												},
												"name": "AdminPaymentFilters",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40914,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/responses.ts",
													"qualifiedName": "AdminPaymentsResponse"
												},
												"name": "AdminPaymentsResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40915,
							"name": "listPaymentProviders",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment.ts",
									"line": 119,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40916,
									"name": "listPaymentProviders",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of payment providers. It sends a request to the \n[List Payment Providers](https://docs.medusajs.com/api/admin#payments_getpaymentspaymentproviders) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of payment providers."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of payment providers:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.payment.listPaymentProviders()\n.then(({ payment_providers, count, limit, offset }) => {\n  console.log(payment_providers)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.payment.listPaymentProviders({\n  limit: 10,\n  offset: 10\n})\n.then(({ payment_providers, count, limit, offset }) => {\n  console.log(payment_providers)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each payment provider:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.payment.listPaymentProviders({\n  fields: \"id,is_enabled\"\n})\n.then(({ payment_providers, count, limit, offset }) => {\n  console.log(payment_providers)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment.ts",
											"line": 119,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40917,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/queries.ts",
													"qualifiedName": "AdminGetPaymentProvidersParams"
												},
												"name": "AdminGetPaymentProvidersParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40918,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/responses.ts",
													"qualifiedName": "AdminPaymentProviderListResponse"
												},
												"name": "AdminPaymentProviderListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40919,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment.ts",
									"line": 165,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40920,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a payment's details. It sends a request to the \n[Get Payment](https://docs.medusajs.com/api/admin#payments_getpaymentsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The payment's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a payment by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.payment.retrieve(\"pay_123\")\n.then(({ payment }) => {\n  console.log(payment)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.payment.retrieve(\"pay_123\", {\n  fields: \"id,*payment_collection\"\n})\n.then(({ payment }) => {\n  console.log(payment)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment.ts",
											"line": 165,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40921,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The payment's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40922,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the payment."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40923,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/responses.ts",
													"qualifiedName": "AdminPaymentResponse"
												},
												"name": "AdminPaymentResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40924,
							"name": "capture",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment.ts",
									"line": 197,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40925,
									"name": "capture",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method captures a payment. It sends a request to the\n[Capture Payment](https://docs.medusajs.com/api/admin#payments_postpaymentsidcapture) API route.\n\nThe API route uses the "
											},
											{
												"kind": "code",
												"text": "`capturePayment`"
											},
											{
												"kind": "text",
												"text": " method of the payment provider associated with the payment's collection."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The payment's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.payment.capture(\"paycol_123\", {})\n.then(({ payment }) => {\n  console.log(payment)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment.ts",
											"line": 197,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40926,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The payment's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40927,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The capture's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/payloads.ts",
													"qualifiedName": "AdminCapturePayment"
												},
												"name": "AdminCapturePayment",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40928,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the payment."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40929,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/responses.ts",
													"qualifiedName": "AdminPaymentResponse"
												},
												"name": "AdminPaymentResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40930,
							"name": "refund",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment.ts",
									"line": 232,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40931,
									"name": "refund",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method refunds a payment. It sends a request to the\n[Refund Payment](https://docs.medusajs.com/api/admin#payments_postpaymentsidrefund) API route.\n\nThe API route uses the "
											},
											{
												"kind": "code",
												"text": "`refundPayment`"
											},
											{
												"kind": "text",
												"text": " method of the payment provider associated with the payment's collection."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The payment's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.payment.refund(\"paycol_123\", {})\n.then(({ payment }) => {\n  console.log(payment)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment.ts",
											"line": 232,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40932,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The payment's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40933,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The refund's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/payloads.ts",
													"qualifiedName": "AdminRefundPayment"
												},
												"name": "AdminRefundPayment",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40934,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the payment."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40935,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/responses.ts",
													"qualifiedName": "AdminPaymentResponse"
												},
												"name": "AdminPaymentResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								40907
							]
						},
						{
							"title": "Properties",
							"children": [
								40910
							]
						},
						{
							"title": "Methods",
							"children": [
								40911,
								40915,
								40919,
								40924,
								40930
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 39641,
					"name": "PriceList",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 39645,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-list.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39642,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-list.ts",
									"line": 14,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 39643,
									"name": "PriceList",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-list.ts",
											"line": 14,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 39644,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 39641,
										"name": "PriceList",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 39646,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-list.ts",
									"line": 51,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39647,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a price list. It sends a request to the\n[Get Price List](https://docs.medusajs.com/v2/api/admin#price-lists_getpricelistsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The price list's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a price list by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.priceList.retrieve(\"plist_123\")\n.then(({ price_list }) => {\n  console.log(price_list)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.priceList.retrieve(\"plist_123\", {\n  fields: \"id,*prices\"\n})\n.then(({ price_list }) => {\n  console.log(price_list)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-list.ts",
											"line": 51,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39648,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The price list's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39649,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the price list."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
													"qualifiedName": "AdminPriceListParams"
												},
												"name": "AdminPriceListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39650,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
													"qualifiedName": "AdminPriceListResponse"
												},
												"name": "AdminPriceListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39651,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-list.ts",
									"line": 112,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39652,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of price lists. It sends a request to the \n[List Price Lists](https://docs.medusajs.com/v2/api/admin#price-lists_getpricelists) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of price lists."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of price lists:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.priceList.list()\n.then(({ price_lists, count, limit, offset }) => {\n  console.log(price_lists)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.priceList.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ price_lists, count, limit, offset }) => {\n  console.log(price_lists)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each price list:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.priceList.list({\n  fields: \"id,*prices\"\n})\n.then(({ price_lists, count, limit, offset }) => {\n  console.log(price_lists)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-list.ts",
											"line": 112,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39653,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
													"qualifiedName": "AdminPriceListListParams"
												},
												"name": "AdminPriceListListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39654,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
													"qualifiedName": "AdminPriceListListResponse"
												},
												"name": "AdminPriceListListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39655,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-list.ts",
									"line": 156,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39656,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a price list. It sends a request to the\n[Create Price List](https://docs.medusajs.com/v2/api/admin#price-lists_postpricelists)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The price list's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.priceList.create({\n  title: \"My Price List\",\n  status: \"active\",\n  type: \"sale\",\n  prices: [\n    {\n      variant_id: \"variant_123\",\n      amount: 10,\n      currency_code: \"usd\",\n      rules: {\n        region_id: \"reg_123\"\n      }\n    }\n  ]\n})\n.then(({ price_list }) => {\n  console.log(price_list)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-list.ts",
											"line": 156,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39657,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the price list to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
													"qualifiedName": "AdminCreatePriceList"
												},
												"name": "AdminCreatePriceList",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39658,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the price list."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
													"qualifiedName": "AdminPriceListParams"
												},
												"name": "AdminPriceListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39659,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
													"qualifiedName": "AdminPriceListResponse"
												},
												"name": "AdminPriceListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39660,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-list.ts",
									"line": 191,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39661,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a price list. It sends a request to the \n[Update Price List](https://docs.medusajs.com/v2/api/admin#price-lists_postpricelistsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The price list's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.priceList.update(\"plist_123\", {\n  title: \"My Price List\",\n})\n.then(({ price_list }) => {\n  console.log(price_list)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-list.ts",
											"line": 191,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39662,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The price list's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39663,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update in the price list."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
													"qualifiedName": "AdminUpdatePriceList"
												},
												"name": "AdminUpdatePriceList",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39664,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the price list."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
													"qualifiedName": "AdminPriceListParams"
												},
												"name": "AdminPriceListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39665,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
													"qualifiedName": "AdminPriceListResponse"
												},
												"name": "AdminPriceListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39666,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-list.ts",
									"line": 223,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39667,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a price list. It sends a request to the\n[Delete Price List](https://docs.medusajs.com/v2/api/admin#price-lists_deletepricelistsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.priceList.delete(\"plist_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-list.ts",
											"line": 223,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39668,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The price list's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39669,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
													"qualifiedName": "AdminPriceListDeleteResponse"
												},
												"name": "AdminPriceListDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39670,
							"name": "batchPrices",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-list.ts",
									"line": 265,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39671,
									"name": "batchPrices",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages the prices of a price list to create, update, or delete them.\nIt sends a request to the [Manage Prices](https://docs.medusajs.com/v2/api/admin#price-lists_postpricelistsidpricesbatch)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The price list's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.priceList.batchPrices(\"plist_123\", {\n  create: [{\n    variant_id: \"variant_123\",\n    currency_code: \"usd\",\n    amount: 10,\n    rules: {\n      region_id: \"reg_123\"\n    }\n  }],\n  update: [{\n    id: \"price_123\",\n    variant_id: \"variant_123\",\n    amount: 20,\n  }],\n  delete: [\"price_123\"]\n})\n.then(({ created, updated, deleted }) => {\n  console.log(created, updated, deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-list.ts",
											"line": 265,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39672,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The price list's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39673,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The prices to create, update, or delete."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
													"qualifiedName": "AdminBatchPriceListPrice"
												},
												"name": "AdminBatchPriceListPrice",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39674,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the price list."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
													"qualifiedName": "AdminPriceListParams"
												},
												"name": "AdminPriceListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39675,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
													"qualifiedName": "AdminPriceListBatchResponse"
												},
												"name": "AdminPriceListBatchResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39676,
							"name": "linkProducts",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-list.ts",
									"line": 301,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39677,
									"name": "linkProducts",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes products from a price list. It sends a request to the\n[Remove Product](https://docs.medusajs.com/v2/api/admin#price-lists_postpricelistsidproducts)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The price list's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.priceList.linkProducts(\"plist_123\", {\n  remove: [\"prod_123\"]\n})\n.then(({ price_list }) => {\n  console.log(price_list)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-list.ts",
											"line": 301,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39678,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The price list's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39679,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the products to remove."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
													"qualifiedName": "AdminLinkPriceListProducts"
												},
												"name": "AdminLinkPriceListProducts",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39680,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the price list."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
													"qualifiedName": "AdminPriceListParams"
												},
												"name": "AdminPriceListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39681,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
													"qualifiedName": "AdminPriceListResponse"
												},
												"name": "AdminPriceListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								39642
							]
						},
						{
							"title": "Properties",
							"children": [
								39645
							]
						},
						{
							"title": "Methods",
							"children": [
								39646,
								39651,
								39655,
								39660,
								39666,
								39670,
								39676
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-list.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 39682,
					"name": "PricePreference",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 39686,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39683,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
									"line": 14,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 39684,
									"name": "PricePreference",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
											"line": 14,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 39685,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 39682,
										"name": "PricePreference",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 39687,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
									"line": 51,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39688,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a price preference. It sends a request to the\n[Get Price Preference](https://docs.medusajs.com/api/admin#price-preferences_getpricepreferencesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The price preference's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a price preference by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.pricePreference.retrieve(\"prpref_123\")\n.then(({ price_preference }) => {\n  console.log(price_preference)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.pricePreference.retrieve(\"prpref_123\", {\n  fields: \"id,is_tax_inclusive\"\n})\n.then(({ price_preference }) => {\n  console.log(price_preference)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
											"line": 51,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39689,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The price preference's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39690,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the price preference."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/queries.ts",
													"qualifiedName": "AdminPricePreferenceParams"
												},
												"name": "AdminPricePreferenceParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39691,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/responses.ts",
													"qualifiedName": "AdminPricePreferenceResponse"
												},
												"name": "AdminPricePreferenceResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39692,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
									"line": 112,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39693,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of price preferences. It sends a request to the \n[List Price Preferences](https://docs.medusajs.com/api/admin#price-preferences_getpricepreferences) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of price preferences."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of price preferences:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.pricePreference.list()\n.then(({ price_preferences, count, limit, offset }) => {\n  console.log(price_preferences)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.pricePreference.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ price_preferences, count, limit, offset }) => {\n  console.log(price_preferences)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each price preference:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.pricePreference.list({\n  fields: \"id,is_tax_inclusive\"\n})\n.then(({ price_preferences, count, limit, offset }) => {\n  console.log(price_preferences)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
											"line": 112,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39694,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/queries.ts",
													"qualifiedName": "AdminPricePreferenceListParams"
												},
												"name": "AdminPricePreferenceListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39695,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/responses.ts",
													"qualifiedName": "AdminPricePreferenceListResponse"
												},
												"name": "AdminPricePreferenceListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39696,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
									"line": 146,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39697,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a price preference. It sends a request to the\n[Create Price Preference](https://docs.medusajs.com/api/admin#price-preferences_postpricepreferences)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The price preference's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.pricePreference.create({\n  attribute: \"region_id\",\n  value: \"region_123\",\n  is_tax_inclusive: true\n})\n.then(({ price_preference }) => {\n  console.log(price_preference)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
											"line": 146,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39698,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the price preference to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/payloads.ts",
													"qualifiedName": "AdminCreatePricePreference"
												},
												"name": "AdminCreatePricePreference",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39699,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the price preference."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/queries.ts",
													"qualifiedName": "AdminPricePreferenceParams"
												},
												"name": "AdminPricePreferenceParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39700,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/responses.ts",
													"qualifiedName": "AdminPricePreferenceResponse"
												},
												"name": "AdminPricePreferenceResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39701,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
									"line": 181,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39702,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a price preference. It sends a request to the\n[Update Price Preference](https://docs.medusajs.com/api/admin#price-preferences_postpricepreferencesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The price preference's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.pricePreference.update(\"prpref_123\", {\n  is_tax_inclusive: true\n})\n.then(({ price_preference }) => {\n  console.log(price_preference)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
											"line": 181,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39703,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The price preference's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39704,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update in the price preference."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/payloads.ts",
													"qualifiedName": "AdminUpdatePricePreference"
												},
												"name": "AdminUpdatePricePreference",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39705,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the price preference."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/queries.ts",
													"qualifiedName": "AdminPricePreferenceParams"
												},
												"name": "AdminPricePreferenceParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39706,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/responses.ts",
													"qualifiedName": "AdminPricePreferenceResponse"
												},
												"name": "AdminPricePreferenceResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39707,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
									"line": 213,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39708,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a price preference. It sends a request to the\n[Delete Price Preference](https://docs.medusajs.com/api/admin#price-preferences_deletepricepreferencesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.pricePreference.delete(\"prpref_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
											"line": 213,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39709,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The price preference's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39710,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/responses.ts",
													"qualifiedName": "AdminPricePreferenceDeleteResponse"
												},
												"name": "AdminPricePreferenceDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								39683
							]
						},
						{
							"title": "Properties",
							"children": [
								39686
							]
						},
						{
							"title": "Methods",
							"children": [
								39687,
								39692,
								39696,
								39701,
								39707
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 39606,
					"name": "ProductCategory",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 39610,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-category.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39607,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-category.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 39608,
									"name": "ProductCategory",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-category.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 39609,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 39606,
										"name": "ProductCategory",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 39611,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-category.ts",
									"line": 35,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39612,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a product category. It sends a request to the\n[Create Category](https://docs.medusajs.com/api/admin#product-categories_postproductcategories)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The category's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCategory.create({\n  name: \"Shirts\"\n})\n.then(({ product_category }) => {\n  console.log(product_category)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-category.ts",
											"line": 35,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39613,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the category to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
													"qualifiedName": "AdminCreateProductCategory"
												},
												"name": "AdminCreateProductCategory",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39614,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the category."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/queries.ts",
													"qualifiedName": "AdminProductCategoryParams"
												},
												"name": "AdminProductCategoryParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39615,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
													"qualifiedName": "AdminProductCategoryResponse"
												},
												"name": "AdminProductCategoryResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39616,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-category.ts",
									"line": 70,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39617,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a product category. It sends a request to the\n[Update Category](https://docs.medusajs.com/api/admin#product-categories_postproductcategoriesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The category's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCategory.update(\"pcat_123\", {\n  name: \"Shirts\"\n})\n.then(({ product_category }) => {\n  console.log(product_category)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-category.ts",
											"line": 70,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39618,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product category's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39619,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update in the category."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
													"qualifiedName": "AdminUpdateProductCategory"
												},
												"name": "AdminUpdateProductCategory",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39620,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the category."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/queries.ts",
													"qualifiedName": "AdminProductCategoryParams"
												},
												"name": "AdminProductCategoryParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39621,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
													"qualifiedName": "AdminProductCategoryResponse"
												},
												"name": "AdminProductCategoryResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39622,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-category.ts",
									"line": 133,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39623,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of product categories. It sends a request to the \n[List Product Categories](https://docs.medusajs.com/api/admin#product-categories_getproductcategories) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of product categories."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of product categories:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCategory.list()\n.then(({ product_categories, count, limit, offset }) => {\n  console.log(product_categories)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCategory.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ product_categories, count, limit, offset }) => {\n  console.log(product_categories)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each product category:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCategory.list({\n  fields: \"id,*products\"\n})\n.then(({ product_categories, count, limit, offset }) => {\n  console.log(product_categories)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-category.ts",
											"line": 133,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39624,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/queries.ts",
													"qualifiedName": "AdminProductCategoryListParams"
												},
												"name": "AdminProductCategoryListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39625,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
													"qualifiedName": "AdminProductCategoryListResponse"
												},
												"name": "AdminProductCategoryListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39626,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-category.ts",
									"line": 178,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39627,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a product category by its ID. It sends a request to the \n[Get Product Category](https://docs.medusajs.com/api/admin#product-categories_getproductcategoriesid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product category's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a product category by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCategory.retrieve(\"pcat_123\")\n.then(({ product_category }) => {\n  console.log(product_category)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCategory.retrieve(\"pcat_123\", {\n  fields: \"id,*products\"\n})\n.then(({ product_category }) => {\n  console.log(product_category)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-category.ts",
											"line": 178,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39628,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The category's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39629,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product category."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/queries.ts",
													"qualifiedName": "AdminProductCategoryParams"
												},
												"name": "AdminProductCategoryParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39630,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
													"qualifiedName": "AdminProductCategoryResponse"
												},
												"name": "AdminProductCategoryResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39631,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-category.ts",
									"line": 207,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39632,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a product category. It sends a request to the\n[Delete Product Category](https://docs.medusajs.com/api/admin#product-categories_deleteproductcategoriesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCategory.delete(\"pcat_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-category.ts",
											"line": 207,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39633,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The category's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39634,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
													"qualifiedName": "AdminProductCategoryDeleteResponse"
												},
												"name": "AdminProductCategoryDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39635,
							"name": "updateProducts",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-category.ts",
									"line": 237,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39636,
									"name": "updateProducts",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manaes the products of a category to add or remove them. It sends a request\nto the [Manage Products](https://docs.medusajs.com/api/admin#product-categories_postproductcategoriesidproducts)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product category's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCategory.updateProducts(\"pcat_123\", {\n  add: [\"prod_123\"],\n  remove: [\"prod_321\"]\n})\n.then(({ product_category }) => {\n  console.log(product_category)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-category.ts",
											"line": 237,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39637,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The category's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39638,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The products to create or update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
													"qualifiedName": "AdminUpdateProductCategoryProducts"
												},
												"name": "AdminUpdateProductCategoryProducts",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39639,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product category."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/queries.ts",
													"qualifiedName": "AdminProductCategoryParams"
												},
												"name": "AdminProductCategoryParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39640,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
													"qualifiedName": "AdminProductCategoryResponse"
												},
												"name": "AdminProductCategoryResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								39607
							]
						},
						{
							"title": "Properties",
							"children": [
								39610
							]
						},
						{
							"title": "Methods",
							"children": [
								39611,
								39616,
								39622,
								39626,
								39631,
								39635
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-category.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 39572,
					"name": "ProductCollection",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 39576,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39573,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 39574,
									"name": "ProductCollection",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 39575,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 39572,
										"name": "ProductCollection",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 39577,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
									"line": 35,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39578,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a product collection. It sends a request to the \n[Create Collection](https://docs.medusajs.com/api/admin#collections_postcollections)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product collection's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCollection.create({\n  title: \"Summer Collection\"\n})\n.then(({ collection }) => {\n  console.log(collection)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
											"line": 35,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39579,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the product collection to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
													"qualifiedName": "AdminCreateCollection"
												},
												"name": "AdminCreateCollection",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39580,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product collection."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/queries.ts",
													"qualifiedName": "AdminCollectionParams"
												},
												"name": "AdminCollectionParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39581,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
													"qualifiedName": "AdminCollectionResponse"
												},
												"name": "AdminCollectionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39582,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
									"line": 70,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39583,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a collection. It sends a request to the\n[Update Collection](https://docs.medusajs.com/api/admin#collections_postcollectionsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product collection's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCollection.update(\"pcol_123\", {\n  title: \"Summer Collection\"\n})\n.then(({ collection }) => {\n  console.log(collection)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
											"line": 70,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39584,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the collection."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39585,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update in the collection."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
													"qualifiedName": "AdminUpdateCollection"
												},
												"name": "AdminUpdateCollection",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39586,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product collection."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/queries.ts",
													"qualifiedName": "AdminCollectionParams"
												},
												"name": "AdminCollectionParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39587,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
													"qualifiedName": "AdminCollectionResponse"
												},
												"name": "AdminCollectionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39588,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
									"line": 133,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39589,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of collections. It sends a request to the \n[List Collections](https://docs.medusajs.com/api/admin#collections_getcollections) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of collections."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of collections:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCollection.list()\n.then(({ collections, count, limit, offset }) => {\n  console.log(collections)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCollection.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ collections, count, limit, offset }) => {\n  console.log(collections)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each collection:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCollection.list({\n  fields: \"id,*products\"\n})\n.then(({ collections, count, limit, offset }) => {\n  console.log(collections)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
											"line": 133,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39590,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/queries.ts",
													"qualifiedName": "AdminCollectionListParams"
												},
												"name": "AdminCollectionListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39591,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
													"qualifiedName": "AdminCollectionListResponse"
												},
												"name": "AdminCollectionListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39592,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
									"line": 178,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39593,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a collection by its ID. It sends a request to the \n[Get Collection](https://docs.medusajs.com/api/admin#collections_getcollectionsid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The collection's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a collection by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCollection.retrieve(\"pcol_123\")\n.then(({ collection }) => {\n  console.log(collection)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCollection.retrieve(\"pcol_123\", {\n  fields: \"id,*products\"\n})\n.then(({ collection }) => {\n  console.log(collection)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
											"line": 178,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39594,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The collection's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39595,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the collection."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/queries.ts",
													"qualifiedName": "AdminCollectionParams"
												},
												"name": "AdminCollectionParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39596,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
													"qualifiedName": "AdminCollectionResponse"
												},
												"name": "AdminCollectionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39597,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
									"line": 207,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39598,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a product collection. It sends a request to the\n[Delete Collection](https://docs.medusajs.com/api/admin#collections_deletecollectionsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCollection.delete(\"pcol_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
											"line": 207,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39599,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The collection's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39600,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
													"qualifiedName": "AdminCollectionDeleteResponse"
												},
												"name": "AdminCollectionDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39601,
							"name": "updateProducts",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
									"line": 236,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39602,
									"name": "updateProducts",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages the products of a collection to add or remove them. It sends a request\nto the [Manage Products](https://docs.medusajs.com/api/admin#collections_postcollectionsidproducts)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product category's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCollection.updateProducts(\"pcol_123\", {\n  add: [\"prod_123\"],\n  remove: [\"prod_321\"]\n})\n.then(({ collection }) => {\n  console.log(collection)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
											"line": 236,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39603,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The collection's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39604,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The products to add or remove."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
													"qualifiedName": "AdminUpdateCollectionProducts"
												},
												"name": "AdminUpdateCollectionProducts",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39605,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
													"qualifiedName": "AdminCollectionResponse"
												},
												"name": "AdminCollectionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								39573
							]
						},
						{
							"title": "Properties",
							"children": [
								39576
							]
						},
						{
							"title": "Methods",
							"children": [
								39577,
								39582,
								39588,
								39592,
								39597,
								39601
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 40835,
					"name": "ProductTag",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 40839,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 40836,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 40837,
									"name": "ProductTag",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 40838,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 40835,
										"name": "ProductTag",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 40840,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
									"line": 35,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40841,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a product tag. It sends a request to the \n[Create Product Tag](https://docs.medusajs.com/api/admin#product-tags_postproducttags)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product tag's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productTag.create({\n  value: \"shirt\"\n})\n.then(({ product_tag }) => {\n  console.log(product_tag)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
											"line": 35,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40842,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the product tag."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/payloads.ts",
													"qualifiedName": "AdminCreateProductTag"
												},
												"name": "AdminCreateProductTag",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40843,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product tag."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/queries.ts",
													"qualifiedName": "AdminProductTagParams"
												},
												"name": "AdminProductTagParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40844,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
													"qualifiedName": "AdminProductTagResponse"
												},
												"name": "AdminProductTagResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40845,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
									"line": 70,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40846,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a tag's details. It sends a request to the\n[Update Product Tag](https://docs.medusajs.com/api/admin#product-tags_postproducttagsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product tag's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productTag.update(\"ptag_123\", {\n  value: \"shirt\"\n})\n.then(({ product_tag }) => {\n  console.log(product_tag)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
											"line": 70,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40847,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The tag's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40848,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update in the tag."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/payloads.ts",
													"qualifiedName": "AdminUpdateProductTag"
												},
												"name": "AdminUpdateProductTag",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40849,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product tag."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/queries.ts",
													"qualifiedName": "AdminProductTagParams"
												},
												"name": "AdminProductTagParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40850,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
													"qualifiedName": "AdminProductTagResponse"
												},
												"name": "AdminProductTagResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40851,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
									"line": 133,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40852,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of product tags. It sends a request to the \n[List Product Tags](https://docs.medusajs.com/api/admin#product-tags_getproducttags) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of product tags."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of product tags:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productTag.list()\n.then(({ product_tags, count, limit, offset }) => {\n  console.log(product_tags)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productTag.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ product_tags, count, limit, offset }) => {\n  console.log(product_tags)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each product tag:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productTag.list({\n  fields: \"id,*products\"\n})\n.then(({ product_tags, count, limit, offset }) => {\n  console.log(product_tags)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
											"line": 133,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40853,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/queries.ts",
													"qualifiedName": "AdminProductTagListParams"
												},
												"name": "AdminProductTagListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40854,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
													"qualifiedName": "AdminProductTagListResponse"
												},
												"name": "AdminProductTagListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40855,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
									"line": 178,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40856,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a product tag by its ID. It sends a request to the \n[Get Product Tag](https://docs.medusajs.com/api/admin#product-tags_getproducttagsid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product tag's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a product tag by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productTag.retrieve(\"ptag_123\")\n.then(({ product_tag }) => {\n  console.log(product_tag)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productTag.retrieve(\"ptag_123\", {\n  fields: \"id,*products\"\n})\n.then(({ product_tag }) => {\n  console.log(product_tag)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
											"line": 178,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40857,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product tag's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40858,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product tag."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/queries.ts",
													"qualifiedName": "AdminProductTagParams"
												},
												"name": "AdminProductTagParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40859,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
													"qualifiedName": "AdminProductTagResponse"
												},
												"name": "AdminProductTagResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40860,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
									"line": 207,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40861,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a product tag. It sends a request to the\n[Delete Product Tag](https://docs.medusajs.com/api/admin#product-tags_deleteproducttagsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productTag.delete(\"ptag_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
											"line": 207,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40862,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The tag's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40863,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
													"qualifiedName": "AdminProductTagDeleteResponse"
												},
												"name": "AdminProductTagDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								40836
							]
						},
						{
							"title": "Properties",
							"children": [
								40839
							]
						},
						{
							"title": "Methods",
							"children": [
								40840,
								40845,
								40851,
								40855,
								40860
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 39833,
					"name": "ProductType",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 39837,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-type.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39834,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-type.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 39835,
									"name": "ProductType",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-type.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 39836,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 39833,
										"name": "ProductType",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 39838,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-type.ts",
									"line": 35,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39839,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a product type. It sends a request to the\n[Create Product Type](https://docs.medusajs.com/api/admin#product-types_postproducttypes)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product type's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productType.create({\n  value: \"Clothes\"\n})\n.then(({ product_type }) => {\n  console.log(product_type)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-type.ts",
											"line": 35,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39840,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product type's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/payloads.ts",
													"qualifiedName": "AdminCreateProductType"
												},
												"name": "AdminCreateProductType",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39841,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product type."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39842,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
													"qualifiedName": "AdminProductTypeResponse"
												},
												"name": "AdminProductTypeResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39843,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-type.ts",
									"line": 70,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39844,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a product type. It sends a request to the\n[Update Product Type](https://docs.medusajs.com/api/admin#product-types_postproducttypesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product type's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productType.update(\"ptyp_123\", {\n  value: \"Clothes\"\n})\n.then(({ product_type }) => {\n  console.log(product_type)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-type.ts",
											"line": 70,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39845,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product type's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39846,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update in the product type."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/payloads.ts",
													"qualifiedName": "AdminUpdateProductType"
												},
												"name": "AdminUpdateProductType",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39847,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product type."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39848,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
													"qualifiedName": "AdminProductTypeResponse"
												},
												"name": "AdminProductTypeResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39849,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-type.ts",
									"line": 133,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39850,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of product types. It sends a request to the \n[List Product Types](https://docs.medusajs.com/api/admin#product-types_getproducttypes) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of product types."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of product types:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productType.list()\n.then(({ product_types, count, limit, offset }) => {\n  console.log(product_types)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productType.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ product_types, count, limit, offset }) => {\n  console.log(product_types)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each product type:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productType.list({\n  fields: \"id,*products\"\n})\n.then(({ product_types, count, limit, offset }) => {\n  console.log(product_types)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-type.ts",
											"line": 133,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39851,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
													"qualifiedName": "AdminProductTypeListParams"
												},
												"name": "AdminProductTypeListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39852,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
													"qualifiedName": "AdminProductTypeListResponse"
												},
												"name": "AdminProductTypeListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39853,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-type.ts",
									"line": 179,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39854,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a product type by its ID. It sends a request to the \n[Get Product Type](https://docs.medusajs.com/api/admin#product-types_getproducttypesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product type's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a product type by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productType.retrieve(\"ptyp_123\")\n.then(({ product_type }) => {\n  console.log(product_type)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productType.retrieve(\"ptyp_123\", {\n  fields: \"id,*products\"\n})\n.then(({ product_type }) => {\n  console.log(product_type)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-type.ts",
											"line": 179,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39855,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product type's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39856,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product type."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
													"qualifiedName": "AdminProductTypeParams"
												},
												"name": "AdminProductTypeParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39857,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
													"qualifiedName": "AdminProductTypeResponse"
												},
												"name": "AdminProductTypeResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39858,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-type.ts",
									"line": 208,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39859,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a product type. It sends a request to the \n[Delete Product Type](https://docs.medusajs.com/api/admin#product-types_deleteproducttypesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product type's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productType.delete(\"ptyp_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-type.ts",
											"line": 208,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39860,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product type's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39861,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
													"qualifiedName": "AdminProductTypeDeleteResponse"
												},
												"name": "AdminProductTypeDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								39834
							]
						},
						{
							"title": "Properties",
							"children": [
								39837
							]
						},
						{
							"title": "Methods",
							"children": [
								39838,
								39843,
								39849,
								39853,
								39858
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-type.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 40936,
					"name": "ProductVariant",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 40940,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-variant.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 40937,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-variant.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 40938,
									"name": "ProductVariant",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-variant.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 40939,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 40936,
										"name": "ProductVariant",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 40941,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-variant.ts",
									"line": 64,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40942,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of product variants. It sends a request to the\n[List Product Variants](https://docs.medusajs.com/api/admin#product-variants_getproductvariants)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of product variants."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of product variants:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productVariant.list()\n.then(({ variants, count, limit, offset }) => {\n  console.log(variants)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productVariant.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ variants, count, limit, offset }) => {\n  console.log(variants)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each campaign:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productVariant.list({\n  fields: \"id,products\"\n})\n.then(({ variants, count, limit, offset }) => {\n  console.log(variants)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-variant.ts",
											"line": 64,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40943,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/queries.ts",
													"qualifiedName": "AdminProductVariantParams"
												},
												"name": "AdminProductVariantParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40944,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductVariantListResponse"
												},
												"name": "AdminProductVariantListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								40937
							]
						},
						{
							"title": "Properties",
							"children": [
								40940
							]
						},
						{
							"title": "Methods",
							"children": [
								40941
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-variant.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 39711,
					"name": "Product",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 39715,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39712,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 39713,
									"name": "Product",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 39714,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 39711,
										"name": "Product",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 39716,
							"name": "import",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 38,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39717,
									"name": "import",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a product import. The products are only imported after\nthe import is confirmed using the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "confirmImport",
												"target": 39722
											},
											{
												"kind": "text",
												"text": " method.\n\nThis method sends a request to the \n[Create Product Import](https://docs.medusajs.com/api/admin#products_postproductsimport)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The import's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.import({\n  file // uploaded File instance\n})\n.then(({ transaction_id }) => {\n  console.log(transaction_id)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 38,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39718,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The import's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
													"qualifiedName": "AdminImportProductRequest"
												},
												"name": "AdminImportProductRequest",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39719,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Query parameters to pass to the request."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39720,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										},
										{
											"id": 39721,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminImportProductResponse"
												},
												"name": "AdminImportProductResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39722,
							"name": "confirmImport",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 78,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39723,
									"name": "confirmImport",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method confirms a product import created using the method "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "import",
												"target": 39716
											},
											{
												"kind": "text",
												"text": ".\nIt sends a request to the \n[Confirm Product Import](https://docs.medusajs.com/api/admin#products_postproductsimporttransaction_idconfirm)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.confirmImport(\"transaction_123\")\n.then(() => {\n  console.log(\"Import confirmed\")\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 78,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39724,
											"name": "transactionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the transaction of the created product import. This is returned\nby the API route used to create the product import."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39725,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Query parameters to pass in the request."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39726,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										},
										{
											"id": 39727,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 39728,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39729,
							"name": "export",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 119,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39730,
									"name": "export",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method starts a product export process to retrieve a CSV of exported products.\n\nYou'll receive in the response the transaction ID of the workflow generating the CSV file. \nTo check the status of the execution, send a "
											},
											{
												"kind": "code",
												"text": "`GET`"
											},
											{
												"kind": "text",
												"text": " request to \n"
											},
											{
												"kind": "code",
												"text": "`/admin/workflows-executions/export-products/:transaction-id`"
											},
											{
												"kind": "text",
												"text": ". \n\nOnce the execution finishes successfully, a notification is created for the export. \nYou can retrieve the notifications using the "
											},
											{
												"kind": "code",
												"text": "`/admin/notification`"
											},
											{
												"kind": "text",
												"text": " API route to \nretrieve the file's download URL.\n\nThis method sends a request to the [Export Product](https://docs.medusajs.com/api/admin#products_postproductsexport)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The export's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.export({})\n.then(({ transaction_id }) => {\n  console.log(transaction_id)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 119,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39731,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The export's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
													"qualifiedName": "AdminExportProductRequest"
												},
												"name": "AdminExportProductRequest",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39732,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters to specify which products to export."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/queries.ts",
													"qualifiedName": "AdminProductListParams"
												},
												"name": "AdminProductListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39733,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminExportProductResponse"
												},
												"name": "AdminExportProductResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39734,
							"name": "batch",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 175,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39735,
									"name": "batch",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages products to create, update, or delete them. It sends a request to the \n[Manage Products](https://docs.medusajs.com/api/admin#products_postproductsbatch)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The batch operations details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.batch({\n  create: [\n    {\n      title: \"Shirt\",\n      options: [{\n        title: \"Default\",\n        values: [\"Default Option\"]\n      }],\n      variants: [\n        {\n          title: \"Default\",\n          options: {\n            Default: \"Default Option\"\n          },\n          prices: []\n        }\n      ]\n    }\n  ],\n  update: [{\n    id: \"prod_123\",\n    title: \"Pants\"\n  }],\n  delete: [\"prod_321\"]\n})\n.then(({ created, updated, deleted }) => {\n  console.log(created, updated, deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 175,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39736,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The products to create, update, or delete."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
													"qualifiedName": "AdminBatchProductRequest"
												},
												"name": "AdminBatchProductRequest",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39737,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the products."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39738,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminBatchProductResponse"
												},
												"name": "AdminBatchProductResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39739,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 223,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39740,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a product. It sends a request to the \n[Create Product](https://docs.medusajs.com/api/admin#products_postproducts)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.create({\n  title: \"Shirt\",\n  options: [{\n    title: \"Default\",\n    values: [\"Default Option\"]\n  }],\n  variants: [\n    {\n      title: \"Default\",\n      options: {\n        Default: \"Default Option\"\n      },\n      prices: []\n    }\n  ],\n  shipping_profile_id: \"sp_123\"\n})\n.then(({ product }) => {\n  console.log(product)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 223,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39741,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
													"qualifiedName": "AdminCreateProduct"
												},
												"name": "AdminCreateProduct",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39742,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39743,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductResponse"
												},
												"name": "AdminProductResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39744,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 258,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39745,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a product. It sends a request to the\n[Update Product](https://docs.medusajs.com/api/admin#products_postproductsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.update(\"prod_123\", {\n  title: \"Shirt\",\n})\n.then(({ product }) => {\n  console.log(product)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 258,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39746,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39747,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update in the product."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
													"qualifiedName": "AdminUpdateProduct"
												},
												"name": "AdminUpdateProduct",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39748,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39749,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductResponse"
												},
												"name": "AdminProductResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39750,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 321,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39751,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of products. It sends a request to the \n[List Products](https://docs.medusajs.com/api/admin#products_getproducts) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of products."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of products:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.list()\n.then(({ products, count, limit, offset }) => {\n  console.log(products)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ products, count, limit, offset }) => {\n  console.log(products)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each products:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.list({\n  fields: \"id,*variants\"\n})\n.then(({ products, count, limit, offset }) => {\n  console.log(products)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 321,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39752,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/queries.ts",
													"qualifiedName": "AdminProductListParams"
												},
												"name": "AdminProductListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39753,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductListResponse"
												},
												"name": "AdminProductListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39754,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 367,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39755,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a product by its ID. It sends a request to the \n[Get Product](https://docs.medusajs.com/api/admin#products_getproductsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a product by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.retrieve(\"prod_123\")\n.then(({ product }) => {\n  console.log(product)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.retrieve(\"prod_123\", {\n  fields: \"id,*variants\"\n})\n.then(({ product }) => {\n  console.log(product)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 367,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39756,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39757,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39758,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductResponse"
												},
												"name": "AdminProductResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39759,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 392,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39760,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a product. It sends a request to the\n[Delete Product](https://docs.medusajs.com/api/admin#products_deleteproductsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.delete(\"prod_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 392,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39761,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39762,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductDeleteResponse"
												},
												"name": "AdminProductDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39763,
							"name": "batchVariants",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 436,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39764,
									"name": "batchVariants",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages the variants of a product. It sends a request to the\n[Manage Variants](https://docs.medusajs.com/api/admin#products_postproductsidvariantsbatch)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product variants' details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.batchVariants(\"prod_123\", {\n  create: [\n    {\n      title: \"Blue Shirt\",\n      options: {\n        Color: \"Blue\"\n      },\n      prices: []\n    }\n  ],\n  update: [\n    {\n      id: \"variant_123\",\n      title: \"Pants\"\n    }\n  ],\n  delete: [\"variant_123\"]\n})\n.then(({ created, updated, deleted }) => {\n  console.log(created, updated, deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 436,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39765,
											"name": "productId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39766,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The variants to create, update, or delete."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
													"qualifiedName": "AdminBatchProductVariantRequest"
												},
												"name": "AdminBatchProductVariantRequest",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39767,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product variants."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39768,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminBatchProductVariantResponse"
												},
												"name": "AdminBatchProductVariantResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39769,
							"name": "createVariant",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 481,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39770,
									"name": "createVariant",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a variant for a product. It sends a request to the\n[Create Variant](https://docs.medusajs.com/api/admin#products_postproductsidvariants)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.createVariant(\"prod_123\", {\n  title: \"Blue Shirt\",\n  options: {\n    Color: \"Blue\"\n  },\n  prices: [\n    {\n      amount: 10,\n      currency_code: \"usd\"\n    }\n  ]\n})\n.then(({ product }) => {\n  console.log(product)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 481,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39771,
											"name": "productId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39772,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The variant's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
													"qualifiedName": "AdminCreateProductVariant"
												},
												"name": "AdminCreateProductVariant",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39773,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39774,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductResponse"
												},
												"name": "AdminProductResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39775,
							"name": "updateVariant",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 522,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39776,
									"name": "updateVariant",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a variant of a product. It sends a request to the\n[Update Variant](https://docs.medusajs.com/api/admin#products_postproductsidvariantsvariant_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.updateVariant(\n  \"prod_123\", \n  \"variant_123\",\n    {\n    title: \"Blue Shirt\",\n  }\n)\n.then(({ product }) => {\n  console.log(product)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 522,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39777,
											"name": "productId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39778,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The variant's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39779,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update in the variant."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
													"qualifiedName": "AdminUpdateProductVariant"
												},
												"name": "AdminUpdateProductVariant",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39780,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39781,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductResponse"
												},
												"name": "AdminProductResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39782,
							"name": "listVariants",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 587,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39783,
									"name": "listVariants",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of products. It sends a request to the \n[List Products](https://docs.medusajs.com/api/admin#products_getproductsidvariants) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of product variants."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of product variants:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.listVariants(\"prod_123\")\n.then(({ variants, count, limit, offset }) => {\n  console.log(variants)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.listVariants(\"prod_123\", {\n  limit: 10,\n  offset: 10\n})\n.then(({ variants, count, limit, offset }) => {\n  console.log(variants)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each product variant:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.listVariants(\"prod_123\", {\n  fields: \"id,*product\"\n})\n.then(({ variants, count, limit, offset }) => {\n  console.log(variants)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 587,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39784,
											"name": "productId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the product to retrieve its variants."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39785,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/queries.ts",
													"qualifiedName": "AdminProductVariantParams"
												},
												"name": "AdminProductVariantParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39786,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductVariantListResponse"
												},
												"name": "AdminProductVariantListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39787,
							"name": "retrieveVariant",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 642,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39788,
									"name": "retrieveVariant",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a product's variant. It sends a request to the\n[Retrieve Variant](https://docs.medusajs.com/api/admin#products_getproductsidvariantsvariant_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product variant's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a product variant by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.retrieveVariant(\n  \"prod_123\",\n  \"variant_123\"\n)\n.then(({ variant }) => {\n  console.log(variant)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.retrieveVariant(\n  \"prod_123\",\n  \"variant_123\",\n  {\n    fields: \"id, *product\"\n  }\n)\n.then(({ variant }) => {\n  console.log(variant)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 642,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39789,
											"name": "productId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39790,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The variant's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39791,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product variant."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39792,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductVariantResponse"
												},
												"name": "AdminProductVariantResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39793,
							"name": "deleteVariant",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 673,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39794,
									"name": "deleteVariant",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a product's variant. It sends a request to the\n[Delete Variant](https://docs.medusajs.com/api/admin#products_deleteproductsidvariantsvariant_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.deleteVariant(\"prod_123\", \"variant_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 673,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39795,
											"name": "productId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39796,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the variant."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39797,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductVariantDeleteResponse"
												},
												"name": "AdminProductVariantDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39798,
							"name": "batchVariantInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 727,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39799,
									"name": "batchVariantInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages a product's variant's inventories to associate them with inventory items, \nupdate their inventory items, or delete their association with inventory items.\n\nIt sends a request to the \n[Manage Variant Inventory](https://docs.medusajs.com/api/admin#products_postproductsidvariantsinventoryitemsbatch)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the created, updated, or deleted inventory items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.batchVariantInventoryItems(\n  \"prod_123\", \n  {\n    create: [\n      {\n        inventory_item_id: \"iitem_123\",\n        variant_id: \"variant_123\",\n        required_quantity: 10\n      }\n    ],\n    update: [\n      {\n        inventory_item_id: \"iitem_1234\",\n        variant_id: \"variant_1234\",\n        required_quantity: 20\n      }\n    ],\n    delete: [\n      {\n        inventory_item_id: \"iitem_321\",\n        variant_id: \"variant_321\"\n      }\n    ]\n  }\n)\n.then(({ created, updated, deleted }) => {\n  console.log(created, updated, deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 727,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39800,
											"name": "productId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the product that the variant belongs to."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39801,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory items to create, update, or delete."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
													"qualifiedName": "AdminBatchProductVariantInventoryItemRequest"
												},
												"name": "AdminBatchProductVariantInventoryItemRequest",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39802,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Pass query parameters in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39803,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminBatchProductVariantInventoryItemResponse"
												},
												"name": "AdminBatchProductVariantInventoryItemResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39804,
							"name": "createOption",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 767,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39805,
									"name": "createOption",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates an option in a product. It sends a request to the\n[Create Option](https://docs.medusajs.com/api/admin#products_postproductsidoptions)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.createOption(\n  \"prod_123\", \n  {\n    title: \"Color\",\n    values: [\"Green\", \"Blue\"]\n  }\n)\n.then(({ product }) => {\n  console.log(product)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 767,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39806,
											"name": "productId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39807,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The option's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
													"qualifiedName": "AdminCreateProductOption"
												},
												"name": "AdminCreateProductOption",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39808,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39809,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductResponse"
												},
												"name": "AdminProductResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39810,
							"name": "updateOption",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 808,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39811,
									"name": "updateOption",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a product's option. It sends a request to the\n[Update Option](https://docs.medusajs.com/api/admin#products_postproductsidoptionsoption_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.updateOption(\n  \"prod_123\", \n  \"prodopt_123\",\n  {\n    title: \"Color\"\n  }\n)\n.then(({ product }) => {\n  console.log(product)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 808,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39812,
											"name": "productId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39813,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the option to update."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39814,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update in the option."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
													"qualifiedName": "AdminUpdateProductOption"
												},
												"name": "AdminUpdateProductOption",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39815,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39816,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductResponse"
												},
												"name": "AdminProductResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39817,
							"name": "listOptions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 873,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39818,
									"name": "listOptions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of product options. It sends a request to the \n[List Options](https://docs.medusajs.com/api/admin#products_getproductsidoptions) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of product options."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of product options:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.listOptions(\"prod_123\")\n.then(({ product_options, count, limit, offset }) => {\n  console.log(product_options)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.listOptions(\"prod_123\", {\n  limit: 10,\n  offset: 10\n})\n.then(({ product_options, count, limit, offset }) => {\n  console.log(product_options)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each product options:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.listOptions(\"prod_123\", {\n  fields: \"id,title\"\n})\n.then(({ product_options, count, limit, offset }) => {\n  console.log(product_options)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 873,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39819,
											"name": "productId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the product to retrieve its options"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39820,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/queries.ts",
													"qualifiedName": "AdminProductOptionParams"
												},
												"name": "AdminProductOptionParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39821,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductOptionListResponse"
												},
												"name": "AdminProductOptionListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39822,
							"name": "retrieveOption",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 928,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39823,
									"name": "retrieveOption",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a product's option. It sends a request to the\n[Get Option](https://docs.medusajs.com/api/admin#products_getproductsidoptionsoption_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product option's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a product option by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.retrieveOption(\n  \"prod_123\",\n  \"prodopt_123\"\n)\n.then(({ product_option }) => {\n  console.log(product_option)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.retrieveOption(\n  \"prod_123\",\n  \"prodopt_123\",\n  {\n    fields: \"id,title\"\n  }\n)\n.then(({ product_option }) => {\n  console.log(product_option)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 928,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39824,
											"name": "productId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39825,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product option's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39826,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product option."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39827,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductOptionResponse"
												},
												"name": "AdminProductOptionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39828,
							"name": "deleteOption",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 959,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39829,
									"name": "deleteOption",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a product's option. It sends a request to the \n[Delete Option](https://docs.medusajs.com/api/admin#products_deleteproductsidoptionsoption_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.deleteOption(\"prod_123\", \"prodopt_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 959,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39830,
											"name": "productId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39831,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The option's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39832,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductOptionDeleteResponse"
												},
												"name": "AdminProductOptionDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								39712
							]
						},
						{
							"title": "Properties",
							"children": [
								39715
							]
						},
						{
							"title": "Methods",
							"children": [
								39716,
								39722,
								39729,
								39734,
								39739,
								39744,
								39750,
								39754,
								39759,
								39763,
								39769,
								39775,
								39782,
								39787,
								39793,
								39798,
								39804,
								39810,
								39817,
								39822,
								39828
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 41087,
					"name": "Promotion",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 41091,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 41088,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 41089,
									"name": "Promotion",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 41090,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 41087,
										"name": "Promotion",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 41092,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 17,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 41093,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
											"line": 17,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 41094,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41095,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/queries.ts",
													"qualifiedName": "AdminGetPromotionParams"
												},
												"name": "AdminGetPromotionParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41096,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/responses.ts",
													"qualifiedName": "AdminPromotionResponse"
												},
												"name": "AdminPromotionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41097,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 31,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 41098,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
											"line": 31,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 41099,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/queries.ts",
													"qualifiedName": "AdminGetPromotionsParams"
												},
												"name": "AdminGetPromotionsParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41100,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/responses.ts",
													"qualifiedName": "AdminPromotionListResponse"
												},
												"name": "AdminPromotionListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41101,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 44,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 41102,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
											"line": 44,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 41103,
											"name": "payload",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/payloads.ts",
													"qualifiedName": "AdminCreatePromotion"
												},
												"name": "AdminCreatePromotion",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41104,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/responses.ts",
													"qualifiedName": "AdminPromotionResponse"
												},
												"name": "AdminPromotionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41105,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 58,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 41106,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
											"line": 58,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 41107,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41108,
											"name": "payload",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/payloads.ts",
													"qualifiedName": "AdminUpdatePromotion"
												},
												"name": "AdminUpdatePromotion",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41109,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/responses.ts",
													"qualifiedName": "AdminPromotionResponse"
												},
												"name": "AdminPromotionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41110,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 73,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 41111,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
											"line": 73,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 41112,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41113,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
													"qualifiedName": "DeleteResponse"
												},
												"typeArguments": [
													{
														"type": "literal",
														"value": "promotion"
													}
												],
												"name": "DeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41114,
							"name": "addRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 83,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 41115,
									"name": "addRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
											"line": 83,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 41116,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41117,
											"name": "ruleType",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41118,
											"name": "payload",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/payloads.ts",
													"qualifiedName": "BatchAddPromotionRulesReq"
												},
												"name": "BatchAddPromotionRulesReq",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41119,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/responses.ts",
													"qualifiedName": "AdminPromotionResponse"
												},
												"name": "AdminPromotionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41120,
							"name": "updateRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 99,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 41121,
									"name": "updateRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
											"line": 99,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 41122,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41123,
											"name": "ruleType",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41124,
											"name": "payload",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/payloads.ts",
													"qualifiedName": "BatchUpdatePromotionRulesReq"
												},
												"name": "BatchUpdatePromotionRulesReq",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41125,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/responses.ts",
													"qualifiedName": "AdminPromotionResponse"
												},
												"name": "AdminPromotionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41126,
							"name": "removeRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 115,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 41127,
									"name": "removeRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
											"line": 115,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 41128,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41129,
											"name": "ruleType",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41130,
											"name": "payload",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/payloads.ts",
													"qualifiedName": "BatchRemovePromotionRulesReq"
												},
												"name": "BatchRemovePromotionRulesReq",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41131,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/responses.ts",
													"qualifiedName": "AdminPromotionResponse"
												},
												"name": "AdminPromotionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41132,
							"name": "listRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 131,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 41133,
									"name": "listRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
											"line": 131,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 41134,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 41135,
											"name": "ruleType",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41136,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/queries.ts",
													"qualifiedName": "AdminGetPromotionRuleParams"
												},
												"name": "AdminGetPromotionRuleParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41137,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/responses.ts",
													"qualifiedName": "AdminRuleAttributeOptionsListResponse"
												},
												"name": "AdminRuleAttributeOptionsListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41138,
							"name": "listRuleAttributes",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 147,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 41139,
									"name": "listRuleAttributes",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
											"line": 147,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 41140,
											"name": "ruleType",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41141,
											"name": "promotionType",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41142,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/responses.ts",
													"qualifiedName": "AdminRuleAttributeOptionsListResponse"
												},
												"name": "AdminRuleAttributeOptionsListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41143,
							"name": "listRuleValues",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 162,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 41144,
									"name": "listRuleValues",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
											"line": 162,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 41145,
											"name": "ruleType",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41146,
											"name": "ruleValue",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41147,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/queries.ts",
													"qualifiedName": "AdminGetPromotionsRuleValueParams"
												},
												"name": "AdminGetPromotionsRuleValueParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41148,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/responses.ts",
													"qualifiedName": "AdminRuleValueOptionsListResponse"
												},
												"name": "AdminRuleValueOptionsListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								41088
							]
						},
						{
							"title": "Properties",
							"children": [
								41091
							]
						},
						{
							"title": "Methods",
							"children": [
								41092,
								41097,
								41101,
								41105,
								41110,
								41114,
								41120,
								41126,
								41132,
								41138,
								41143
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 40945,
					"name": "RefundReason",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 40949,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/refund-reasons.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 40946,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/refund-reasons.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 40947,
									"name": "RefundReason",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/refund-reasons.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 40948,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 40945,
										"name": "RefundReason",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 40950,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/refund-reasons.ts",
									"line": 17,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40951,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/refund-reasons.ts",
											"line": 17,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40952,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/queries.ts",
													"qualifiedName": "RefundReasonFilters"
												},
												"name": "RefundReasonFilters",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40953,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/responses.ts",
													"qualifiedName": "RefundReasonsResponse"
												},
												"name": "RefundReasonsResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								40946
							]
						},
						{
							"title": "Properties",
							"children": [
								40949
							]
						},
						{
							"title": "Methods",
							"children": [
								40950
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/refund-reasons.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 39885,
					"name": "Region",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 39889,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/region.ts",
									"line": 14,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39886,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/region.ts",
									"line": 18,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 39887,
									"name": "Region",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/region.ts",
											"line": 18,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 39888,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 39885,
										"name": "Region",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 39890,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/region.ts",
									"line": 22,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39891,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/region.ts",
											"line": 22,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39892,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/region/admin/payloads.ts",
													"qualifiedName": "AdminCreateRegion"
												},
												"name": "AdminCreateRegion",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39893,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39894,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 39895,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 39896,
															"name": "region",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/region.ts",
																	"line": 27,
																	"character": 37
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/http/region/admin/entities.ts",
																	"qualifiedName": "AdminRegion"
																},
																"name": "AdminRegion",
																"package": "@medusajs/types"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																39896
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/region.ts",
															"line": 27,
															"character": 35
														}
													]
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39897,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/region.ts",
									"line": 38,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39898,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/region.ts",
											"line": 38,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39899,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39900,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/region/admin/payloads.ts",
													"qualifiedName": "AdminUpdateRegion"
												},
												"name": "AdminUpdateRegion",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39901,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39902,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 39903,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 39904,
															"name": "region",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/region.ts",
																	"line": 44,
																	"character": 37
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/http/region/admin/entities.ts",
																	"qualifiedName": "AdminRegion"
																},
																"name": "AdminRegion",
																"package": "@medusajs/types"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																39904
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/region.ts",
															"line": 44,
															"character": 35
														}
													]
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39905,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/region.ts",
									"line": 55,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39906,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/region.ts",
											"line": 55,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39907,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
															"qualifiedName": "FindParams"
														},
														"name": "FindParams",
														"package": "@medusajs/types"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/http/region/admin/queries.ts",
															"qualifiedName": "AdminRegionFilters"
														},
														"name": "AdminRegionFilters",
														"package": "@medusajs/types"
													}
												]
											}
										},
										{
											"id": 39908,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
													"qualifiedName": "PaginatedResponse"
												},
												"typeArguments": [
													{
														"type": "reflection",
														"declaration": {
															"id": 39909,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 39910,
																	"name": "regions",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/region.ts",
																			"line": 60,
																			"character": 26
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/types/src/http/region/admin/entities.ts",
																				"qualifiedName": "AdminRegion"
																			},
																			"name": "AdminRegion",
																			"package": "@medusajs/types"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		39910
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/region.ts",
																	"line": 60,
																	"character": 24
																}
															]
														}
													}
												],
												"name": "PaginatedResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39911,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/region.ts",
									"line": 67,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39912,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/region.ts",
											"line": 67,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39913,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39914,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39915,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 39916,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 39917,
															"name": "region",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/region.ts",
																	"line": 68,
																	"character": 37
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/http/region/admin/entities.ts",
																	"qualifiedName": "AdminRegion"
																},
																"name": "AdminRegion",
																"package": "@medusajs/types"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																39917
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/region.ts",
															"line": 68,
															"character": 35
														}
													]
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39918,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/region.ts",
									"line": 77,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39919,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/region.ts",
											"line": 77,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39920,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39921,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/region/admin/responses.ts",
													"qualifiedName": "AdminRegionDeleteResponse"
												},
												"name": "AdminRegionDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								39886
							]
						},
						{
							"title": "Properties",
							"children": [
								39889
							]
						},
						{
							"title": "Methods",
							"children": [
								39890,
								39897,
								39905,
								39911,
								39918
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/region.ts",
							"line": 10,
							"character": 13
						}
					]
				},
				{
					"id": 41024,
					"name": "Reservation",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 41028,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/reservation.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 41025,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/reservation.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 41026,
									"name": "Reservation",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/reservation.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 41027,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 41024,
										"name": "Reservation",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 41029,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/reservation.ts",
									"line": 17,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 41030,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/reservation.ts",
											"line": 17,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 41031,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41032,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/queries.ts",
													"qualifiedName": "AdminReservationParams"
												},
												"name": "AdminReservationParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41033,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/responses.ts",
													"qualifiedName": "AdminReservationResponse"
												},
												"name": "AdminReservationResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41034,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/reservation.ts",
									"line": 32,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 41035,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/reservation.ts",
											"line": 32,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 41036,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/queries.ts",
													"qualifiedName": "AdminGetReservationsParams"
												},
												"name": "AdminGetReservationsParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41037,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/responses.ts",
													"qualifiedName": "AdminReservationListResponse"
												},
												"name": "AdminReservationListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41038,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/reservation.ts",
									"line": 46,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 41039,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/reservation.ts",
											"line": 46,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 41040,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/payloads.ts",
													"qualifiedName": "AdminCreateReservation"
												},
												"name": "AdminCreateReservation",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41041,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/queries.ts",
													"qualifiedName": "AdminGetReservationsParams"
												},
												"name": "AdminGetReservationsParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41042,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/responses.ts",
													"qualifiedName": "AdminReservationResponse"
												},
												"name": "AdminReservationResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41043,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/reservation.ts",
									"line": 62,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 41044,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/reservation.ts",
											"line": 62,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 41045,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41046,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/payloads.ts",
													"qualifiedName": "AdminUpdateReservation"
												},
												"name": "AdminUpdateReservation",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41047,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/queries.ts",
													"qualifiedName": "AdminGetReservationsParams"
												},
												"name": "AdminGetReservationsParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41048,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/responses.ts",
													"qualifiedName": "AdminReservationResponse"
												},
												"name": "AdminReservationResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41049,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/reservation.ts",
									"line": 79,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 41050,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/reservation.ts",
											"line": 79,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 41051,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41052,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/responses.ts",
													"qualifiedName": "AdminReservationDeleteResponse"
												},
												"name": "AdminReservationDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								41025
							]
						},
						{
							"title": "Properties",
							"children": [
								41028
							]
						},
						{
							"title": "Methods",
							"children": [
								41029,
								41034,
								41038,
								41043,
								41049
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/reservation.ts",
							"line": 5,
							"character": 6
						}
					]
				},
				{
					"id": 39922,
					"name": "ReturnReason",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 39926,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
									"line": 10,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39923,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
									"line": 14,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 39924,
									"name": "ReturnReason",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
											"line": 14,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 39925,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 39922,
										"name": "ReturnReason",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 39927,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
									"line": 18,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39928,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
											"line": 18,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39929,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/queries.ts",
													"qualifiedName": "AdminReturnReasonListParams"
												},
												"name": "AdminReturnReasonListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39930,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/responses.ts",
													"qualifiedName": "AdminReturnReasonListResponse"
												},
												"name": "AdminReturnReasonListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39931,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
									"line": 31,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39932,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
											"line": 31,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39933,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39934,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/queries.ts",
													"qualifiedName": "AdminReturnReasonParams"
												},
												"name": "AdminReturnReasonParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39935,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/responses.ts",
													"qualifiedName": "AdminReturnReasonResponse"
												},
												"name": "AdminReturnReasonResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39936,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
									"line": 45,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39937,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
											"line": 45,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39938,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/payloads.ts",
													"qualifiedName": "AdminCreateReturnReason"
												},
												"name": "AdminCreateReturnReason",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39939,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/queries.ts",
													"qualifiedName": "AdminReturnReasonParams"
												},
												"name": "AdminReturnReasonParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39940,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/responses.ts",
													"qualifiedName": "AdminReturnReasonResponse"
												},
												"name": "AdminReturnReasonResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39941,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
									"line": 61,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39942,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
											"line": 61,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39943,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39944,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/payloads.ts",
													"qualifiedName": "AdminUpdateReturnReason"
												},
												"name": "AdminUpdateReturnReason",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39945,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/queries.ts",
													"qualifiedName": "AdminReturnReasonParams"
												},
												"name": "AdminReturnReasonParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39946,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/responses.ts",
													"qualifiedName": "AdminReturnReasonResponse"
												},
												"name": "AdminReturnReasonResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39947,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
									"line": 78,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39948,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
											"line": 78,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39949,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39950,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/queries.ts",
													"qualifiedName": "AdminReturnReasonParams"
												},
												"name": "AdminReturnReasonParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39951,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/responses.ts",
													"qualifiedName": "AdminReturnReasonDeleteResponse"
												},
												"name": "AdminReturnReasonDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								39923
							]
						},
						{
							"title": "Properties",
							"children": [
								39926
							]
						},
						{
							"title": "Methods",
							"children": [
								39927,
								39931,
								39936,
								39941,
								39947
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
							"line": 6,
							"character": 13
						}
					]
				},
				{
					"id": 40388,
					"name": "Return",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 40392,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 10,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 40389,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 14,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 40390,
									"name": "Return",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 14,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 40391,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 40388,
										"name": "Return",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 40393,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 18,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40394,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 18,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40395,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/queries.ts",
													"qualifiedName": "AdminReturnFilters"
												},
												"name": "AdminReturnFilters",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40396,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnsResponse"
												},
												"name": "AdminReturnsResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40397,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 28,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40398,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 28,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40399,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40400,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40401,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40402,
							"name": "initiateRequest",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 38,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40403,
									"name": "initiateRequest",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 38,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40404,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminInitiateReturnRequest"
												},
												"name": "AdminInitiateReturnRequest",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40405,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40406,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40407,
							"name": "cancel",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 54,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40408,
									"name": "cancel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 54,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40409,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40410,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40411,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40412,
							"name": "cancelRequest",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 69,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40413,
									"name": "cancelRequest",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 69,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40414,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40415,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40416,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40417,
							"name": "addReturnItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 84,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40418,
									"name": "addReturnItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 84,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40419,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40420,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminAddReturnItems"
												},
												"name": "AdminAddReturnItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40421,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40422,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40423,
							"name": "updateReturnItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 101,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40424,
									"name": "updateReturnItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 101,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40425,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40426,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40427,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminUpdateReturnItems"
												},
												"name": "AdminUpdateReturnItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40428,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40429,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40430,
							"name": "removeReturnItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 119,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40431,
									"name": "removeReturnItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 119,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40432,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40433,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40434,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40435,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40436,
							"name": "addReturnShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 135,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40437,
									"name": "addReturnShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 135,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40438,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40439,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminAddReturnShipping"
												},
												"name": "AdminAddReturnShipping",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40440,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40441,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40442,
							"name": "updateReturnShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 152,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40443,
									"name": "updateReturnShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 152,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40444,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40445,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40446,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminAddReturnShipping"
												},
												"name": "AdminAddReturnShipping",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40447,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40448,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40449,
							"name": "deleteReturnShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 170,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40450,
									"name": "deleteReturnShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 170,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40451,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40452,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40453,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40454,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40455,
							"name": "updateRequest",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 186,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40456,
									"name": "updateRequest",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 186,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40457,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40458,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminUpdateReturnRequest"
												},
												"name": "AdminUpdateReturnRequest",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40459,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40460,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40461,
							"name": "confirmRequest",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 203,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40462,
									"name": "confirmRequest",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 203,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40463,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40464,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminConfirmReturnRequest"
												},
												"name": "AdminConfirmReturnRequest",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40465,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40466,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40467,
							"name": "initiateReceive",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 220,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40468,
									"name": "initiateReceive",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 220,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40469,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40470,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminInitiateReceiveReturn"
												},
												"name": "AdminInitiateReceiveReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40471,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40472,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40473,
							"name": "receiveItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 237,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40474,
									"name": "receiveItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 237,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40475,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40476,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminReceiveItems"
												},
												"name": "AdminReceiveItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40477,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40478,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40479,
							"name": "updateReceiveItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 254,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40480,
									"name": "updateReceiveItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 254,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40481,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40482,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40483,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminUpdateReceiveItems"
												},
												"name": "AdminUpdateReceiveItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40484,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40485,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40486,
							"name": "removeReceiveItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 272,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40487,
									"name": "removeReceiveItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 272,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40488,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40489,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40490,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40491,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40492,
							"name": "dismissItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 288,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40493,
									"name": "dismissItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 288,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40494,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40495,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminDismissItems"
												},
												"name": "AdminDismissItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40496,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40497,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40498,
							"name": "updateDismissItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 305,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40499,
									"name": "updateDismissItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 305,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40500,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40501,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40502,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminUpdateDismissItems"
												},
												"name": "AdminUpdateDismissItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40503,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40504,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40505,
							"name": "removeDismissItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 323,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40506,
									"name": "removeDismissItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 323,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40507,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40508,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40509,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40510,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40511,
							"name": "confirmReceive",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 339,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40512,
									"name": "confirmReceive",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 339,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40513,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40514,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminConfirmReceiveReturn"
												},
												"name": "AdminConfirmReceiveReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40515,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40516,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40517,
							"name": "cancelReceive",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 356,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40518,
									"name": "cancelReceive",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 356,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40519,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40520,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40521,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								40389
							]
						},
						{
							"title": "Properties",
							"children": [
								40392
							]
						},
						{
							"title": "Methods",
							"children": [
								40393,
								40397,
								40402,
								40407,
								40412,
								40417,
								40423,
								40430,
								40436,
								40442,
								40449,
								40455,
								40461,
								40467,
								40473,
								40479,
								40486,
								40492,
								40498,
								40505,
								40511,
								40517
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
							"line": 6,
							"character": 13
						}
					]
				},
				{
					"id": 39996,
					"name": "SalesChannel",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 40000,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39997,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 39998,
									"name": "SalesChannel",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 39999,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 39996,
										"name": "SalesChannel",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 40001,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
									"line": 17,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40002,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
											"line": 17,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40003,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/payloads.ts",
													"qualifiedName": "AdminCreateSalesChannel"
												},
												"name": "AdminCreateSalesChannel",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40004,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40005,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/responses.ts",
													"qualifiedName": "AdminSalesChannelResponse"
												},
												"name": "AdminSalesChannelResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40006,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
									"line": 33,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40007,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
											"line": 33,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40008,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40009,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/payloads.ts",
													"qualifiedName": "AdminUpdateSalesChannel"
												},
												"name": "AdminUpdateSalesChannel",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40010,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40011,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/responses.ts",
													"qualifiedName": "AdminSalesChannelResponse"
												},
												"name": "AdminSalesChannelResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40012,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
									"line": 50,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40013,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
											"line": 50,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40014,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40015,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/responses.ts",
													"qualifiedName": "AdminSalesChannelDeleteResponse"
												},
												"name": "AdminSalesChannelDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40016,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
									"line": 60,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40017,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
											"line": 60,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40018,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40019,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40020,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/responses.ts",
													"qualifiedName": "AdminSalesChannelResponse"
												},
												"name": "AdminSalesChannelResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40021,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
									"line": 75,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40022,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
											"line": 75,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40023,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/queries.ts",
													"qualifiedName": "AdminSalesChannelListParams"
												},
												"name": "AdminSalesChannelListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40024,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/responses.ts",
													"qualifiedName": "AdminSalesChannelListResponse"
												},
												"name": "AdminSalesChannelListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40025,
							"name": "updateProducts",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
									"line": 89,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40026,
									"name": "updateProducts",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
											"line": 89,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40027,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40028,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/payloads.ts",
													"qualifiedName": "AdminUpdateSalesChannelProducts"
												},
												"name": "AdminUpdateSalesChannelProducts",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40029,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/responses.ts",
													"qualifiedName": "AdminSalesChannelResponse"
												},
												"name": "AdminSalesChannelResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40030,
							"name": "batchProducts",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
									"line": 104,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40031,
									"name": "batchProducts",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
											"line": 104,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40032,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40033,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "AdminBatchLink"
												},
												"name": "AdminBatchLink",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40034,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/responses.ts",
													"qualifiedName": "AdminSalesChannelResponse"
												},
												"name": "AdminSalesChannelResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								39997
							]
						},
						{
							"title": "Properties",
							"children": [
								40000
							]
						},
						{
							"title": "Methods",
							"children": [
								40001,
								40006,
								40012,
								40016,
								40021,
								40025,
								40030
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 40102,
					"name": "ShippingOption",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 40106,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 40103,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 40104,
									"name": "ShippingOption",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 40105,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 40102,
										"name": "ShippingOption",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 40107,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
									"line": 17,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40108,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
											"line": 17,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40109,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
													"qualifiedName": "AdminCreateShippingOption"
												},
												"name": "AdminCreateShippingOption",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40110,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40111,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
													"qualifiedName": "AdminShippingOptionResponse"
												},
												"name": "AdminShippingOptionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40112,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
									"line": 33,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40113,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
											"line": 33,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40114,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40115,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40116,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
													"qualifiedName": "AdminShippingOptionResponse"
												},
												"name": "AdminShippingOptionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40117,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
									"line": 48,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40118,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
											"line": 48,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40119,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40120,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
													"qualifiedName": "AdminUpdateShippingOption"
												},
												"name": "AdminUpdateShippingOption",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40121,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40122,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
													"qualifiedName": "AdminShippingOptionResponse"
												},
												"name": "AdminShippingOptionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40123,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
									"line": 65,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40124,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
											"line": 65,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40125,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40126,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
													"qualifiedName": "AdminShippingOptionDeleteResponse"
												},
												"name": "AdminShippingOptionDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40127,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
									"line": 75,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40128,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
											"line": 75,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40129,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
													"qualifiedName": "AdminShippingOptionListParams"
												},
												"name": "AdminShippingOptionListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40130,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
													"qualifiedName": "AdminShippingOptionListResponse"
												},
												"name": "AdminShippingOptionListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40131,
							"name": "updateRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
									"line": 89,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40132,
									"name": "updateRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
											"line": 89,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40133,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40134,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
													"qualifiedName": "AdminUpdateShippingOptionRules"
												},
												"name": "AdminUpdateShippingOptionRules",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40135,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
													"qualifiedName": "AdminUpdateShippingOptionRulesResponse"
												},
												"name": "AdminUpdateShippingOptionRulesResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								40103
							]
						},
						{
							"title": "Properties",
							"children": [
								40106
							]
						},
						{
							"title": "Methods",
							"children": [
								40107,
								40112,
								40117,
								40123,
								40127,
								40131
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 40136,
					"name": "ShippingProfile",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 40140,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 40137,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 40138,
									"name": "ShippingProfile",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 40139,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 40136,
										"name": "ShippingProfile",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 40141,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
									"line": 17,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40142,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
											"line": 17,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40143,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
													"qualifiedName": "AdminCreateShippingProfile"
												},
												"name": "AdminCreateShippingProfile",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40144,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40145,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
													"qualifiedName": "AdminShippingProfileResponse"
												},
												"name": "AdminShippingProfileResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40146,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
									"line": 33,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40147,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
											"line": 33,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40148,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40149,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
													"qualifiedName": "AdminUpdateShippingProfile"
												},
												"name": "AdminUpdateShippingProfile",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40150,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40151,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
													"qualifiedName": "AdminShippingProfileResponse"
												},
												"name": "AdminShippingProfileResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40152,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
									"line": 50,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40153,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
											"line": 50,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40154,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40155,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
													"qualifiedName": "AdminShippingProfileDeleteResponse"
												},
												"name": "AdminShippingProfileDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40156,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
									"line": 60,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40157,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
											"line": 60,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40158,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
													"qualifiedName": "AdminShippingProfileListParams"
												},
												"name": "AdminShippingProfileListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40159,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
													"qualifiedName": "AdminShippingProfileListResponse"
												},
												"name": "AdminShippingProfileListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40160,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
									"line": 74,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40161,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
											"line": 74,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40162,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40163,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40164,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
													"qualifiedName": "AdminShippingProfileResponse"
												},
												"name": "AdminShippingProfileResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								40137
							]
						},
						{
							"title": "Properties",
							"children": [
								40140
							]
						},
						{
							"title": "Methods",
							"children": [
								40141,
								40146,
								40152,
								40156,
								40160
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 39952,
					"name": "StockLocation",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 39956,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39953,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 39954,
									"name": "StockLocation",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 39955,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 39952,
										"name": "StockLocation",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 39957,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
									"line": 17,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39958,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
											"line": 17,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39959,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
													"qualifiedName": "AdminCreateStockLocation"
												},
												"name": "AdminCreateStockLocation",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39960,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39961,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
													"qualifiedName": "AdminStockLocationResponse"
												},
												"name": "AdminStockLocationResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39962,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
									"line": 33,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39963,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
											"line": 33,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39964,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39965,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
													"qualifiedName": "AdminUpdateStockLocation"
												},
												"name": "AdminUpdateStockLocation",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39966,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39967,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
													"qualifiedName": "AdminStockLocationResponse"
												},
												"name": "AdminStockLocationResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39968,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
									"line": 50,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39969,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
											"line": 50,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39970,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39971,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
													"qualifiedName": "AdminStockLocationDeleteResponse"
												},
												"name": "AdminStockLocationDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39972,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
									"line": 60,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39973,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
											"line": 60,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39974,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39975,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39976,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
													"qualifiedName": "AdminStockLocationResponse"
												},
												"name": "AdminStockLocationResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39977,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
									"line": 71,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39978,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
											"line": 71,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39979,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
													"qualifiedName": "AdminStockLocationListParams"
												},
												"name": "AdminStockLocationListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39980,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
													"qualifiedName": "AdminStockLocationListResponse"
												},
												"name": "AdminStockLocationListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39981,
							"name": "updateSalesChannels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
									"line": 85,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39982,
									"name": "updateSalesChannels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
											"line": 85,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39983,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39984,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
													"qualifiedName": "AdminUpdateStockLocationSalesChannels"
												},
												"name": "AdminUpdateStockLocationSalesChannels",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39985,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
													"qualifiedName": "AdminStockLocationResponse"
												},
												"name": "AdminStockLocationResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39986,
							"name": "createFulfillmentSet",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
									"line": 100,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39987,
									"name": "createFulfillmentSet",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
											"line": 100,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39988,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39989,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
													"qualifiedName": "AdminCreateStockLocationFulfillmentSet"
												},
												"name": "AdminCreateStockLocationFulfillmentSet",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39990,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
													"qualifiedName": "AdminStockLocationResponse"
												},
												"name": "AdminStockLocationResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39991,
							"name": "updateFulfillmentProviders",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
									"line": 115,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39992,
									"name": "updateFulfillmentProviders",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
											"line": 115,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39993,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39994,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "AdminBatchLink"
												},
												"name": "AdminBatchLink",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39995,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
													"qualifiedName": "AdminStockLocationResponse"
												},
												"name": "AdminStockLocationResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								39953
							]
						},
						{
							"title": "Properties",
							"children": [
								39956
							]
						},
						{
							"title": "Methods",
							"children": [
								39957,
								39962,
								39968,
								39972,
								39977,
								39981,
								39986,
								39991
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 40815,
					"name": "Store",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 40819,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/store.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 40816,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/store.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 40817,
									"name": "Store",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/store.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 40818,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 40815,
										"name": "Store",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 40820,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/store.ts",
									"line": 17,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40821,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/store.ts",
											"line": 17,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40822,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40823,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/store/admin/queries.ts",
													"qualifiedName": "AdminStoreParams"
												},
												"name": "AdminStoreParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40824,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/store/admin/responses.ts",
													"qualifiedName": "AdminStoreResponse"
												},
												"name": "AdminStoreResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40825,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/store.ts",
									"line": 32,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40826,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/store.ts",
											"line": 32,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40827,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/store/admin/queries.ts",
													"qualifiedName": "AdminStoreListParams"
												},
												"name": "AdminStoreListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40828,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/store/admin/responses.ts",
													"qualifiedName": "AdminStoreListResponse"
												},
												"name": "AdminStoreListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40829,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/store.ts",
									"line": 43,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40830,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/store.ts",
											"line": 43,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40831,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40832,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/store/admin/payloads.ts",
													"qualifiedName": "AdminUpdateStore"
												},
												"name": "AdminUpdateStore",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40833,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40834,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/store/admin/responses.ts",
													"qualifiedName": "AdminStoreResponse"
												},
												"name": "AdminStoreResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								40816
							]
						},
						{
							"title": "Properties",
							"children": [
								40819
							]
						},
						{
							"title": "Methods",
							"children": [
								40820,
								40825,
								40829
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/store.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 40763,
					"name": "TaxRate",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 40767,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
									"line": 11,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 40764,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
									"line": 15,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 40765,
									"name": "TaxRate",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
											"line": 15,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 40766,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 40763,
										"name": "TaxRate",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 40768,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
									"line": 19,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40769,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
											"line": 19,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40770,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
													"qualifiedName": "AdminCreateTaxRate"
												},
												"name": "AdminCreateTaxRate",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40771,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40772,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
													"qualifiedName": "AdminTaxRateResponse"
												},
												"name": "AdminTaxRateResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40773,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
									"line": 32,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40774,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
											"line": 32,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40775,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40776,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
													"qualifiedName": "AdminUpdateTaxRate"
												},
												"name": "AdminUpdateTaxRate",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40777,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40778,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
													"qualifiedName": "AdminTaxRateResponse"
												},
												"name": "AdminTaxRateResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40779,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
									"line": 49,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40780,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
											"line": 49,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40781,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40782,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
													"qualifiedName": "AdminTaxRateDeleteResponse"
												},
												"name": "AdminTaxRateDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40783,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
									"line": 59,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40784,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
											"line": 59,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40785,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40786,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40787,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
													"qualifiedName": "AdminTaxRateResponse"
												},
												"name": "AdminTaxRateResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40788,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
									"line": 74,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40789,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
											"line": 74,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40790,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
													"qualifiedName": "AdminTaxRateListParams"
												},
												"name": "AdminTaxRateListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40791,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
													"qualifiedName": "AdminTaxRateListResponse"
												},
												"name": "AdminTaxRateListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								40764
							]
						},
						{
							"title": "Properties",
							"children": [
								40767
							]
						},
						{
							"title": "Methods",
							"children": [
								40768,
								40773,
								40779,
								40783,
								40788
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
							"line": 7,
							"character": 13
						}
					]
				},
				{
					"id": 40792,
					"name": "TaxRegion",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 40796,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
									"line": 12,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 40793,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
									"line": 16,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 40794,
									"name": "TaxRegion",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
											"line": 16,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 40795,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 40792,
										"name": "TaxRegion",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 40797,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
									"line": 20,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40798,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
											"line": 20,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40799,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
													"qualifiedName": "AdminCreateTaxRegion"
												},
												"name": "AdminCreateTaxRegion",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40800,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40801,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
													"qualifiedName": "AdminTaxRegionResponse"
												},
												"name": "AdminTaxRegionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40802,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
									"line": 36,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40803,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
											"line": 36,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40804,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40805,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
													"qualifiedName": "AdminTaxRegionDeleteResponse"
												},
												"name": "AdminTaxRegionDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40806,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
									"line": 46,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40807,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
											"line": 46,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40808,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40809,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40810,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
													"qualifiedName": "AdminTaxRegionResponse"
												},
												"name": "AdminTaxRegionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40811,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
									"line": 61,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40812,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
											"line": 61,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40813,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
													"qualifiedName": "AdminTaxRegionListParams"
												},
												"name": "AdminTaxRegionListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40814,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
													"qualifiedName": "AdminTaxRegionListResponse"
												},
												"name": "AdminTaxRegionListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								40793
							]
						},
						{
							"title": "Properties",
							"children": [
								40796
							]
						},
						{
							"title": "Methods",
							"children": [
								40797,
								40802,
								40806,
								40811
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
							"line": 8,
							"character": 13
						}
					]
				},
				{
					"id": 39862,
					"name": "Upload",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 39866,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/upload.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 39863,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/upload.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 39864,
									"name": "Upload",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/upload.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 39865,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 39862,
										"name": "Upload",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 39867,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/upload.ts",
									"line": 18,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39868,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/upload.ts",
											"line": 18,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39869,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
													"qualifiedName": "BaseUploadFile"
												},
												"name": "BaseUploadFile",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39870,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39871,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 39872,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 39873,
															"name": "files",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/upload.ts",
																	"line": 42,
																	"character": 31
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/http/file/admin/entities.ts",
																		"qualifiedName": "AdminFile"
																	},
																	"name": "AdminFile",
																	"package": "@medusajs/types"
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																39873
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/upload.ts",
															"line": 42,
															"character": 29
														}
													]
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39874,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/upload.ts",
									"line": 57,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39875,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/upload.ts",
											"line": 57,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39876,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39877,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39878,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 39879,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 39880,
															"name": "file",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/upload.ts",
																	"line": 58,
																	"character": 31
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/http/file/admin/entities.ts",
																	"qualifiedName": "AdminFile"
																},
																"name": "AdminFile",
																"package": "@medusajs/types"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																39880
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/upload.ts",
															"line": 58,
															"character": 29
														}
													]
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39881,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/upload.ts",
									"line": 67,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 39882,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/upload.ts",
											"line": 67,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 39883,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39884,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/file/admin/responses.ts",
													"qualifiedName": "AdminFileDeleteResponse"
												},
												"name": "AdminFileDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								39863
							]
						},
						{
							"title": "Properties",
							"children": [
								39866
							]
						},
						{
							"title": "Methods",
							"children": [
								39867,
								39874,
								39881
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/upload.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 40864,
					"name": "User",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 40868,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/user.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 40865,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/user.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 40866,
									"name": "User",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/user.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 40867,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 40864,
										"name": "User",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 40869,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/user.ts",
									"line": 17,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40870,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/user.ts",
											"line": 17,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40871,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40872,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/user/admin/payloads.ts",
													"qualifiedName": "AdminUpdateUser"
												},
												"name": "AdminUpdateUser",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40873,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/user/admin/queries.ts",
													"qualifiedName": "AdminUserParams"
												},
												"name": "AdminUserParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40874,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/user/admin/responses.ts",
													"qualifiedName": "AdminUserResponse"
												},
												"name": "AdminUserResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40875,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/user.ts",
									"line": 34,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40876,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/user.ts",
											"line": 34,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40877,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/user/admin/queries.ts",
													"qualifiedName": "AdminUserListParams"
												},
												"name": "AdminUserListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40878,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/user/admin/responses.ts",
													"qualifiedName": "AdminUserListResponse"
												},
												"name": "AdminUserListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40879,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/user.ts",
									"line": 44,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40880,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/user.ts",
											"line": 44,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40881,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40882,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/user/admin/queries.ts",
													"qualifiedName": "AdminUserParams"
												},
												"name": "AdminUserParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40883,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/user/admin/responses.ts",
													"qualifiedName": "AdminUserResponse"
												},
												"name": "AdminUserResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40884,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/user.ts",
									"line": 58,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40885,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/user.ts",
											"line": 58,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40886,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40887,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/user/admin/responses.ts",
													"qualifiedName": "AdminUserDeleteResponse"
												},
												"name": "AdminUserDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40888,
							"name": "me",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/user.ts",
									"line": 68,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 40889,
									"name": "me",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/user.ts",
											"line": 68,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 40890,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/user/admin/queries.ts",
													"qualifiedName": "AdminUserParams"
												},
												"name": "AdminUserParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40891,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/user/admin/responses.ts",
													"qualifiedName": "AdminUserResponse"
												},
												"name": "AdminUserResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								40865
							]
						},
						{
							"title": "Properties",
							"children": [
								40868
							]
						},
						{
							"title": "Methods",
							"children": [
								40869,
								40875,
								40879,
								40884,
								40888
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/user.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 41011,
					"name": "WorkflowExecution",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 41015,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/workflow-execution.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41181,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 41012,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/workflow-execution.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 41013,
									"name": "WorkflowExecution",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/workflow-execution.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 41014,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 41011,
										"name": "WorkflowExecution",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 41016,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/workflow-execution.ts",
									"line": 17,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 41017,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/workflow-execution.ts",
											"line": 17,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 41018,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/queries.ts",
													"qualifiedName": "AdminGetWorkflowExecutionsParams"
												},
												"name": "AdminGetWorkflowExecutionsParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41019,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/responses.ts",
													"qualifiedName": "AdminWorkflowExecutionListResponse"
												},
												"name": "AdminWorkflowExecutionListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41020,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/workflow-execution.ts",
									"line": 30,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 41021,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/workflow-execution.ts",
											"line": 30,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 41022,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41023,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/responses.ts",
													"qualifiedName": "AdminWorkflowExecutionResponse"
												},
												"name": "AdminWorkflowExecutionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								41012
							]
						},
						{
							"title": "Properties",
							"children": [
								41015
							]
						},
						{
							"title": "Methods",
							"children": [
								41016,
								41020
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/workflow-execution.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 41181,
					"name": "Client",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 41185,
							"name": "fetch_",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 108,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"target": 41254,
								"name": "ClientFetch",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 41186,
							"name": "config",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 109,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41239,
								"name": "Config",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 41187,
							"name": "logger",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 110,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 41259,
								"name": "Logger",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 41188,
							"name": "DEFAULT_JWT_STORAGE_KEY",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 112,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"medusa_auth_token\""
						},
						{
							"id": 41189,
							"name": "token",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 113,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 41182,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 115,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 41183,
									"name": "Client",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
											"line": 115,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 41184,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41239,
												"name": "Config",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 41181,
										"name": "Client",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 41190,
							"name": "fetch",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 144,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 41191,
									"name": "fetch",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "code",
												"text": "`fetch`"
											},
											{
												"kind": "text",
												"text": " closely follows (and uses under the hood) the native "
											},
											{
												"kind": "code",
												"text": "`fetch`"
											},
											{
												"kind": "text",
												"text": " API. There are, however, few key differences:\n- Non 2xx statuses throw a "
											},
											{
												"kind": "code",
												"text": "`FetchError`"
											},
											{
												"kind": "text",
												"text": " with the status code as the "
											},
											{
												"kind": "code",
												"text": "`status`"
											},
											{
												"kind": "text",
												"text": " property, rather than resolving the promise\n- You can pass "
											},
											{
												"kind": "code",
												"text": "`body`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`query`"
											},
											{
												"kind": "text",
												"text": " as objects, and they will be encoded and stringified.\n- The response gets parsed as JSON if the "
											},
											{
												"kind": "code",
												"text": "`accept`"
											},
											{
												"kind": "text",
												"text": " header is set to "
											},
											{
												"kind": "code",
												"text": "`application/json`"
											},
											{
												"kind": "text",
												"text": ", otherwise the raw Response object is returned\n\nSince the response is dynamically determined, we cannot know if it is JSON or not. Therefore, it is important to pass "
											},
											{
												"kind": "code",
												"text": "`Response`"
											},
											{
												"kind": "text",
												"text": " as the return type"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Promise<T>"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
											"line": 144,
											"character": 2
										}
									],
									"typeParameters": [
										{
											"id": 41192,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"parameters": [
										{
											"id": 41193,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "URL"
														},
														"name": "URL",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "Request"
														},
														"name": "Request",
														"package": "typescript"
													}
												]
											}
										},
										{
											"id": 41194,
											"name": "init",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41277,
												"name": "FetchArgs",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 41192,
												"name": "T",
												"package": "@medusajs/js-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41195,
							"name": "fetchStream",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 158,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 41196,
									"name": "fetchStream",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "code",
												"text": "`fetchStream`"
											},
											{
												"kind": "text",
												"text": " is a helper method to deal with server-sent events. It returns an object with a stream and an abort function.\nIt follows a very similar interface to "
											},
											{
												"kind": "code",
												"text": "`fetch`"
											},
											{
												"kind": "text",
												"text": ", with the return value being an async generator.\nThe stream is an async generator that yields "
											},
											{
												"kind": "code",
												"text": "`ServerSentEventMessage`"
											},
											{
												"kind": "text",
												"text": " objects, which contains the event name, stringified data, and few other properties.\nThe caller is responsible for handling "
											},
											{
												"kind": "code",
												"text": "`disconnect`"
											},
											{
												"kind": "text",
												"text": " events and aborting the stream. The caller is also responsible for parsing the data field."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "FetchStreamResponse"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
											"line": 158,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 41197,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "URL"
														},
														"name": "URL",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "Request"
														},
														"name": "Request",
														"package": "typescript"
													}
												]
											}
										},
										{
											"id": 41198,
											"name": "init",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41277,
												"name": "FetchArgs",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 41282,
												"name": "FetchStreamResponse",
												"package": "@medusajs/js-sdk"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41199,
							"name": "setToken",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 178,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 41200,
									"name": "setToken",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
											"line": 178,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 41201,
											"name": "token",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41202,
							"name": "clearToken",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 182,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 41203,
									"name": "clearToken",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
											"line": 182,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41204,
							"name": "clearToken_",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 186,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 41205,
									"name": "clearToken_",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
											"line": 186,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41206,
							"name": "initClient",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 208,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 41207,
									"name": "initClient",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
											"line": 208,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"target": 41254,
										"name": "ClientFetch",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 41208,
							"name": "getApiKeyHeader_",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 271,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 41209,
									"name": "getApiKeyHeader_",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
											"line": 271,
											"character": 31
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 41210,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 41211,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 41212,
															"name": "Authorization",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
																	"line": 271,
																	"character": 37
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																41212
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
															"line": 271,
															"character": 35
														}
													]
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 41213,
							"name": "getPublishableKeyHeader_",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 277,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 41214,
									"name": "getPublishableKeyHeader_",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
											"line": 277,
											"character": 39
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 41215,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 41216,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 41217,
															"name": "x-publishable-api-key",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
																	"line": 278,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																41217
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
															"line": 278,
															"character": 6
														}
													]
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 41218,
							"name": "getJwtHeader_",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 285,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 41219,
									"name": "getJwtHeader_",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
											"line": 285,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 41220,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 41221,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 41222,
																	"name": "Authorization",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
																			"line": 285,
																			"character": 45
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		41222
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
																	"line": 285,
																	"character": 43
																}
															]
														}
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41223,
							"name": "setToken_",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 295,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 41224,
									"name": "setToken_",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
											"line": 295,
											"character": 18
										}
									],
									"parameters": [
										{
											"id": 41225,
											"name": "token",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41226,
							"name": "getToken_",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 317,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 41227,
									"name": "getToken_",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
											"line": 317,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41228,
							"name": "getTokenStorageInfo_",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 337,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 41229,
									"name": "getTokenStorageInfo_",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
											"line": 337,
											"character": 35
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 41230,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 41231,
													"name": "storageMethod",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
															"line": 359,
															"character": 6
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "session"
															},
															{
																"type": "literal",
																"value": "local"
															},
															{
																"type": "literal",
																"value": "memory"
															},
															{
																"type": "literal",
																"value": "custom"
															},
															{
																"type": "literal",
																"value": "nostore"
															}
														]
													}
												},
												{
													"id": 41232,
													"name": "storageKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
															"line": 360,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														41231,
														41232
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
													"line": 358,
													"character": 11
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 41233,
							"name": "throwError_",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 364,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 41234,
									"name": "throwError_",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
											"line": 364,
											"character": 12
										}
									],
									"parameters": [
										{
											"id": 41235,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								41182
							]
						},
						{
							"title": "Properties",
							"children": [
								41185,
								41186,
								41187,
								41188,
								41189
							]
						},
						{
							"title": "Methods",
							"children": [
								41190,
								41195,
								41199,
								41202,
								41204,
								41206,
								41208,
								41213,
								41218,
								41223,
								41226,
								41228,
								41233
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
							"line": 107,
							"character": 13
						}
					]
				},
				{
					"id": 41259,
					"name": "Logger",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
							"line": 1,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 41260,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 41261,
									"name": "error",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
											"line": 2,
											"character": 2
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 41262,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
													"line": 2,
													"character": 9
												}
											],
											"signatures": [
												{
													"id": 41263,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 41264,
															"name": "messages",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 41265,
									"name": "warn",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
											"line": 3,
											"character": 2
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 41266,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
													"line": 3,
													"character": 8
												}
											],
											"signatures": [
												{
													"id": 41267,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 41268,
															"name": "messages",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 41269,
									"name": "info",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
											"line": 4,
											"character": 2
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 41270,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
													"line": 4,
													"character": 8
												}
											],
											"signatures": [
												{
													"id": 41271,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 41272,
															"name": "messages",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 41273,
									"name": "debug",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
											"line": 5,
											"character": 2
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 41274,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
													"line": 5,
													"character": 9
												}
											],
											"signatures": [
												{
													"id": 41275,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 41276,
															"name": "messages",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										41261,
										41265,
										41269,
										41273
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
									"line": 1,
									"character": 21
								}
							]
						}
					}
				},
				{
					"id": 41239,
					"name": "Config",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
							"line": 8,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 41240,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 41241,
									"name": "baseUrl",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
											"line": 9,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41242,
									"name": "globalHeaders",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
											"line": 10,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"target": 41236,
										"name": "ClientHeaders",
										"package": "@medusajs/js-sdk"
									}
								},
								{
									"id": 41243,
									"name": "publishableKey",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
											"line": 11,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41244,
									"name": "apiKey",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
											"line": 12,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41245,
									"name": "auth",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
											"line": 13,
											"character": 2
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 41246,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 41247,
													"name": "type",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
															"line": 14,
															"character": 4
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "jwt"
															},
															{
																"type": "literal",
																"value": "session"
															}
														]
													}
												},
												{
													"id": 41248,
													"name": "jwtTokenStorageKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
															"line": 15,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 41249,
													"name": "jwtTokenStorageMethod",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
															"line": 16,
															"character": 4
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "local"
															},
															{
																"type": "literal",
																"value": "session"
															},
															{
																"type": "literal",
																"value": "memory"
															},
															{
																"type": "literal",
																"value": "custom"
															},
															{
																"type": "literal",
																"value": "nostore"
															}
														]
													}
												},
												{
													"id": 41250,
													"name": "fetchCredentials",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
															"line": 17,
															"character": 4
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "include"
															},
															{
																"type": "literal",
																"value": "omit"
															},
															{
																"type": "literal",
																"value": "same-origin"
															}
														]
													}
												},
												{
													"id": 41251,
													"name": "storage",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
															"line": 18,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": 41287,
														"name": "CustomStorage",
														"package": "@medusajs/js-sdk"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														41247,
														41248,
														41249,
														41250,
														41251
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
													"line": 13,
													"character": 9
												}
											]
										}
									}
								},
								{
									"id": 41252,
									"name": "logger",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
											"line": 20,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"target": 41259,
										"name": "Logger",
										"package": "@medusajs/js-sdk"
									}
								},
								{
									"id": 41253,
									"name": "debug",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
											"line": 21,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										41241,
										41242,
										41243,
										41244,
										41245,
										41252,
										41253
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
									"line": 8,
									"character": 21
								}
							]
						}
					}
				},
				{
					"id": 41305,
					"name": "Awaitable",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
							"line": 24,
							"character": 12
						}
					],
					"typeParameters": [
						{
							"id": 41306,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 41306,
								"name": "T",
								"package": "@medusajs/js-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 41306,
										"name": "T",
										"package": "@medusajs/js-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 41287,
					"name": "CustomStorage",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 41288,
							"name": "getItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
									"line": 27,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 41289,
									"name": "getItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
											"line": 27,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 41290,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 41305,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										],
										"name": "Awaitable",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 41291,
							"name": "setItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
									"line": 28,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 41292,
									"name": "setItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
											"line": 28,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 41293,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41294,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 41305,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Awaitable",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 41295,
							"name": "removeItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
									"line": 29,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 41296,
									"name": "removeItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
											"line": 29,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 41297,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 41305,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Awaitable",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								41288,
								41291,
								41295
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
							"line": 26,
							"character": 17
						}
					]
				},
				{
					"id": 41307,
					"name": "FetchParams",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
							"line": 32,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Parameters"
						},
						"typeArguments": [
							{
								"type": "query",
								"queryType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
										"qualifiedName": "fetch"
									},
									"name": "fetch",
									"package": "typescript",
									"preferValues": true
								}
							}
						],
						"name": "Parameters",
						"package": "typescript"
					}
				},
				{
					"id": 41236,
					"name": "ClientHeaders",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
							"line": 34,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 41237,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 41238,
													"name": "tags",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Tags to cache data under for Next.js applications.\n\nLearn more in [Next.js's documentation](https://nextjs.org/docs/app/building-your-application/caching#fetch-optionsnexttags-and-revalidatetag)."
															}
														]
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
															"line": 44,
															"character": 6
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														41238
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
													"line": 38,
													"character": 4
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 41298,
					"name": "FetchInput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
							"line": 48,
							"character": 12
						}
					],
					"type": {
						"type": "indexedAccess",
						"indexType": {
							"type": "literal",
							"value": 0
						},
						"objectType": {
							"type": "reference",
							"target": 41307,
							"name": "FetchParams",
							"package": "@medusajs/js-sdk"
						}
					}
				},
				{
					"id": 41277,
					"name": "FetchArgs",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
							"line": 50,
							"character": 12
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "RequestInit"
										},
										"name": "RequestInit",
										"package": "typescript"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "headers"
											},
											{
												"type": "literal",
												"value": "body"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 41278,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 41279,
											"name": "query",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
													"line": 51,
													"character": 2
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										},
										{
											"id": 41280,
											"name": "headers",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
													"line": 52,
													"character": 2
												}
											],
											"type": {
												"type": "reference",
												"target": 41236,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										},
										{
											"id": 41281,
											"name": "body",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
													"line": 53,
													"character": 2
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "literal",
															"value": "body"
														},
														"objectType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
																"qualifiedName": "RequestInit"
															},
															"name": "RequestInit",
															"package": "typescript"
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												41279,
												41280,
												41281
											]
										}
									],
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
											"line": 50,
											"character": 64
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 41254,
					"name": "ClientFetch",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
							"line": 56,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 41255,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
									"line": 56,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 41256,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 41257,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41298,
												"name": "FetchInput",
												"package": "@medusajs/js-sdk"
											}
										},
										{
											"id": 41258,
											"name": "init",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41277,
												"name": "FetchArgs",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Response"
												},
												"name": "Response",
												"package": "typescript"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 41299,
					"name": "ServerSentEventMessage",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 41300,
							"name": "comment",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Ignored by the client."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
									"line": 64,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41301,
							"name": "event",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A string identifying the type of event described."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
									"line": 66,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41302,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The data field for the message. Split by new lines."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
									"line": 68,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41303,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The event ID to set the "
									},
									{
										"kind": "inline-tag",
										"tag": "@linkcode",
										"text": "EventSource",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "EventSource"
										}
									},
									{
										"kind": "text",
										"text": " object's last event ID value."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
									"line": 70,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 41304,
							"name": "retry",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The reconnection time."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
									"line": 72,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								41300,
								41301,
								41302,
								41303,
								41304
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
							"line": 62,
							"character": 17
						}
					]
				},
				{
					"id": 41282,
					"name": "FetchStreamResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 41283,
							"name": "stream",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
									"line": 76,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts",
											"qualifiedName": "AsyncGenerator"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 41299,
												"name": "ServerSentEventMessage",
												"package": "@medusajs/js-sdk"
											},
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "AsyncGenerator",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 41284,
							"name": "abort",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
									"line": 77,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 41285,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
											"line": 77,
											"character": 9
										}
									],
									"signatures": [
										{
											"id": 41286,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
													"line": 77,
													"character": 9
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								41283,
								41284
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
							"line": 75,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"children": [
						40974,
						41149,
						40522,
						40892,
						41053,
						39538,
						40312,
						40652,
						40089,
						40035,
						40068,
						39176,
						40165,
						39504,
						40226,
						40337,
						40240,
						40954,
						40906,
						39641,
						39682,
						39606,
						39572,
						40835,
						39833,
						40936,
						39711,
						41087,
						40945,
						39885,
						41024,
						39922,
						40388,
						39996,
						40102,
						40136,
						39952,
						40815,
						40763,
						40792,
						39862,
						40864,
						41011,
						41181
					]
				},
				{
					"title": "Interfaces",
					"children": [
						41287,
						41299,
						41282
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						41259,
						41239,
						41305,
						41307,
						41236,
						41298,
						41277,
						41254
					]
				}
			],
			"sources": [
				{
					"fileName": "admin/index.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/admin/index.ts#L1"
				}
			]
		},
		{
			"id": 39222,
			"name": "auth",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 39223,
					"name": "Auth",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 39224,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "auth/index.ts",
									"line": 9,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/auth/index.ts#L9"
								}
							],
							"signatures": [
								{
									"id": 39225,
									"name": "Auth",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "auth/index.ts",
											"line": 9,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/auth/index.ts#L9"
										}
									],
									"parameters": [
										{
											"id": 39226,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41181,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										},
										{
											"id": 39227,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41239,
												"name": "Config",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 39223,
										"name": "Auth",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 39230,
							"name": "register",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "auth/index.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/auth/index.ts#L38"
								}
							],
							"signatures": [
								{
									"id": 39231,
									"name": "register",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to retrieve a registration JWT token for a user, customer, or custom actor type. It sends a request to the\n[Retrieve Registration Token API route](https://docs.medusajs.com/api/store#auth_postactor_typeauth_provider_register)."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The JWT token used for registration later."
													}
												]
											},
											{
												"tag": "@tags",
												"content": [
													{
														"kind": "text",
														"text": "auth"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.auth.register(\n  \"customer\",\n  \"emailpass\",\n  {\n    email: \"customer@gmail.com\",\n    password: \"supersecret\"\n  }\n).then((token) => {\n  console.log(token)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "auth/index.ts",
											"line": 38,
											"character": 13,
											"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/auth/index.ts#L38"
										}
									],
									"parameters": [
										{
											"id": 39232,
											"name": "actor",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The actor type. For example, "
													},
													{
														"kind": "code",
														"text": "`user`"
													},
													{
														"kind": "text",
														"text": " for admin user, or "
													},
													{
														"kind": "code",
														"text": "`customer`"
													},
													{
														"kind": "text",
														"text": " for customer."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39233,
											"name": "method",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The authentication provider to use. For example, "
													},
													{
														"kind": "code",
														"text": "`emailpass`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`google`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39234,
											"name": "payload",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to pass in the request's body for authentication. When using the "
													},
													{
														"kind": "code",
														"text": "`emailpass`"
													},
													{
														"kind": "text",
														"text": " provider,\nyou pass the email and password."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/auth/payloads.ts",
													"qualifiedName": "AdminSignUpWithEmailPassword"
												},
												"name": "AdminSignUpWithEmailPassword",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39235,
							"name": "login",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "auth/index.ts",
									"line": 86,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/auth/index.ts#L86"
								}
							],
							"signatures": [
								{
									"id": 39236,
									"name": "login",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves the JWT authenticated token for an admin user, customer, or custom\nactor type. It sends a request to the [Authenticate API Route](https://docs.medusajs.com/api/admin#auth_postactor_typeauth_provider).\n\nIf the "
											},
											{
												"kind": "code",
												"text": "`auth.type`"
											},
											{
												"kind": "text",
												"text": " of the SDK is set to "
											},
											{
												"kind": "code",
												"text": "`session`"
											},
											{
												"kind": "text",
												"text": ", this method will also send a request to the\n[Set Authentication Session API route](https://docs.medusajs.com/api/admin#auth_postsession).\n\nSubsequent requests using the SDK will automatically have the necessary authentication headers / session\nset."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The authentication JWT token"
													}
												]
											},
											{
												"tag": "@tags",
												"content": [
													{
														"kind": "text",
														"text": "auth"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.auth.login(\n  \"customer\",\n  \"emailpass\",\n  {\n    email: \"customer@gmail.com\",\n    password: \"supersecret\"\n  }\n).then((token) => {\n  console.log(token)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "auth/index.ts",
											"line": 86,
											"character": 10,
											"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/auth/index.ts#L86"
										}
									],
									"parameters": [
										{
											"id": 39237,
											"name": "actor",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The actor type. For example, "
													},
													{
														"kind": "code",
														"text": "`user`"
													},
													{
														"kind": "text",
														"text": " for admin user, or "
													},
													{
														"kind": "code",
														"text": "`customer`"
													},
													{
														"kind": "text",
														"text": " for customer."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39238,
											"name": "method",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The authentication provider to use. For example, "
													},
													{
														"kind": "code",
														"text": "`emailpass`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`google`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39239,
											"name": "payload",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to pass in the request's body for authentication. When using the "
													},
													{
														"kind": "code",
														"text": "`emailpass`"
													},
													{
														"kind": "text",
														"text": " provider,\nyou pass the email and password."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/http/auth/payloads.ts",
															"qualifiedName": "AdminSignInWithEmailPassword"
														},
														"name": "AdminSignInWithEmailPassword",
														"package": "@medusajs/types"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 39240,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 39241,
																	"name": "location",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "auth/index.ts",
																			"line": 103,
																			"character": 15,
																			"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/auth/index.ts#L103"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		39241
																	]
																}
															],
															"sources": [
																{
																	"fileName": "auth/index.ts",
																	"line": 103,
																	"character": 13,
																	"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/auth/index.ts#L103"
																}
															]
														}
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39242,
							"name": "callback",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "auth/index.ts",
									"line": 139,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/auth/index.ts#L139"
								}
							],
							"signatures": [
								{
									"id": 39243,
									"name": "callback",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to validate an Oauth callback from a third-party service, such as Google, for an admin user, customer, or custom actor types.\nIt sends a request to the [Validate Authentication Callback](https://docs.medusajs.com/api/admin#auth_postactor_typeauth_providercallback)."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The authentication JWT token"
													}
												]
											},
											{
												"tag": "@tags",
												"content": [
													{
														"kind": "text",
														"text": "auth"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.auth.callback(\n  \"customer\",\n  \"google\",\n  {\n    code: \"123\",\n    state: \"456\"\n  }\n).then((token) => {\n  console.log(token)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "auth/index.ts",
											"line": 139,
											"character": 13,
											"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/auth/index.ts#L139"
										}
									],
									"parameters": [
										{
											"id": 39244,
											"name": "actor",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The actor type. For example, "
													},
													{
														"kind": "code",
														"text": "`user`"
													},
													{
														"kind": "text",
														"text": " for admin user, or "
													},
													{
														"kind": "code",
														"text": "`customer`"
													},
													{
														"kind": "text",
														"text": " for customer."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39245,
											"name": "method",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The authentication provider to use. For example, "
													},
													{
														"kind": "code",
														"text": "`google`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39246,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The query parameters from the Oauth callback, which should be passed to the API route. This includes query parameters like\n"
													},
													{
														"kind": "code",
														"text": "`code`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`state`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39247,
							"name": "refresh",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "auth/index.ts",
									"line": 170,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/auth/index.ts#L170"
								}
							],
							"signatures": [
								{
									"id": 39248,
									"name": "refresh",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method refreshes a JWT authentication token, which is useful after validating the Oauth callback\nwith "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "callback",
												"target": 39242
											},
											{
												"kind": "text",
												"text": ". It sends a request to the [Refresh Authentication Token API route](https://docs.medusajs.com/api/admin#auth_postadminauthtokenrefresh)."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The refreshed JWT authentication token."
													}
												]
											},
											{
												"tag": "@tags",
												"content": [
													{
														"kind": "text",
														"text": "auth"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.auth.refresh()\n.then((token) => {\n  console.log(token)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "auth/index.ts",
											"line": 170,
											"character": 12,
											"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/auth/index.ts#L170"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39249,
							"name": "logout",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "auth/index.ts",
									"line": 196,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/auth/index.ts#L196"
								}
							],
							"signatures": [
								{
									"id": 39250,
									"name": "logout",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes the authentication session of the currently logged-in user to log them out.\nIt sends a request to the [Delete Authentication Session API route](https://docs.medusajs.com/api/admin#auth_deletesession)."
											}
										],
										"blockTags": [
											{
												"tag": "@tags",
												"content": [
													{
														"kind": "text",
														"text": "auth"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.auth.logout()\n.then(() => {\n  // user is logged out\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "auth/index.ts",
											"line": 196,
											"character": 11,
											"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/auth/index.ts#L196"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39251,
							"name": "resetPassword",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "auth/index.ts",
									"line": 232,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/auth/index.ts#L232"
								}
							],
							"signatures": [
								{
									"id": 39252,
									"name": "resetPassword",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method requests a reset password token for an admin user, customer, or custom actor type.\nIt sends a request to the [Generate Reset Password Token API route](https://docs.medusajs.com/api/admin#auth_postactor_typeauth_providerresetpassword).\n\nTo reset the password later using the token delivered to the user, use the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "updateProvider",
												"target": 39258
											},
											{
												"kind": "text",
												"text": " method.\n\nRelated guide: [How to allow customers to reset their passwords in a storefront](https://docs.medusajs.com/resources/storefront-development/customers/reset-password)."
											}
										],
										"blockTags": [
											{
												"tag": "@tags",
												"content": [
													{
														"kind": "text",
														"text": "auth"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.auth.resetPassword(\n  \"customer\",\n  \"emailpass\",\n  {\n    identifier: \"customer@gmail.com\"\n  }\n)\n.then(() => {\n  // user receives token\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "auth/index.ts",
											"line": 232,
											"character": 18,
											"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/auth/index.ts#L232"
										}
									],
									"parameters": [
										{
											"id": 39253,
											"name": "actor",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The actor type. For example, "
													},
													{
														"kind": "code",
														"text": "`user`"
													},
													{
														"kind": "text",
														"text": " for admin user, or "
													},
													{
														"kind": "code",
														"text": "`customer`"
													},
													{
														"kind": "text",
														"text": " for customer."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39254,
											"name": "provider",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The authentication provider to use. For example, "
													},
													{
														"kind": "code",
														"text": "`emailpass`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39255,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data required to identify the user."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39256,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 39257,
															"name": "identifier",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The user's identifier. For example, when using the "
																	},
																	{
																		"kind": "code",
																		"text": "`emailpass`"
																	},
																	{
																		"kind": "text",
																		"text": " provider,\nthis would be the user's email."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "auth/index.ts",
																	"line": 240,
																	"character": 6,
																	"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/auth/index.ts#L240"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																39257
															]
														}
													],
													"sources": [
														{
															"fileName": "auth/index.ts",
															"line": 235,
															"character": 10,
															"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/auth/index.ts#L235"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 39258,
							"name": "updateProvider",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "auth/index.ts",
									"line": 280,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/auth/index.ts#L280"
								}
							],
							"signatures": [
								{
									"id": 39259,
									"name": "updateProvider",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to update user-related data authentication data.\n\nMore specifically, use this method when updating the password of an admin user, customer, or\ncustom actor type after requesting to reset their password with "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "resetPassword",
												"target": 39251
											},
											{
												"kind": "text",
												"text": ".\n\nThis method sends a request to [this API route](https://docs.medusajs.com/api/admin#auth_postactor_typeauth_providerupdate).\n\nRelated guide: [How to allow customers to reset their passwords in a storefront](https://docs.medusajs.com/resources/storefront-development/customers/reset-password)."
											}
										],
										"blockTags": [
											{
												"tag": "@tags",
												"content": [
													{
														"kind": "text",
														"text": "auth"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.auth.updateProvider(\n  \"customer\",\n  \"emailpass\",\n  {\n    password: \"supersecret\"\n  },\n  token\n)\n.then(() => {\n  // password updated\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "auth/index.ts",
											"line": 280,
											"character": 19,
											"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/auth/index.ts#L280"
										}
									],
									"parameters": [
										{
											"id": 39260,
											"name": "actor",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The actor type. For example, "
													},
													{
														"kind": "code",
														"text": "`user`"
													},
													{
														"kind": "text",
														"text": " for admin user, or "
													},
													{
														"kind": "code",
														"text": "`customer`"
													},
													{
														"kind": "text",
														"text": " for customer."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39261,
											"name": "provider",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The authentication provider to use. For example, "
													},
													{
														"kind": "code",
														"text": "`emailpass`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39262,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data necessary to update the user's authentication data. When resetting the user's password,\nsend the "
													},
													{
														"kind": "code",
														"text": "`password`"
													},
													{
														"kind": "text",
														"text": " property."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/auth/payloads.ts",
													"qualifiedName": "AdminUpdateProvider"
												},
												"name": "AdminUpdateProvider",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 39263,
											"name": "token",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								39224
							]
						},
						{
							"title": "Methods",
							"children": [
								39230,
								39235,
								39242,
								39247,
								39249,
								39251,
								39258
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/index.ts",
							"line": 5,
							"character": 13,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/auth/index.ts#L5"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"children": [
						39223
					]
				}
			],
			"sources": [
				{
					"fileName": "auth/index.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/auth/index.ts#L1"
				}
			]
		},
		{
			"id": 39267,
			"name": "store",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 39268,
					"name": "Store",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 39273,
							"name": "region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "region"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "store/index.ts",
									"line": 21,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L21"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 39274,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 39275,
											"name": "list",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves the paginated list of regions in the store. It sends a request to the\n[List Regions API route](https://docs.medusajs.com/api/store#regions_getregions).\n\nRelated guide: [How to list regions in a storefront](https://docs.medusajs.com/resources/storefront-development/regions/list)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve the list of regions:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.region.list()\n.then(({ regions, count, limit, offset }) => {\n  console.log(regions)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo configure the pagination, pass the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.region.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ regions, count, limit, offset }) => {\n  console.log(regions)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nUsing the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " query parameter, you can specify the fields and relations to retrieve\nin each region:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.region.list({\n  fields: \"id,*countries\"\n})\n.then(({ regions, count, limit, offset }) => {\n  console.log(regions)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 70,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L70"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39276,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 70,
															"character": 10,
															"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L70"
														}
													],
													"signatures": [
														{
															"id": 39277,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The paginated list of regions."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 70,
																	"character": 10,
																	"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L70"
																}
															],
															"parameters": [
																{
																	"id": 39278,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Filters and pagination configurations."
																			}
																		]
																	},
																	"type": {
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																					"qualifiedName": "FindParams"
																				},
																				"name": "FindParams",
																				"package": "@medusajs/types"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/http/region/store/queries.ts",
																					"qualifiedName": "StoreRegionFilters"
																				},
																				"name": "StoreRegionFilters",
																				"package": "@medusajs/types"
																			}
																		]
																	}
																},
																{
																	"id": 39279,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request"
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 41236,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/region/store/responses.ts",
																			"qualifiedName": "StoreRegionListResponse"
																		},
																		"name": "StoreRegionListResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 39280,
											"name": "retrieve",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves a region by its ID. It sends a request to the [Get Region](https://docs.medusajs.com/api/store#regions_getregionsid)\nAPI route.\n\nRelated guide: [Store and retrieve regions in a storefront](https://docs.medusajs.com/resources/storefront-development/regions/store-retrieve-region)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve a region by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.region.retrieve(\"reg_123\")\n.then(({ region }) => {\n  console.log(region)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.region.retrieve(\n  \"reg_123\",\n  {\n    fields: \"id,*countries\"\n  }\n)\n.then(({ region }) => {\n  console.log(region)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 119,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L119"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39281,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 119,
															"character": 14,
															"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L119"
														}
													],
													"signatures": [
														{
															"id": 39282,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The region."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 119,
																	"character": 14,
																	"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L119"
																}
															],
															"parameters": [
																{
																	"id": 39283,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The region's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 39284,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the region."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39285,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request"
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 41236,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/region/store/responses.ts",
																			"qualifiedName": "StoreRegionResponse"
																		},
																		"name": "StoreRegionResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												39275,
												39280
											]
										}
									],
									"sources": [
										{
											"fileName": "store/index.ts",
											"line": 21,
											"character": 18,
											"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L21"
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 39286,
							"name": "collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "product"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "store/index.ts",
									"line": 137,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L137"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 39287,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 39288,
											"name": "list",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves a paginated list of product collections. It sends a request to the\n[List Collections](https://docs.medusajs.com/api/store#collections_getcollections) API route.\n\nRelated guide: [How to retrieve collections in a storefront](https://docs.medusajs.com/resources/storefront-development/products/collections/list)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve the list of collections:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.collection.list()\n.then(({ collections, count, limit, offset }) => {\n  console.log(collections)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo configure the pagination, pass the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.collection.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ collections, count, limit, offset }) => {\n  console.log(collections)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nUsing the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " query parameter, you can specify the fields and relations to retrieve\nin each collection:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.collection.list({\n  fields: \"id,handle\"\n})\n.then(({ collections, count, limit, offset }) => {\n  console.log(collections)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 186,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L186"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39289,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 186,
															"character": 10,
															"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L186"
														}
													],
													"signatures": [
														{
															"id": 39290,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The paginated list of collections."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 186,
																	"character": 10,
																	"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L186"
																}
															],
															"parameters": [
																{
																	"id": 39291,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Filters and pagination configurations."
																			}
																		]
																	},
																	"type": {
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																					"qualifiedName": "FindParams"
																				},
																				"name": "FindParams",
																				"package": "@medusajs/types"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/http/collection/store/queries.ts",
																					"qualifiedName": "StoreCollectionFilters"
																				},
																				"name": "StoreCollectionFilters",
																				"package": "@medusajs/types"
																			}
																		]
																	}
																},
																{
																	"id": 39292,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request"
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 41236,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/collection/store/responses.ts",
																			"qualifiedName": "StoreCollectionListResponse"
																		},
																		"name": "StoreCollectionListResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 39293,
											"name": "retrieve",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves a collection by its ID. It sends a request to the [Get Collection](https://docs.medusajs.com/api/store#collections_getcollectionsid)\nAPI route.\n\nRelated guide: [How to retrieve a collection in a storefront](https://docs.medusajs.com/resources/storefront-development/products/collections/retrieve)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve a collection by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.collection.retrieve(\"pcol_123\")\n.then(({ collection }) => {\n  console.log(collection)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.collection.retrieve(\"pcol_123\", {\n  fields: \"id,handle\"\n})\n.then(({ collection }) => {\n  console.log(collection)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 232,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L232"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39294,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 232,
															"character": 14,
															"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L232"
														}
													],
													"signatures": [
														{
															"id": 39295,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The collection."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 232,
																	"character": 14,
																	"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L232"
																}
															],
															"parameters": [
																{
																	"id": 39296,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The ID of the collection to retrieve."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 39297,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the collection."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39298,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request"
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 41236,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/collection/store/responses.ts",
																			"qualifiedName": "StoreCollectionResponse"
																		},
																		"name": "StoreCollectionResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												39288,
												39293
											]
										}
									],
									"sources": [
										{
											"fileName": "store/index.ts",
											"line": 137,
											"character": 22,
											"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L137"
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 39299,
							"name": "category",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "product"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "store/index.ts",
									"line": 250,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L250"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 39300,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 39301,
											"name": "list",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves a paginated list of product categories. It sends a request to the\n[List Categories](https://docs.medusajs.com/api/store#product-categories_getproductcategories) API route.\n\nRelated guide: [How to retrieve list of categories in the storefront](https://docs.medusajs.com/resources/storefront-development/products/categories/list)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve the list of categories:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.category.list()\n.then(({ product_categories, count, offset, limit }) => {\n  console.log(product_categories)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo configure the pagination, pass the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.category.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ product_categories, count, offset, limit }) => {\n  console.log(product_categories)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nUsing the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " query parameter, you can specify the fields and relations to retrieve\nin each category:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.category.list({\n  fields: \"id,*parent_category\"\n})\n.then(({ product_categories, count, offset, limit }) => {\n  console.log(product_categories)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 299,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L299"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39302,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 299,
															"character": 10,
															"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L299"
														}
													],
													"signatures": [
														{
															"id": 39303,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The paginated list of categories."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 299,
																	"character": 10,
																	"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L299"
																}
															],
															"parameters": [
																{
																	"id": 39304,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Filters and pagination configurations."
																			}
																		]
																	},
																	"type": {
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																					"qualifiedName": "FindParams"
																				},
																				"name": "FindParams",
																				"package": "@medusajs/types"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/http/product-category/store/queries.ts",
																					"qualifiedName": "StoreProductCategoryListParams"
																				},
																				"name": "StoreProductCategoryListParams",
																				"package": "@medusajs/types"
																			}
																		]
																	}
																},
																{
																	"id": 39305,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 41236,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/product-category/store/responses.ts",
																			"qualifiedName": "StoreProductCategoryListResponse"
																		},
																		"name": "StoreProductCategoryListResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 39306,
											"name": "retrieve",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves a category by its ID. It sends a request to the\n[Retrieve Product Category](https://docs.medusajs.com/api/store#product-categories_getproductcategoriesid).\n\nRelated guide: [How to retrieve a category in the storefront](https://docs.medusajs.com/resources/storefront-development/products/categories/retrieve)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve a category by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.category.retrieve(\"pcat_123\")\n.then(({ product_category }) => {\n  console.log(product_category)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.category.retrieve(\"pcat_123\", {\n  fields: \"id,*parent_category\"\n})\n.then(({ product_category }) => {\n  console.log(product_category)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 345,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L345"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39307,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 345,
															"character": 14,
															"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L345"
														}
													],
													"signatures": [
														{
															"id": 39308,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The category."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 345,
																	"character": 14,
																	"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L345"
																}
															],
															"parameters": [
																{
																	"id": 39309,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The ID of the category to retrieve."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 39310,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the category."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/product-category/store/queries.ts",
																			"qualifiedName": "StoreProductCategoryParams"
																		},
																		"name": "StoreProductCategoryParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39311,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request"
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 41236,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/product-category/store/responses.ts",
																			"qualifiedName": "StoreProductCategoryResponse"
																		},
																		"name": "StoreProductCategoryResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												39301,
												39306
											]
										}
									],
									"sources": [
										{
											"fileName": "store/index.ts",
											"line": 250,
											"character": 20,
											"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L250"
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 39312,
							"name": "product",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "product"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "store/index.ts",
									"line": 363,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L363"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 39313,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 39314,
											"name": "list",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves a list of products. It sends a request to the\n[List Products API route](https://docs.medusajs.com/api/store#products_getproducts).\n\nRelated guides:\n\n- [How to list products in a storefront](https://docs.medusajs.com/resources/storefront-development/products/list).\n- [How to retrieve a product variant's prices in the storefront](https://docs.medusajs.com/resources/storefront-development/products/price)"
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve the list of products:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.product.list()\n.then(({ products, count, offset, limit }) => {\n  console.log(products)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo configure the pagination, pass the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.product.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ products, count, offset, limit }) => {\n  console.log(products)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nUsing the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " query parameter, you can specify the fields and relations to retrieve\nin each product:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.product.list({\n  fields: \"id,*collection\"\n})\n.then(({ products, count, offset, limit }) => {\n  console.log(products)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 415,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L415"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39315,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 415,
															"character": 10,
															"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L415"
														}
													],
													"signatures": [
														{
															"id": 39316,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The paginated list of products."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 415,
																	"character": 10,
																	"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L415"
																}
															],
															"parameters": [
																{
																	"id": 39317,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Filters and pagination configurations."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/product/store/queries.ts",
																			"qualifiedName": "StoreProductListParams"
																		},
																		"name": "StoreProductListParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39318,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 41236,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/product/store/responses.ts",
																			"qualifiedName": "StoreProductListResponse"
																		},
																		"name": "StoreProductListResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 39319,
											"name": "retrieve",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method is used to retrieve a product by its ID. It sends a request to the\n[Get Product](https://docs.medusajs.com/api/store#products_getproductsid) API route.\n\nRelated guides:\n\n- [How to retrieve a product in the storefront](https://docs.medusajs.com/resources/storefront-development/products/retrieve).\n- [How to retrieve a product variant's prices in the storefront](https://docs.medusajs.com/resources/storefront-development/products/price)"
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve a product by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.product.retrieve(\"prod_123\")\n.then(({ product }) => {\n  console.log(product)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.product.retrieve(\"prod_123\", {\n  fields: \"id,*collection\"\n})\n.then(({ product }) => {\n  console.log(product)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 464,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L464"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39320,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 464,
															"character": 14,
															"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L464"
														}
													],
													"signatures": [
														{
															"id": 39321,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The product."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 464,
																	"character": 14,
																	"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L464"
																}
															],
															"parameters": [
																{
																	"id": 39322,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The product's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 39323,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the product."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/product/store/queries.ts",
																			"qualifiedName": "StoreProductParams"
																		},
																		"name": "StoreProductParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39324,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request"
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 41236,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/product/store/responses.ts",
																			"qualifiedName": "StoreProductResponse"
																		},
																		"name": "StoreProductResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												39314,
												39319
											]
										}
									],
									"sources": [
										{
											"fileName": "store/index.ts",
											"line": 363,
											"character": 19,
											"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L363"
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 39325,
							"name": "cart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Related guides: [How to implement carts in the storefront](https://docs.medusajs.com/resources/storefront-development/cart)."
									}
								],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "cart"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "store/index.ts",
									"line": 484,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L484"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 39326,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 39327,
											"name": "create",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method creates a cart. It sends a request to the [Create Cart](https://docs.medusajs.com/api/store#carts_postcarts)\nAPI route.\n\nRelated guide: [How to create a cart in the storefront](https://docs.medusajs.com/resources/storefront-development/cart/create)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.cart.create({\n  region_id: \"reg_123\"\n})\n.then(({ cart }) => {\n  console.log(cart)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 504,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L504"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39328,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 504,
															"character": 12,
															"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L504"
														}
													],
													"signatures": [
														{
															"id": 39329,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The created cart."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 504,
																	"character": 12,
																	"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L504"
																}
															],
															"parameters": [
																{
																	"id": 39330,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The details of the cart to create."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/payloads.ts",
																			"qualifiedName": "StoreCreateCart"
																		},
																		"name": "StoreCreateCart",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39331,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the cart."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39332,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 41236,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/responses.ts",
																			"qualifiedName": "StoreCartResponse"
																		},
																		"name": "StoreCartResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 39333,
											"name": "update",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method updates a cart. It sends a request to the\n[Update Cart](https://docs.medusajs.com/api/store#carts_postcartsid) API route.\n\nRelated guide: [How to update a cart in the storefront](https://docs.medusajs.com/resources/storefront-development/cart/update)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.cart.update(\"cart_123\", {\n  region_id: \"reg_123\"\n})\n.then(({ cart }) => {\n  console.log(cart)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 536,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L536"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39334,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 536,
															"character": 12,
															"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L536"
														}
													],
													"signatures": [
														{
															"id": 39335,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The updated cart."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 536,
																	"character": 12,
																	"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L536"
																}
															],
															"parameters": [
																{
																	"id": 39336,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The cart's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 39337,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The data to update in the cart."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/payloads.ts",
																			"qualifiedName": "StoreUpdateCart"
																		},
																		"name": "StoreUpdateCart",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39338,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the cart."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39339,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 41236,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/responses.ts",
																			"qualifiedName": "StoreCartResponse"
																		},
																		"name": "StoreCartResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 39340,
											"name": "retrieve",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves a cart by its ID. It sends a request to the\n[Get Cart](https://docs.medusajs.com/api/store#carts_getcartsid) API route.\n\nRelated guide: [How to retrieve a cart in the storefront](https://docs.medusajs.com/resources/storefront-development/cart/retrieve)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve a cart by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.cart.retrieve(\"cart_123\")\n.then(({ cart }) => {\n  console.log(cart)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.cart.retrieve(\"cart_123\", {\n  fields: \"id,*items\"\n})\n.then(({ cart }) => {\n  console.log(cart)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 586,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L586"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39341,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 586,
															"character": 14,
															"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L586"
														}
													],
													"signatures": [
														{
															"id": 39342,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The cart's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 586,
																	"character": 14,
																	"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L586"
																}
															],
															"parameters": [
																{
																	"id": 39343,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The cart's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 39344,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the cart."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39345,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 41236,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/responses.ts",
																			"qualifiedName": "StoreCartResponse"
																		},
																		"name": "StoreCartResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 39346,
											"name": "createLineItem",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This methods adds a product variant to the cart as a line item. It sends a request to the\n[Add Line Item](https://docs.medusajs.com/api/store#carts_postcartsidlineitems) API route.\n\nRelated guide: [How to manage a cart's line items in the storefront](https://docs.medusajs.com/resources/storefront-development/cart/manage-items)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.cart.createLineItem(\"cart_123\", {\n  variant_id: \"variant_123\",\n  quantity: 1\n})\n.then(({ cart }) => {\n  console.log(cart)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 620,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L620"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39347,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 620,
															"character": 20,
															"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L620"
														}
													],
													"signatures": [
														{
															"id": 39348,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The cart's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 620,
																	"character": 20,
																	"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L620"
																}
															],
															"parameters": [
																{
																	"id": 39349,
																	"name": "cartId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The cart's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 39350,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The details of the item to add."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/payloads.ts",
																			"qualifiedName": "StoreAddCartLineItem"
																		},
																		"name": "StoreAddCartLineItem",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39351,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the cart."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39352,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 41236,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/responses.ts",
																			"qualifiedName": "StoreCartResponse"
																		},
																		"name": "StoreCartResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 39353,
											"name": "updateLineItem",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method updates a line item in a cart. It sends a request to the\n[Update Line Item](https://docs.medusajs.com/api/store#carts_postcartsidlineitemsline_id) API route.\n\nRelated guide: [How to manage a cart's line items in the storefront](https://docs.medusajs.com/resources/storefront-development/cart/manage-items)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.cart.updateLineItem(\n  \"cart_123\",\n  \"li_123\",\n  {\n    quantity: 1\n  }\n)\n.then(({ cart }) => {\n  console.log(cart)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 661,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L661"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39354,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 661,
															"character": 20,
															"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L661"
														}
													],
													"signatures": [
														{
															"id": 39355,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The cart's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 661,
																	"character": 20,
																	"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L661"
																}
															],
															"parameters": [
																{
																	"id": 39356,
																	"name": "cartId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The cart's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 39357,
																	"name": "lineItemId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The line item's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 39358,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The data to update."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/payloads.ts",
																			"qualifiedName": "StoreUpdateCartLineItem"
																		},
																		"name": "StoreUpdateCartLineItem",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39359,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the cart."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39360,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 41236,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/responses.ts",
																			"qualifiedName": "StoreCartResponse"
																		},
																		"name": "StoreCartResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 39361,
											"name": "deleteLineItem",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method deletes a line item from a cart. It sends a request to the\n[Remove Line Item](https://docs.medusajs.com/api/store#carts_deletecartsidlineitemsline_id) API route.\n\nRelated guide: [How to manage a cart's line items in the storefront](https://docs.medusajs.com/resources/storefront-development/cart/manage-items)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.cart.deleteLineItem(\n  \"cart_123\",\n  \"li_123\"\n)\n.then(({ deleted, parent: cart }) => {\n  console.log(deleted, cart)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 698,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L698"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39362,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 698,
															"character": 20,
															"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L698"
														}
													],
													"signatures": [
														{
															"id": 39363,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The deletion's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 698,
																	"character": 20,
																	"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L698"
																}
															],
															"parameters": [
																{
																	"id": 39364,
																	"name": "cartId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The cart's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 39365,
																	"name": "lineItemId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The item's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 39366,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 41236,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/responses.ts",
																			"qualifiedName": "StoreLineItemDeleteResponse"
																		},
																		"name": "StoreLineItemDeleteResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 39367,
											"name": "addShippingMethod",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method adds a shipping method to a cart. It sends a request to\nthe [Add Shipping Method](https://docs.medusajs.com/api/store#carts_postcartsidshippingmethods) API routes.\n\nRelated guide: [Implement shipping step during checkout](https://docs.medusajs.com/resources/storefront-development/checkout/shipping)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.cart.addShippingMethod(\"cart_123\", {\n  option_id: \"so_123\",\n  data: {\n    // custom data for fulfillment provider.\n  }\n})\n.then(({ cart }) => {\n  console.log(cart)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 734,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L734"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39368,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 734,
															"character": 23,
															"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L734"
														}
													],
													"signatures": [
														{
															"id": 39369,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The cart's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 734,
																	"character": 23,
																	"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L734"
																}
															],
															"parameters": [
																{
																	"id": 39370,
																	"name": "cartId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The cart's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 39371,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The shipping method's details."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/payloads.ts",
																			"qualifiedName": "StoreAddCartShippingMethods"
																		},
																		"name": "StoreAddCartShippingMethods",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39372,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the cart."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39373,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 41236,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/responses.ts",
																			"qualifiedName": "StoreCartResponse"
																		},
																		"name": "StoreCartResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 39374,
											"name": "complete",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method completes a cart and places the order. It's the last step of the checkout flow.\nThe method sends a request to the [Complete Cart](https://docs.medusajs.com/api/store#carts_postcartsidcomplete)\nAPI route.\n\nRelated guide: [Learn how to complete cart in checkout flow](https://docs.medusajs.com/resources/storefront-development/checkout/complete-cart)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.cart.complete(\"cart_123\")\n.then((data) => {\n  if(data.type === \"cart\") {\n    // an error occurred\n    console.log(data.error, data.cart)\n  } else {\n    // order placed successfully\n    console.log(data.order)\n  }\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 774,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L774"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39375,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 774,
															"character": 14,
															"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L774"
														}
													],
													"signatures": [
														{
															"id": 39376,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The order's details, if it was placed successfully. Otherwise, the cart is returned with an error."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 774,
																	"character": 14,
																	"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L774"
																}
															],
															"parameters": [
																{
																	"id": 39377,
																	"name": "cartId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The cart's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 39378,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the created order."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39379,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 41236,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/responses.ts",
																			"qualifiedName": "StoreCompleteCartResponse"
																		},
																		"name": "StoreCompleteCartResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 39380,
											"name": "transferCart",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method updates the customer of a cart."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.cart.transferCart(\"cart_123\")\n.then(({ cart }) => {\n  console.log(cart)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 803,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L803"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39381,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 803,
															"character": 18,
															"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L803"
														}
													],
													"signatures": [
														{
															"id": 39382,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The updated cart."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 803,
																	"character": 18,
																	"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L803"
																}
															],
															"parameters": [
																{
																	"id": 39383,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The cart's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 39384,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the cart."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39385,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 41236,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/responses.ts",
																			"qualifiedName": "StoreCartResponse"
																		},
																		"name": "StoreCartResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												39327,
												39333,
												39340,
												39346,
												39353,
												39361,
												39367,
												39374,
												39380
											]
										}
									],
									"sources": [
										{
											"fileName": "store/index.ts",
											"line": 484,
											"character": 16,
											"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L484"
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 39386,
							"name": "fulfillment",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "fulfillment"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "store/index.ts",
									"line": 822,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L822"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 39387,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 39388,
											"name": "listCartOptions",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves the list of shipping options for a cart. It sends a request to\nthe [List Shipping Options](https://docs.medusajs.com/api/store#shipping-options_getshippingoptions)\nAPI route.\n\nRelated guide: [Implement shipping step during checkout](https://docs.medusajs.com/resources/storefront-development/checkout/shipping)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.fulfillment.listCartOptions({\n  cart_id: \"cart_123\"\n})\n.then(({ shipping_options }) => {\n  console.log(shipping_options)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 842,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L842"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39389,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 842,
															"character": 21,
															"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L842"
														}
													],
													"signatures": [
														{
															"id": 39390,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The shipping options that can be used for the cart."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 842,
																	"character": 21,
																	"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L842"
																}
															],
															"parameters": [
																{
																	"id": 39391,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The cart's details along with configurations of the fields to retrieve in the options."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/store/queries.ts",
																			"qualifiedName": "StoreGetShippingOptionList"
																		},
																		"name": "StoreGetShippingOptionList",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39392,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 41236,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/store/responses.ts",
																			"qualifiedName": "StoreShippingOptionListResponse"
																		},
																		"name": "StoreShippingOptionListResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 39393,
											"name": "calculate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 855,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L855"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39394,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 855,
															"character": 15,
															"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L855"
														}
													],
													"signatures": [
														{
															"id": 39395,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 855,
																	"character": 15,
																	"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L855"
																}
															],
															"parameters": [
																{
																	"id": 39396,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 39397,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/store/payloads.ts",
																			"qualifiedName": "StoreCalculateShippingOptionPrice"
																		},
																		"name": "StoreCalculateShippingOptionPrice",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39398,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39399,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"target": 41236,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/store/responses.ts",
																			"qualifiedName": "StoreShippingOptionResponse"
																		},
																		"name": "StoreShippingOptionResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												39388,
												39393
											]
										}
									],
									"sources": [
										{
											"fileName": "store/index.ts",
											"line": 822,
											"character": 23,
											"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L822"
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 39400,
							"name": "payment",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "payment"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "store/index.ts",
									"line": 876,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L876"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 39401,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 39402,
											"name": "listPaymentProviders",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves the payment providers available in a region, which is useful during checkout.\nIt sends a request to the [List Payment Providers](https://docs.medusajs.com/api/store#payment-providers_getpaymentproviders)\nAPI route.\n\nRelated guide: [Implement payment step during checkout](https://docs.medusajs.com/resources/storefront-development/checkout/payment)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve the list of payment providers for a region:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.payment.listPaymentProviders({\n  region_id: \"reg_123\"\n})\n.then(({ payment_providers, count, offset, limit }) => {\n  console.log(payment_providers)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo configure the pagination, pass the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.payment.listPaymentProviders({\n  region_id: \"reg_123\",\n  limit: 10,\n  offset: 10\n})\n.then(({ payment_providers, count, offset, limit }) => {\n  console.log(payment_providers)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nUsing the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " query parameter, you can specify the fields and relations to retrieve\nin each provider:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.payment.listPaymentProviders({\n  region_id: \"reg_123\",\n  limit: 10,\n  offset: 10,\n  fields: \"id\"\n})\n.then(({ payment_providers, count, offset, limit }) => {\n  console.log(payment_providers)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 933,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L933"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39403,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 933,
															"character": 26,
															"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L933"
														}
													],
													"signatures": [
														{
															"id": 39404,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The list of payment providers."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 933,
																	"character": 26,
																	"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L933"
																}
															],
															"parameters": [
																{
																	"id": 39405,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The filters to apply on the retrieved providers, along with configurations of the\nfields to retrieve in the options."
																			}
																		]
																	},
																	"type": {
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																					"qualifiedName": "FindParams"
																				},
																				"name": "FindParams",
																				"package": "@medusajs/types"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/http/payment/store/queries.ts",
																					"qualifiedName": "StorePaymentProviderFilters"
																				},
																				"name": "StorePaymentProviderFilters",
																				"package": "@medusajs/types"
																			}
																		]
																	}
																},
																{
																	"id": 39406,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 41236,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/payment/store/responses.ts",
																			"qualifiedName": "StorePaymentProviderListResponse"
																		},
																		"name": "StorePaymentProviderListResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 39407,
											"name": "initiatePaymentSession",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method creates a payment session of a cart's payment collection, selecting a payment provider.\nIt sends a request to the [Initialize Payment Session](https://docs.medusajs.com/api/store#payment-collections_postpaymentcollectionsidpaymentsessions)\nAPI route.\n\nIf the cart doesn't have a payment collection, a payment collection is created for the cart by\nsending a request to the [Create Payment Collection](https://docs.medusajs.com/api/store#payment-collections_postpaymentcollections)\nAPI route.\n\nRelated guide: [Implement payment step during checkout](https://docs.medusajs.com/resources/storefront-development/checkout/payment)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.payment.initiatePaymentSession(\n  cart, // assuming you already have the cart object.\n  {\n    provider_id: \"pp_stripe_stripe\",\n    data: {\n      // any data relevant for the provider.\n    }\n  }\n)\n.then(({ payment_collection }) => {\n  console.log(payment_collection)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 977,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L977"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39408,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 977,
															"character": 28,
															"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L977"
														}
													],
													"signatures": [
														{
															"id": 39409,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The payment collection's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 977,
																	"character": 28,
																	"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L977"
																}
															],
															"parameters": [
																{
																	"id": 39410,
																	"name": "cart",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The cart's details."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/entities.ts",
																			"qualifiedName": "StoreCart"
																		},
																		"name": "StoreCart",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39411,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The payment session's details."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/payment/store/payloads.ts",
																			"qualifiedName": "StoreInitializePaymentSession"
																		},
																		"name": "StoreInitializePaymentSession",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39412,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the payment collection."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39413,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 41236,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/payment/store/responses.ts",
																			"qualifiedName": "StorePaymentCollectionResponse"
																		},
																		"name": "StorePaymentCollectionResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												39402,
												39407
											]
										}
									],
									"sources": [
										{
											"fileName": "store/index.ts",
											"line": 876,
											"character": 19,
											"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L876"
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 39414,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "order"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "store/index.ts",
									"line": 1015,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1015"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 39415,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 39416,
											"name": "list",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves a paginated list of orders matching the specified filters. It\nsends a request to the [List Orders](https://docs.medusajs.com/api/store#orders_getorders)\nAPI route."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve the list of orders:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.order.list()\n.then(({ orders, count, offset, limit }) => {\n  console.log(orders)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo configure the pagination, pass the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.order.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ orders, count, offset, limit }) => {\n  console.log(orders)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nUsing the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " query parameter, you can specify the fields and relations to retrieve\nin each order:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.order.list({\n  fields: \"id,*items\"\n})\n.then(({ orders, count, offset, limit }) => {\n  console.log(orders)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1063,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1063"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39417,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1063,
															"character": 10,
															"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1063"
														}
													],
													"signatures": [
														{
															"id": 39418,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The paginated list of orders."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1063,
																	"character": 10,
																	"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1063"
																}
															],
															"parameters": [
																{
																	"id": 39419,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the orders."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/order/store/queries.ts",
																			"qualifiedName": "StoreOrderFilters"
																		},
																		"name": "StoreOrderFilters",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39420,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 41236,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/order/store/responses.ts",
																			"qualifiedName": "StoreOrderListResponse"
																		},
																		"name": "StoreOrderListResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 39421,
											"name": "retrieve",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves an order by its ID. It sends a request to the\n[Get Order](https://docs.medusajs.com/api/store#orders_getordersid) API route."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve an order by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.order.retrieve(\"order_123\")\n.then(({ order }) => {\n  console.log(order)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.order.retrieve(\"order_123\", {\n  fields: \"id,*items\"\n})\n.then(({ order }) => {\n  console.log(order)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1107,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1107"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39422,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1107,
															"character": 14,
															"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1107"
														}
													],
													"signatures": [
														{
															"id": 39423,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The order's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1107,
																	"character": 14,
																	"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1107"
																}
															],
															"parameters": [
																{
																	"id": 39424,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The order's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 39425,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the order."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39426,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 41236,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 39427,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 39428,
																					"name": "order",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "store/index.ts",
																							"line": 1112,
																							"character": 33,
																							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1112"
																						}
																					],
																					"type": {
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../../../packages/core/types/src/http/order/store/entities.ts",
																							"qualifiedName": "StoreOrder"
																						},
																						"name": "StoreOrder",
																						"package": "@medusajs/types"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						39428
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "store/index.ts",
																					"line": 1112,
																					"character": 31,
																					"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1112"
																				}
																			]
																		}
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 39429,
											"name": "requestTransfer",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method requests a order transfer from a guest account to the current, logged in customer account.\n\nCustomer requesting the transfer must be logged in."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.order.requestTransfer(\n  \"order_123\",\n  {\n    description: \"I want to transfer this order to my friend.\"\n  },\n  {},\n  {\n    Authorization: `Bearer ${token}`\n  }\n)\n.then(({ order }) => {\n  console.log(order)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1146,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1146"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39430,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1146,
															"character": 21,
															"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1146"
														}
													],
													"signatures": [
														{
															"id": 39431,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The order details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1146,
																	"character": 21,
																	"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1146"
																}
															],
															"parameters": [
																{
																	"id": 39432,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 39433,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The transfer's details."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/order/store/payloads.ts",
																			"qualifiedName": "StoreRequestOrderTransfer"
																		},
																		"name": "StoreRequestOrderTransfer",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39434,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the order."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39435,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 41236,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/order/store/responses.ts",
																			"qualifiedName": "StoreOrderResponse"
																		},
																		"name": "StoreOrderResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 39436,
											"name": "cancelTransfer",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method cancels an order transfer request.\n\nCustomer requesting the transfer must be logged in."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.order.cancelTransfer(\n  \"order_123\",\n  {},\n  {\n    Authorization: `Bearer ${token}`\n  }\n)\n.then(({ order }) => {\n  console.log(order)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1184,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1184"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39437,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1184,
															"character": 20,
															"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1184"
														}
													],
													"signatures": [
														{
															"id": 39438,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The order details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1184,
																	"character": 20,
																	"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1184"
																}
															],
															"parameters": [
																{
																	"id": 39439,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The order's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 39440,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the order."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39441,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 41236,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/order/store/responses.ts",
																			"qualifiedName": "StoreOrderResponse"
																		},
																		"name": "StoreOrderResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 39442,
											"name": "acceptTransfer",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The method called for the original owner to accept the order transfer to a new owner."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.order.acceptTransfer(\n  \"order_123\",\n  {\n    token: \"transfer_token\"\n  },\n  {\n    Authorization: `Bearer ${token}`\n  }\n)\n.then(({ order }) => {\n  console.log(order)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1221,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1221"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39443,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1221,
															"character": 20,
															"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1221"
														}
													],
													"signatures": [
														{
															"id": 39444,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The order details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1221,
																	"character": 20,
																	"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1221"
																}
															],
															"parameters": [
																{
																	"id": 39445,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The order's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 39446,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The payload containing the transfer token."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/order/store/payloads.ts",
																			"qualifiedName": "StoreAcceptOrderTransfer"
																		},
																		"name": "StoreAcceptOrderTransfer",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39447,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the order."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39448,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 41236,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/order/store/responses.ts",
																			"qualifiedName": "StoreOrderResponse"
																		},
																		"name": "StoreOrderResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 39449,
											"name": "declineTransfer",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The method called for the original owner to decline the order transfer to a new owner."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.order.declineTransfer(\n  \"order_123\",\n  {\n    token: \"transfer_token\"\n  },\n  {\n    Authorization: `Bearer ${token}`\n  }\n)\n.then(({ order }) => {\n  console.log(order)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1260,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1260"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39450,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1260,
															"character": 21,
															"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1260"
														}
													],
													"signatures": [
														{
															"id": 39451,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The order details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1260,
																	"character": 21,
																	"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1260"
																}
															],
															"parameters": [
																{
																	"id": 39452,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The order's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 39453,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The payload containing the transfer token."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/order/store/payloads.ts",
																			"qualifiedName": "StoreDeclineOrderTransfer"
																		},
																		"name": "StoreDeclineOrderTransfer",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39454,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the order."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39455,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 41236,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/order/store/responses.ts",
																			"qualifiedName": "StoreOrderResponse"
																		},
																		"name": "StoreOrderResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												39416,
												39421,
												39429,
												39436,
												39442,
												39449
											]
										}
									],
									"sources": [
										{
											"fileName": "store/index.ts",
											"line": 1015,
											"character": 17,
											"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1015"
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 39456,
							"name": "customer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "customer"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "store/index.ts",
									"line": 1281,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1281"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 39457,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 39458,
											"name": "create",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method registers a customer. It sends a request to the [Register Customer](https://docs.medusajs.com/api/store#customers_postcustomers)\nAPI route.\n\nYou must use the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "Auth.register"
													},
													{
														"kind": "text",
														"text": " method first to retrieve a registration token. Then, pass that\nregistration token in the "
													},
													{
														"kind": "code",
														"text": "`headers`"
													},
													{
														"kind": "text",
														"text": " parameter of this method as an authorization bearer header.\n\nRelated guide: [How to register customer in storefront](https://docs.medusajs.com/resources/storefront-development/customers/register)"
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nconst token = await sdk.auth.register(\"customer\", \"emailpass\", {\n  \"email\": \"customer@gmail.com\",\n  \"password\": \"supersecret\"\n})\n\nsdk.store.customer.create(\n  {\n    \"email\": \"customer@gmail.com\"\n  },\n  {},\n  {\n    Authorization: `Bearer ${token}`\n  }\n)\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1315,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1315"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39459,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1315,
															"character": 12,
															"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1315"
														}
													],
													"signatures": [
														{
															"id": 39460,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The customer's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1315,
																	"character": 12,
																	"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1315"
																}
															],
															"parameters": [
																{
																	"id": 39461,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The customer's details."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/customer/store/payloads.ts",
																			"qualifiedName": "StoreCreateCustomer"
																		},
																		"name": "StoreCreateCustomer",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39462,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the customer."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39463,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request. This is where you include the authorization JWT registration token."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 41236,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/customer/store/responses.ts",
																			"qualifiedName": "StoreCustomerResponse"
																		},
																		"name": "StoreCustomerResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 39464,
											"name": "update",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method updates the logged-in customer's details. The customer must be logged in\nfirst with the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "Auth.login"
													},
													{
														"kind": "text",
														"text": " method.\n\nIt sends a request to the\n[Update Customer](https://docs.medusajs.com/api/store#customers_postcustomersme) API route.\n\nRelated guide: [How to edit customer's profile in the storefront](https://docs.medusajs.com/resources/storefront-development/customers/profile)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.customer.update({\n  first_name: \"John\"\n})\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1352,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1352"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39465,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1352,
															"character": 12,
															"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1352"
														}
													],
													"signatures": [
														{
															"id": 39466,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The customer's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1352,
																	"character": 12,
																	"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1352"
																}
															],
															"parameters": [
																{
																	"id": 39467,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The customer's details to update."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/customer/store/payloads.ts",
																			"qualifiedName": "StoreUpdateCustomer"
																		},
																		"name": "StoreUpdateCustomer",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39468,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the customer."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39469,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 41236,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/customer/store/responses.ts",
																			"qualifiedName": "StoreCustomerResponse"
																		},
																		"name": "StoreCustomerResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 39470,
											"name": "retrieve",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves the logged-in customer's details. The customer must be logged in\nfirst with the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "Auth.login"
													},
													{
														"kind": "text",
														"text": " method.\n\nIt sends a request to the [Get Logged-In Customer](https://docs.medusajs.com/api/store#customers_getcustomersme)\nAPI route."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.customer.retrieve()\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1384,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1384"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39471,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1384,
															"character": 14,
															"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1384"
														}
													],
													"signatures": [
														{
															"id": 39472,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The customer's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1384,
																	"character": 14,
																	"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1384"
																}
															],
															"parameters": [
																{
																	"id": 39473,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the customer."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39474,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 41236,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/customer/store/responses.ts",
																			"qualifiedName": "StoreCustomerResponse"
																		},
																		"name": "StoreCustomerResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 39475,
											"name": "createAddress",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method creates an address for the logged-in customer. The customer must be logged in\nfirst with the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "Auth.login"
													},
													{
														"kind": "text",
														"text": " method.\n\nIt sends a request to the [Create Address](https://docs.medusajs.com/api/store#customers_postcustomersmeaddresses)\nAPI route.\n\nRelated guides: [How to manage customer's addresses in the storefront](https://docs.medusajs.com/resources/storefront-development/customers/addresses)"
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.customer.createAddress({\n  country_code: \"us\"\n})\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1415,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1415"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39476,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1415,
															"character": 19,
															"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1415"
														}
													],
													"signatures": [
														{
															"id": 39477,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The customer's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1415,
																	"character": 19,
																	"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1415"
																}
															],
															"parameters": [
																{
																	"id": 39478,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The address's details."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/customer/store/payloads.ts",
																			"qualifiedName": "StoreCreateCustomerAddress"
																		},
																		"name": "StoreCreateCustomerAddress",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39479,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the customer."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39480,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 41236,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/customer/store/responses.ts",
																			"qualifiedName": "StoreCustomerResponse"
																		},
																		"name": "StoreCustomerResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 39481,
											"name": "updateAddress",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method updates the address of the logged-in customer. The customer must be logged in\nfirst with the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "Auth.login"
													},
													{
														"kind": "text",
														"text": " method.\n\nIt sends a request to the [Update Address](https://docs.medusajs.com/api/store#customers_postcustomersmeaddressesaddress_id)\nAPI route.\n\nRelated guides: [How to manage customer's addresses in the storefront](https://docs.medusajs.com/resources/storefront-development/customers/addresses)"
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.customer.updateAddress(\n  \"caddr_123\",\n  {\n    country_code: \"us\"\n  }\n)\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1456,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1456"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39482,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1456,
															"character": 19,
															"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1456"
														}
													],
													"signatures": [
														{
															"id": 39483,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The customer's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1456,
																	"character": 19,
																	"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1456"
																}
															],
															"parameters": [
																{
																	"id": 39484,
																	"name": "addressId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The ID of the address to update."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 39485,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The details to update in the address."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/customer/store/payloads.ts",
																			"qualifiedName": "StoreUpdateCustomerAddress"
																		},
																		"name": "StoreUpdateCustomerAddress",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39486,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the customer."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39487,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 41236,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/customer/store/responses.ts",
																			"qualifiedName": "StoreCustomerResponse"
																		},
																		"name": "StoreCustomerResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 39488,
											"name": "listAddress",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves the logged-in customer's address. The customer must be logged in\nfirst with the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "Auth.login"
													},
													{
														"kind": "text",
														"text": " method.\n\nIt sends a request to the [List Customer's Address](https://docs.medusajs.com/api/store#customers_getcustomersmeaddresses)\nAPI route.\n\nRelated guides: [How to manage customer's addresses in the storefront](https://docs.medusajs.com/resources/storefront-development/customers/addresses)"
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve the list of addresses:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.customer.listAddress()\n.then(({ addresses, count, offset, limit }) => {\n  console.log(addresses)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo configure the pagination, pass the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.customer.listAddress({\n  limit: 10,\n  offset: 10\n})\n.then(({ addresses, count, offset, limit }) => {\n  console.log(addresses)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nUsing the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " query parameter, you can specify the fields and relations to retrieve\nin each address:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.customer.listAddress({\n  fields: \"id,country_code\"\n})\n.then(({ addresses, count, offset, limit }) => {\n  console.log(addresses)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1523,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1523"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39489,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1523,
															"character": 17,
															"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1523"
														}
													],
													"signatures": [
														{
															"id": 39490,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The paginated list of addresses."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1523,
																	"character": 17,
																	"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1523"
																}
															],
															"parameters": [
																{
																	"id": 39491,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the addresses."
																			}
																		]
																	},
																	"type": {
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																					"qualifiedName": "FindParams"
																				},
																				"name": "FindParams",
																				"package": "@medusajs/types"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/http/customer/store/queries.ts",
																					"qualifiedName": "StoreCustomerAddressFilters"
																				},
																				"name": "StoreCustomerAddressFilters",
																				"package": "@medusajs/types"
																			}
																		]
																	}
																},
																{
																	"id": 39492,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 41236,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/customer/store/responses.ts",
																			"qualifiedName": "StoreCustomerAddressListResponse"
																		},
																		"name": "StoreCustomerAddressListResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 39493,
											"name": "retrieveAddress",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves an address of the logged-in customer. The customer must be logged in\nfirst with the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "Auth.login"
													},
													{
														"kind": "text",
														"text": " method.\n\nIt sends a request to the [Get Address](https://docs.medusajs.com/api/store#customers_getcustomersmeaddressesaddress_id)\nAPI route.\n\nRelated guides: [How to manage customer's addresses in the storefront](https://docs.medusajs.com/resources/storefront-development/customers/addresses)"
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve an address by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.customer.retrieveAddress(\n  \"caddr_123\"\n)\n.then(({ address }) => {\n  console.log(address)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.customer.retrieveAddress(\n  \"caddr_123\",\n  {\n    fields: \"id,country_code\"\n  }\n)\n.then(({ address }) => {\n  console.log(address)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1577,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1577"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39494,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1577,
															"character": 21,
															"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1577"
														}
													],
													"signatures": [
														{
															"id": 39495,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The address's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1577,
																	"character": 21,
																	"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1577"
																}
															],
															"parameters": [
																{
																	"id": 39496,
																	"name": "addressId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The address's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 39497,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the address."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 39498,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 41236,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/customer/store/responses.ts",
																			"qualifiedName": "StoreCustomerAddressResponse"
																		},
																		"name": "StoreCustomerAddressResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 39499,
											"name": "deleteAddress",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method deletes an address of the logged-in customer. The customer must be logged in\nfirst with the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "Auth.login"
													},
													{
														"kind": "text",
														"text": " method.\n\nIt sends a request to the [Remove Address](https://docs.medusajs.com/api/store#customers_deletecustomersmeaddressesaddress_id)\nAPI route.\n\nRelated guides: [How to manage customer's addresses in the storefront](https://docs.medusajs.com/resources/storefront-development/customers/addresses)"
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.customer.deleteAddress(\"caddr_123\")\n.then(({ deleted, parent: customer }) => {\n  console.log(customer)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1609,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1609"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39500,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1609,
															"character": 19,
															"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1609"
														}
													],
													"signatures": [
														{
															"id": 39501,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The deletion's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1609,
																	"character": 19,
																	"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1609"
																}
															],
															"parameters": [
																{
																	"id": 39502,
																	"name": "addressId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The address's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 39503,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 41236,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/customer/store/responses.ts",
																			"qualifiedName": "StoreCustomerAddressDeleteResponse"
																		},
																		"name": "StoreCustomerAddressDeleteResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												39458,
												39464,
												39470,
												39475,
												39481,
												39488,
												39493,
												39499
											]
										}
									],
									"sources": [
										{
											"fileName": "store/index.ts",
											"line": 1281,
											"character": 20,
											"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1281"
										}
									]
								}
							},
							"defaultValue": "..."
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39273,
								39286,
								39299,
								39312,
								39325,
								39386,
								39400,
								39414,
								39456
							]
						}
					],
					"sources": [
						{
							"fileName": "store/index.ts",
							"line": 5,
							"character": 13,
							"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L5"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"children": [
						39268
					]
				}
			],
			"sources": [
				{
					"fileName": "store/index.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/medusajs/medusa/blob/b9edc066c8486e8ec52e4f505968db1c558bc7b8/packages/core/js-sdk/src/store/index.ts#L1"
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"children": [
				39175,
				39222,
				39267
			]
		}
	],
	"packageName": "@medusajs/js-sdk",
	"symbolIdMap": {
		"39175": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": ""
		},
		"39176": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin"
		},
		"39177": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.__constructor"
		},
		"39178": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin"
		},
		"39179": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "client"
		},
		"39180": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.invite"
		},
		"39181": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.customer"
		},
		"39182": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.productCollection"
		},
		"39183": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.productCategory"
		},
		"39184": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.priceList"
		},
		"39185": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.pricePreference"
		},
		"39186": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.product"
		},
		"39187": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.productType"
		},
		"39188": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.upload"
		},
		"39189": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.region"
		},
		"39190": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.returnReason"
		},
		"39191": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.stockLocation"
		},
		"39192": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.salesChannel"
		},
		"39193": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.fulfillmentSet"
		},
		"39194": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.fulfillment"
		},
		"39195": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.fulfillmentProvider"
		},
		"39196": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.shippingOption"
		},
		"39197": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.shippingProfile"
		},
		"39198": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.inventoryItem"
		},
		"39199": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.notification"
		},
		"39200": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.order"
		},
		"39201": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.draftOrder"
		},
		"39202": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.orderEdit"
		},
		"39203": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.return"
		},
		"39204": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.claim"
		},
		"39205": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.exchange"
		},
		"39206": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.taxRate"
		},
		"39207": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.taxRegion"
		},
		"39208": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.store"
		},
		"39209": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.productTag"
		},
		"39210": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.user"
		},
		"39211": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.currency"
		},
		"39212": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.payment"
		},
		"39213": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.productVariant"
		},
		"39214": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.refundReason"
		},
		"39215": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.paymentCollection"
		},
		"39216": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.apiKey"
		},
		"39217": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.workflowExecution"
		},
		"39218": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.reservation"
		},
		"39219": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.customerGroup"
		},
		"39220": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.promotion"
		},
		"39221": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.campaign"
		},
		"39222": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": ""
		},
		"39223": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth"
		},
		"39224": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.__constructor"
		},
		"39225": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth"
		},
		"39226": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "client"
		},
		"39227": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "config"
		},
		"39230": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.register"
		},
		"39231": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.register"
		},
		"39232": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "actor"
		},
		"39233": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "method"
		},
		"39234": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "payload"
		},
		"39235": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.login"
		},
		"39236": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.login"
		},
		"39237": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "actor"
		},
		"39238": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "method"
		},
		"39239": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "payload"
		},
		"39240": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "__object"
		},
		"39241": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "__object.location"
		},
		"39242": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.callback"
		},
		"39243": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.callback"
		},
		"39244": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "actor"
		},
		"39245": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "method"
		},
		"39246": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "query"
		},
		"39247": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.refresh"
		},
		"39248": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.refresh"
		},
		"39249": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.logout"
		},
		"39250": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.logout"
		},
		"39251": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.resetPassword"
		},
		"39252": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.resetPassword"
		},
		"39253": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "actor"
		},
		"39254": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "provider"
		},
		"39255": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "body"
		},
		"39256": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "__type"
		},
		"39257": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "__type.identifier"
		},
		"39258": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.updateProvider"
		},
		"39259": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.updateProvider"
		},
		"39260": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "actor"
		},
		"39261": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "provider"
		},
		"39262": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "body"
		},
		"39263": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "token"
		},
		"39267": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": ""
		},
		"39268": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "Store"
		},
		"39273": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "Store.region"
		},
		"39274": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object"
		},
		"39275": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.list"
		},
		"39276": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39277": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39278": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"39279": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"39280": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.retrieve"
		},
		"39281": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39282": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39283": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"39284": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"39285": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"39286": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "Store.collection"
		},
		"39287": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object"
		},
		"39288": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.list"
		},
		"39289": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39290": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39291": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"39292": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"39293": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.retrieve"
		},
		"39294": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39295": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39296": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"39297": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"39298": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"39299": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "Store.category"
		},
		"39300": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object"
		},
		"39301": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.list"
		},
		"39302": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39303": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39304": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"39305": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"39306": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.retrieve"
		},
		"39307": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39308": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39309": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"39310": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"39311": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"39312": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "Store.product"
		},
		"39313": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object"
		},
		"39314": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.list"
		},
		"39315": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39316": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39317": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"39318": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"39319": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.retrieve"
		},
		"39320": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39321": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39322": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"39323": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"39324": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"39325": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "Store.cart"
		},
		"39326": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object"
		},
		"39327": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.create"
		},
		"39328": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39329": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39330": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"39331": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"39332": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"39333": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.update"
		},
		"39334": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39335": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39336": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"39337": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"39338": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"39339": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"39340": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.retrieve"
		},
		"39341": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39342": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39343": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"39344": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"39345": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"39346": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.createLineItem"
		},
		"39347": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39348": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39349": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "cartId"
		},
		"39350": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"39351": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"39352": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"39353": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.updateLineItem"
		},
		"39354": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39355": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39356": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "cartId"
		},
		"39357": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "lineItemId"
		},
		"39358": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"39359": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"39360": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"39361": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.deleteLineItem"
		},
		"39362": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39363": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39364": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "cartId"
		},
		"39365": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "lineItemId"
		},
		"39366": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"39367": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.addShippingMethod"
		},
		"39368": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39369": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39370": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "cartId"
		},
		"39371": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"39372": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"39373": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"39374": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.complete"
		},
		"39375": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39376": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39377": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "cartId"
		},
		"39378": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"39379": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"39380": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.transferCart"
		},
		"39381": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39382": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39383": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"39384": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"39385": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"39386": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "Store.fulfillment"
		},
		"39387": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object"
		},
		"39388": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.listCartOptions"
		},
		"39389": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39390": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39391": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"39392": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"39393": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.calculate"
		},
		"39394": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39395": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39396": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"39397": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"39398": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"39399": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"39400": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "Store.payment"
		},
		"39401": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object"
		},
		"39402": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.listPaymentProviders"
		},
		"39403": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39404": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39405": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"39406": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"39407": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.initiatePaymentSession"
		},
		"39408": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39409": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39410": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "cart"
		},
		"39411": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"39412": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"39413": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"39414": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "Store.order"
		},
		"39415": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object"
		},
		"39416": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.list"
		},
		"39417": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39418": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39419": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"39420": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"39421": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.retrieve"
		},
		"39422": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39423": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39424": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"39425": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"39426": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"39427": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__type"
		},
		"39428": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__type.order"
		},
		"39429": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.requestTransfer"
		},
		"39430": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39431": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39432": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"39433": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"39434": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"39435": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"39436": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.cancelTransfer"
		},
		"39437": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39438": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39439": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"39440": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"39441": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"39442": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.acceptTransfer"
		},
		"39443": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39444": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39445": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"39446": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"39447": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"39448": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"39449": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.declineTransfer"
		},
		"39450": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39451": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39452": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"39453": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"39454": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"39455": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"39456": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "Store.customer"
		},
		"39457": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object"
		},
		"39458": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.create"
		},
		"39459": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39460": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39461": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"39462": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"39463": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"39464": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.update"
		},
		"39465": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39466": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39467": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"39468": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"39469": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"39470": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.retrieve"
		},
		"39471": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39472": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39473": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"39474": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"39475": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.createAddress"
		},
		"39476": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39477": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39478": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"39479": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"39480": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"39481": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.updateAddress"
		},
		"39482": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39483": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39484": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "addressId"
		},
		"39485": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"39486": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"39487": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"39488": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.listAddress"
		},
		"39489": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39490": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39491": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"39492": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"39493": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.retrieveAddress"
		},
		"39494": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39495": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39496": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "addressId"
		},
		"39497": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"39498": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"39499": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.deleteAddress"
		},
		"39500": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39501": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"39502": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "addressId"
		},
		"39503": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"39504": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite"
		},
		"39505": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.__constructor"
		},
		"39506": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite"
		},
		"39507": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "client"
		},
		"39508": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.client"
		},
		"39509": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.accept"
		},
		"39510": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.accept"
		},
		"39511": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "input"
		},
		"39512": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "__type"
		},
		"39513": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "__type.invite_token"
		},
		"39514": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "query"
		},
		"39515": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "headers"
		},
		"39516": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.create"
		},
		"39517": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.create"
		},
		"39518": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "body"
		},
		"39519": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "query"
		},
		"39520": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "headers"
		},
		"39521": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.retrieve"
		},
		"39522": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.retrieve"
		},
		"39523": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "id"
		},
		"39524": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "query"
		},
		"39525": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "headers"
		},
		"39526": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.list"
		},
		"39527": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.list"
		},
		"39528": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "queryParams"
		},
		"39529": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "headers"
		},
		"39530": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.resend"
		},
		"39531": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.resend"
		},
		"39532": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "id"
		},
		"39533": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "headers"
		},
		"39534": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.delete"
		},
		"39535": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.delete"
		},
		"39536": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "id"
		},
		"39537": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "headers"
		},
		"39538": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer"
		},
		"39539": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.__constructor"
		},
		"39540": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer"
		},
		"39541": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "client"
		},
		"39542": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.client"
		},
		"39543": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.create"
		},
		"39544": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.create"
		},
		"39545": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "body"
		},
		"39546": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "query"
		},
		"39547": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "headers"
		},
		"39548": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.update"
		},
		"39549": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.update"
		},
		"39550": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "id"
		},
		"39551": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "body"
		},
		"39552": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "query"
		},
		"39553": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "headers"
		},
		"39554": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.list"
		},
		"39555": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.list"
		},
		"39556": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "queryParams"
		},
		"39557": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "headers"
		},
		"39558": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.retrieve"
		},
		"39559": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.retrieve"
		},
		"39560": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "id"
		},
		"39561": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "query"
		},
		"39562": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "headers"
		},
		"39563": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.delete"
		},
		"39564": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.delete"
		},
		"39565": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "id"
		},
		"39566": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "headers"
		},
		"39567": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.batchCustomerGroups"
		},
		"39568": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.batchCustomerGroups"
		},
		"39569": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "id"
		},
		"39570": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "body"
		},
		"39571": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "headers"
		},
		"39572": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection"
		},
		"39573": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.__constructor"
		},
		"39574": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection"
		},
		"39575": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "client"
		},
		"39576": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.client"
		},
		"39577": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.create"
		},
		"39578": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.create"
		},
		"39579": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "body"
		},
		"39580": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "query"
		},
		"39581": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "headers"
		},
		"39582": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.update"
		},
		"39583": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.update"
		},
		"39584": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "id"
		},
		"39585": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "body"
		},
		"39586": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "query"
		},
		"39587": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "headers"
		},
		"39588": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.list"
		},
		"39589": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.list"
		},
		"39590": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "queryParams"
		},
		"39591": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "headers"
		},
		"39592": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.retrieve"
		},
		"39593": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.retrieve"
		},
		"39594": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "id"
		},
		"39595": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "query"
		},
		"39596": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "headers"
		},
		"39597": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.delete"
		},
		"39598": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.delete"
		},
		"39599": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "id"
		},
		"39600": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "headers"
		},
		"39601": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.updateProducts"
		},
		"39602": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.updateProducts"
		},
		"39603": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "id"
		},
		"39604": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "body"
		},
		"39605": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "headers"
		},
		"39606": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory"
		},
		"39607": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.__constructor"
		},
		"39608": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory"
		},
		"39609": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "client"
		},
		"39610": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.client"
		},
		"39611": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.create"
		},
		"39612": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.create"
		},
		"39613": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "body"
		},
		"39614": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "query"
		},
		"39615": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "headers"
		},
		"39616": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.update"
		},
		"39617": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.update"
		},
		"39618": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "id"
		},
		"39619": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "body"
		},
		"39620": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "query"
		},
		"39621": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "headers"
		},
		"39622": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.list"
		},
		"39623": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.list"
		},
		"39624": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "query"
		},
		"39625": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "headers"
		},
		"39626": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.retrieve"
		},
		"39627": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.retrieve"
		},
		"39628": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "id"
		},
		"39629": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "query"
		},
		"39630": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "headers"
		},
		"39631": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.delete"
		},
		"39632": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.delete"
		},
		"39633": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "id"
		},
		"39634": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "headers"
		},
		"39635": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.updateProducts"
		},
		"39636": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.updateProducts"
		},
		"39637": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "id"
		},
		"39638": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "body"
		},
		"39639": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "query"
		},
		"39640": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "headers"
		},
		"39641": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList"
		},
		"39642": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.__constructor"
		},
		"39643": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList"
		},
		"39644": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "client"
		},
		"39645": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.client"
		},
		"39646": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.retrieve"
		},
		"39647": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.retrieve"
		},
		"39648": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "id"
		},
		"39649": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "query"
		},
		"39650": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "headers"
		},
		"39651": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.list"
		},
		"39652": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.list"
		},
		"39653": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "query"
		},
		"39654": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "headers"
		},
		"39655": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.create"
		},
		"39656": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.create"
		},
		"39657": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "body"
		},
		"39658": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "query"
		},
		"39659": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "headers"
		},
		"39660": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.update"
		},
		"39661": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.update"
		},
		"39662": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "id"
		},
		"39663": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "body"
		},
		"39664": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "query"
		},
		"39665": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "headers"
		},
		"39666": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.delete"
		},
		"39667": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.delete"
		},
		"39668": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "id"
		},
		"39669": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "headers"
		},
		"39670": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.batchPrices"
		},
		"39671": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.batchPrices"
		},
		"39672": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "id"
		},
		"39673": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "body"
		},
		"39674": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "query"
		},
		"39675": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "headers"
		},
		"39676": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.linkProducts"
		},
		"39677": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.linkProducts"
		},
		"39678": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "id"
		},
		"39679": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "body"
		},
		"39680": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "query"
		},
		"39681": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "headers"
		},
		"39682": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference"
		},
		"39683": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference.__constructor"
		},
		"39684": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference"
		},
		"39685": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "client"
		},
		"39686": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference.client"
		},
		"39687": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference.retrieve"
		},
		"39688": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference.retrieve"
		},
		"39689": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "id"
		},
		"39690": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "query"
		},
		"39691": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "headers"
		},
		"39692": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference.list"
		},
		"39693": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference.list"
		},
		"39694": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "query"
		},
		"39695": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "headers"
		},
		"39696": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference.create"
		},
		"39697": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference.create"
		},
		"39698": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "body"
		},
		"39699": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "query"
		},
		"39700": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "headers"
		},
		"39701": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference.update"
		},
		"39702": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference.update"
		},
		"39703": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "id"
		},
		"39704": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "body"
		},
		"39705": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "query"
		},
		"39706": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "headers"
		},
		"39707": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference.delete"
		},
		"39708": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference.delete"
		},
		"39709": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "id"
		},
		"39710": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "headers"
		},
		"39711": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product"
		},
		"39712": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.__constructor"
		},
		"39713": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product"
		},
		"39714": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "client"
		},
		"39715": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.client"
		},
		"39716": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.import"
		},
		"39717": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.import"
		},
		"39718": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "body"
		},
		"39719": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"39720": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"39721": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"39722": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.confirmImport"
		},
		"39723": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.confirmImport"
		},
		"39724": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "transactionId"
		},
		"39725": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"39726": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"39727": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"39728": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"39729": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.export"
		},
		"39730": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.export"
		},
		"39731": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "body"
		},
		"39732": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"39733": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"39734": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.batch"
		},
		"39735": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.batch"
		},
		"39736": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "body"
		},
		"39737": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"39738": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"39739": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.create"
		},
		"39740": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.create"
		},
		"39741": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "body"
		},
		"39742": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"39743": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"39744": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.update"
		},
		"39745": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.update"
		},
		"39746": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "id"
		},
		"39747": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "body"
		},
		"39748": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"39749": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"39750": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.list"
		},
		"39751": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.list"
		},
		"39752": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "queryParams"
		},
		"39753": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"39754": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.retrieve"
		},
		"39755": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.retrieve"
		},
		"39756": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "id"
		},
		"39757": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"39758": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"39759": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.delete"
		},
		"39760": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.delete"
		},
		"39761": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "id"
		},
		"39762": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"39763": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.batchVariants"
		},
		"39764": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.batchVariants"
		},
		"39765": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "productId"
		},
		"39766": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "body"
		},
		"39767": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"39768": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"39769": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.createVariant"
		},
		"39770": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.createVariant"
		},
		"39771": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "productId"
		},
		"39772": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "body"
		},
		"39773": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"39774": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"39775": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.updateVariant"
		},
		"39776": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.updateVariant"
		},
		"39777": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "productId"
		},
		"39778": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "id"
		},
		"39779": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "body"
		},
		"39780": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"39781": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"39782": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.listVariants"
		},
		"39783": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.listVariants"
		},
		"39784": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "productId"
		},
		"39785": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"39786": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"39787": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.retrieveVariant"
		},
		"39788": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.retrieveVariant"
		},
		"39789": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "productId"
		},
		"39790": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "id"
		},
		"39791": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"39792": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"39793": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.deleteVariant"
		},
		"39794": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.deleteVariant"
		},
		"39795": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "productId"
		},
		"39796": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "id"
		},
		"39797": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"39798": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.batchVariantInventoryItems"
		},
		"39799": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.batchVariantInventoryItems"
		},
		"39800": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "productId"
		},
		"39801": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "body"
		},
		"39802": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"39803": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"39804": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.createOption"
		},
		"39805": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.createOption"
		},
		"39806": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "productId"
		},
		"39807": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "body"
		},
		"39808": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"39809": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"39810": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.updateOption"
		},
		"39811": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.updateOption"
		},
		"39812": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "productId"
		},
		"39813": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "id"
		},
		"39814": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "body"
		},
		"39815": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"39816": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"39817": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.listOptions"
		},
		"39818": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.listOptions"
		},
		"39819": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "productId"
		},
		"39820": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"39821": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"39822": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.retrieveOption"
		},
		"39823": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.retrieveOption"
		},
		"39824": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "productId"
		},
		"39825": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "id"
		},
		"39826": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"39827": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"39828": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.deleteOption"
		},
		"39829": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.deleteOption"
		},
		"39830": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "productId"
		},
		"39831": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "id"
		},
		"39832": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"39833": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType"
		},
		"39834": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType.__constructor"
		},
		"39835": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType"
		},
		"39836": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "client"
		},
		"39837": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType.client"
		},
		"39838": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType.create"
		},
		"39839": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType.create"
		},
		"39840": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "body"
		},
		"39841": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "query"
		},
		"39842": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "headers"
		},
		"39843": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType.update"
		},
		"39844": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType.update"
		},
		"39845": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "id"
		},
		"39846": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "body"
		},
		"39847": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "query"
		},
		"39848": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "headers"
		},
		"39849": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType.list"
		},
		"39850": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType.list"
		},
		"39851": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "query"
		},
		"39852": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "headers"
		},
		"39853": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType.retrieve"
		},
		"39854": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType.retrieve"
		},
		"39855": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "id"
		},
		"39856": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "query"
		},
		"39857": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "headers"
		},
		"39858": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType.delete"
		},
		"39859": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType.delete"
		},
		"39860": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "id"
		},
		"39861": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "headers"
		},
		"39862": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "Upload"
		},
		"39863": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "Upload.__constructor"
		},
		"39864": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "Upload"
		},
		"39865": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "client"
		},
		"39866": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "Upload.client"
		},
		"39867": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "Upload.create"
		},
		"39868": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "Upload.create"
		},
		"39869": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "body"
		},
		"39870": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "query"
		},
		"39871": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "headers"
		},
		"39872": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "__type"
		},
		"39873": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "__type.files"
		},
		"39874": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "Upload.retrieve"
		},
		"39875": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "Upload.retrieve"
		},
		"39876": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "id"
		},
		"39877": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "query"
		},
		"39878": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "headers"
		},
		"39879": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "__type"
		},
		"39880": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "__type.file"
		},
		"39881": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "Upload.delete"
		},
		"39882": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "Upload.delete"
		},
		"39883": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "id"
		},
		"39884": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "headers"
		},
		"39885": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region"
		},
		"39886": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region.__constructor"
		},
		"39887": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region"
		},
		"39888": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "client"
		},
		"39889": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region.client"
		},
		"39890": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region.create"
		},
		"39891": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region.create"
		},
		"39892": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "body"
		},
		"39893": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "query"
		},
		"39894": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "headers"
		},
		"39895": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "__type"
		},
		"39896": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "__type.region"
		},
		"39897": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region.update"
		},
		"39898": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region.update"
		},
		"39899": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "id"
		},
		"39900": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "body"
		},
		"39901": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "query"
		},
		"39902": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "headers"
		},
		"39903": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "__type"
		},
		"39904": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "__type.region"
		},
		"39905": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region.list"
		},
		"39906": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region.list"
		},
		"39907": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "queryParams"
		},
		"39908": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "headers"
		},
		"39909": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "__type"
		},
		"39910": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "__type.regions"
		},
		"39911": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region.retrieve"
		},
		"39912": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region.retrieve"
		},
		"39913": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "id"
		},
		"39914": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "query"
		},
		"39915": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "headers"
		},
		"39916": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "__type"
		},
		"39917": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "__type.region"
		},
		"39918": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region.delete"
		},
		"39919": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region.delete"
		},
		"39920": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "id"
		},
		"39921": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "headers"
		},
		"39922": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason"
		},
		"39923": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason.__constructor"
		},
		"39924": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason"
		},
		"39925": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "client"
		},
		"39926": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason.client"
		},
		"39927": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason.list"
		},
		"39928": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason.list"
		},
		"39929": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "query"
		},
		"39930": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "headers"
		},
		"39931": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason.retrieve"
		},
		"39932": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason.retrieve"
		},
		"39933": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "id"
		},
		"39934": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "query"
		},
		"39935": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "headers"
		},
		"39936": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason.create"
		},
		"39937": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason.create"
		},
		"39938": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "body"
		},
		"39939": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "query"
		},
		"39940": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "headers"
		},
		"39941": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason.update"
		},
		"39942": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason.update"
		},
		"39943": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "id"
		},
		"39944": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "body"
		},
		"39945": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "query"
		},
		"39946": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "headers"
		},
		"39947": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason.delete"
		},
		"39948": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason.delete"
		},
		"39949": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "id"
		},
		"39950": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "query"
		},
		"39951": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "headers"
		},
		"39952": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation"
		},
		"39953": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.__constructor"
		},
		"39954": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation"
		},
		"39955": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "client"
		},
		"39956": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.client"
		},
		"39957": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.create"
		},
		"39958": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.create"
		},
		"39959": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "body"
		},
		"39960": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "query"
		},
		"39961": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "headers"
		},
		"39962": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.update"
		},
		"39963": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.update"
		},
		"39964": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "id"
		},
		"39965": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "body"
		},
		"39966": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "query"
		},
		"39967": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "headers"
		},
		"39968": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.delete"
		},
		"39969": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.delete"
		},
		"39970": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "id"
		},
		"39971": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "headers"
		},
		"39972": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.retrieve"
		},
		"39973": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.retrieve"
		},
		"39974": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "id"
		},
		"39975": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "query"
		},
		"39976": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "headers"
		},
		"39977": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.list"
		},
		"39978": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.list"
		},
		"39979": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "query"
		},
		"39980": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "headers"
		},
		"39981": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.updateSalesChannels"
		},
		"39982": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.updateSalesChannels"
		},
		"39983": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "id"
		},
		"39984": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "body"
		},
		"39985": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "headers"
		},
		"39986": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.createFulfillmentSet"
		},
		"39987": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.createFulfillmentSet"
		},
		"39988": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "id"
		},
		"39989": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "body"
		},
		"39990": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "headers"
		},
		"39991": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.updateFulfillmentProviders"
		},
		"39992": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.updateFulfillmentProviders"
		},
		"39993": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "id"
		},
		"39994": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "body"
		},
		"39995": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "headers"
		},
		"39996": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel"
		},
		"39997": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.__constructor"
		},
		"39998": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel"
		},
		"39999": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "client"
		},
		"40000": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.client"
		},
		"40001": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.create"
		},
		"40002": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.create"
		},
		"40003": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "body"
		},
		"40004": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "query"
		},
		"40005": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "headers"
		},
		"40006": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.update"
		},
		"40007": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.update"
		},
		"40008": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "id"
		},
		"40009": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "body"
		},
		"40010": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "query"
		},
		"40011": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "headers"
		},
		"40012": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.delete"
		},
		"40013": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.delete"
		},
		"40014": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "id"
		},
		"40015": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "headers"
		},
		"40016": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.retrieve"
		},
		"40017": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.retrieve"
		},
		"40018": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "id"
		},
		"40019": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "query"
		},
		"40020": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "headers"
		},
		"40021": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.list"
		},
		"40022": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.list"
		},
		"40023": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "query"
		},
		"40024": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "headers"
		},
		"40025": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.updateProducts"
		},
		"40026": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.updateProducts"
		},
		"40027": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "id"
		},
		"40028": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "body"
		},
		"40029": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "headers"
		},
		"40030": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.batchProducts"
		},
		"40031": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.batchProducts"
		},
		"40032": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "id"
		},
		"40033": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "body"
		},
		"40034": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "headers"
		},
		"40035": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet"
		},
		"40036": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet.__constructor"
		},
		"40037": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet"
		},
		"40038": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "client"
		},
		"40039": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet.client"
		},
		"40040": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet.delete"
		},
		"40041": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet.delete"
		},
		"40042": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "id"
		},
		"40043": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "headers"
		},
		"40044": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet.createServiceZone"
		},
		"40045": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet.createServiceZone"
		},
		"40046": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "id"
		},
		"40047": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "body"
		},
		"40048": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "query"
		},
		"40049": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "headers"
		},
		"40050": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet.retrieveServiceZone"
		},
		"40051": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet.retrieveServiceZone"
		},
		"40052": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "fulfillmentSetId"
		},
		"40053": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "serviceZoneId"
		},
		"40054": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "query"
		},
		"40055": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "headers"
		},
		"40056": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet.updateServiceZone"
		},
		"40057": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet.updateServiceZone"
		},
		"40058": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "fulfillmentSetId"
		},
		"40059": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "serviceZoneId"
		},
		"40060": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "body"
		},
		"40061": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "query"
		},
		"40062": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "headers"
		},
		"40063": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet.deleteServiceZone"
		},
		"40064": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet.deleteServiceZone"
		},
		"40065": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "fulfillmentSetId"
		},
		"40066": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "serviceZoneId"
		},
		"40067": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "headers"
		},
		"40068": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "Fulfillment"
		},
		"40069": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "Fulfillment.__constructor"
		},
		"40070": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "Fulfillment"
		},
		"40071": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "client"
		},
		"40072": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "Fulfillment.client"
		},
		"40073": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "Fulfillment.create"
		},
		"40074": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "Fulfillment.create"
		},
		"40075": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "body"
		},
		"40076": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "query"
		},
		"40077": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "headers"
		},
		"40078": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "Fulfillment.cancel"
		},
		"40079": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "Fulfillment.cancel"
		},
		"40080": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "id"
		},
		"40081": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "query"
		},
		"40082": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "headers"
		},
		"40083": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "Fulfillment.createShipment"
		},
		"40084": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "Fulfillment.createShipment"
		},
		"40085": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "id"
		},
		"40086": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "body"
		},
		"40087": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "query"
		},
		"40088": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "headers"
		},
		"40089": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProvider"
		},
		"40090": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProvider.__constructor"
		},
		"40091": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProvider"
		},
		"40092": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "client"
		},
		"40093": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProvider.client"
		},
		"40094": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProvider.list"
		},
		"40095": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProvider.list"
		},
		"40096": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "query"
		},
		"40097": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "headers"
		},
		"40098": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProvider.listFulfillmentOptions"
		},
		"40099": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProvider.listFulfillmentOptions"
		},
		"40100": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "id"
		},
		"40101": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "headers"
		},
		"40102": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption"
		},
		"40103": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.__constructor"
		},
		"40104": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption"
		},
		"40105": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "client"
		},
		"40106": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.client"
		},
		"40107": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.create"
		},
		"40108": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.create"
		},
		"40109": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "body"
		},
		"40110": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "query"
		},
		"40111": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "headers"
		},
		"40112": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.retrieve"
		},
		"40113": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.retrieve"
		},
		"40114": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "id"
		},
		"40115": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "query"
		},
		"40116": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "headers"
		},
		"40117": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.update"
		},
		"40118": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.update"
		},
		"40119": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "id"
		},
		"40120": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "body"
		},
		"40121": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "query"
		},
		"40122": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "headers"
		},
		"40123": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.delete"
		},
		"40124": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.delete"
		},
		"40125": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "id"
		},
		"40126": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "headers"
		},
		"40127": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.list"
		},
		"40128": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.list"
		},
		"40129": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "query"
		},
		"40130": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "headers"
		},
		"40131": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.updateRules"
		},
		"40132": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.updateRules"
		},
		"40133": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "id"
		},
		"40134": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "body"
		},
		"40135": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "headers"
		},
		"40136": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile"
		},
		"40137": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.__constructor"
		},
		"40138": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile"
		},
		"40139": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "client"
		},
		"40140": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.client"
		},
		"40141": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.create"
		},
		"40142": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.create"
		},
		"40143": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "body"
		},
		"40144": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "query"
		},
		"40145": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "headers"
		},
		"40146": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.update"
		},
		"40147": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.update"
		},
		"40148": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "id"
		},
		"40149": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "body"
		},
		"40150": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "query"
		},
		"40151": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "headers"
		},
		"40152": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.delete"
		},
		"40153": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.delete"
		},
		"40154": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "id"
		},
		"40155": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "headers"
		},
		"40156": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.list"
		},
		"40157": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.list"
		},
		"40158": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "query"
		},
		"40159": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "headers"
		},
		"40160": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.retrieve"
		},
		"40161": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.retrieve"
		},
		"40162": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "id"
		},
		"40163": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "query"
		},
		"40164": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "headers"
		},
		"40165": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem"
		},
		"40166": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.__constructor"
		},
		"40167": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem"
		},
		"40168": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "client"
		},
		"40169": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.client"
		},
		"40170": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.create"
		},
		"40171": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.create"
		},
		"40172": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "body"
		},
		"40173": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "query"
		},
		"40174": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "headers"
		},
		"40175": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.update"
		},
		"40176": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.update"
		},
		"40177": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "id"
		},
		"40178": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "body"
		},
		"40179": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "query"
		},
		"40180": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "headers"
		},
		"40181": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.list"
		},
		"40182": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.list"
		},
		"40183": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "query"
		},
		"40184": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "headers"
		},
		"40185": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.retrieve"
		},
		"40186": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.retrieve"
		},
		"40187": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "id"
		},
		"40188": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "query"
		},
		"40189": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "headers"
		},
		"40190": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.delete"
		},
		"40191": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.delete"
		},
		"40192": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "id"
		},
		"40193": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "headers"
		},
		"40194": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.listLevels"
		},
		"40195": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.listLevels"
		},
		"40196": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "id"
		},
		"40197": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "query"
		},
		"40198": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "headers"
		},
		"40199": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.updateLevel"
		},
		"40200": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.updateLevel"
		},
		"40201": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "id"
		},
		"40202": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "locationId"
		},
		"40203": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "body"
		},
		"40204": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "query"
		},
		"40205": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "headers"
		},
		"40206": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.deleteLevel"
		},
		"40207": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.deleteLevel"
		},
		"40208": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "id"
		},
		"40209": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "locationId"
		},
		"40210": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "headers"
		},
		"40211": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.batchUpdateLevels"
		},
		"40212": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.batchUpdateLevels"
		},
		"40213": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "id"
		},
		"40214": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "body"
		},
		"40215": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "query"
		},
		"40216": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "headers"
		},
		"40217": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.batchInventoryItemLocationLevels"
		},
		"40218": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.batchInventoryItemLocationLevels"
		},
		"40219": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "id"
		},
		"40220": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "body"
		},
		"40221": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "headers"
		},
		"40222": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.batchInventoryItemsLocationLevels"
		},
		"40223": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.batchInventoryItemsLocationLevels"
		},
		"40224": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "body"
		},
		"40225": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "headers"
		},
		"40226": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "Notification"
		},
		"40227": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "Notification.__constructor"
		},
		"40228": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "Notification"
		},
		"40229": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "client"
		},
		"40230": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "Notification.client"
		},
		"40231": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "Notification.retrieve"
		},
		"40232": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "Notification.retrieve"
		},
		"40233": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "id"
		},
		"40234": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "query"
		},
		"40235": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "headers"
		},
		"40236": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "Notification.list"
		},
		"40237": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "Notification.list"
		},
		"40238": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "query"
		},
		"40239": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "headers"
		},
		"40240": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order"
		},
		"40241": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.__constructor"
		},
		"40242": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order"
		},
		"40243": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "client"
		},
		"40244": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.client"
		},
		"40245": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.retrieve"
		},
		"40246": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.retrieve"
		},
		"40247": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"40248": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "query"
		},
		"40249": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"40250": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.update"
		},
		"40251": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.update"
		},
		"40252": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"40253": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "body"
		},
		"40254": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"40255": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.retrievePreview"
		},
		"40256": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.retrievePreview"
		},
		"40257": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"40258": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "query"
		},
		"40259": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"40260": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.list"
		},
		"40261": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.list"
		},
		"40262": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "queryParams"
		},
		"40263": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"40264": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.cancel"
		},
		"40265": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.cancel"
		},
		"40266": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"40267": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"40268": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.requestTransfer"
		},
		"40269": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.requestTransfer"
		},
		"40270": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"40271": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "body"
		},
		"40272": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"40273": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.cancelTransfer"
		},
		"40274": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.cancelTransfer"
		},
		"40275": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"40276": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"40277": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.createFulfillment"
		},
		"40278": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.createFulfillment"
		},
		"40279": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"40280": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "body"
		},
		"40281": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "query"
		},
		"40282": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"40283": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.cancelFulfillment"
		},
		"40284": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.cancelFulfillment"
		},
		"40285": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"40286": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "fulfillmentId"
		},
		"40287": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "body"
		},
		"40288": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"40289": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.createShipment"
		},
		"40290": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.createShipment"
		},
		"40291": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"40292": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "fulfillmentId"
		},
		"40293": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "body"
		},
		"40294": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "query"
		},
		"40295": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"40296": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.markAsDelivered"
		},
		"40297": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.markAsDelivered"
		},
		"40298": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"40299": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "fulfillmentId"
		},
		"40300": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "query"
		},
		"40301": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"40302": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.listChanges"
		},
		"40303": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.listChanges"
		},
		"40304": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"40305": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "queryParams"
		},
		"40306": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"40307": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.listLineItems"
		},
		"40308": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.listLineItems"
		},
		"40309": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"40310": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "queryParams"
		},
		"40311": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"40312": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder"
		},
		"40313": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.__constructor"
		},
		"40314": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder"
		},
		"40315": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "client"
		},
		"40316": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.client"
		},
		"40317": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.retrieve"
		},
		"40318": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.retrieve"
		},
		"40319": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"40320": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "query"
		},
		"40321": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"40322": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.list"
		},
		"40323": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.list"
		},
		"40324": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "queryParams"
		},
		"40325": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"40326": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.create"
		},
		"40327": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.create"
		},
		"40328": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "body"
		},
		"40329": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "query"
		},
		"40330": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"40331": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.update"
		},
		"40332": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.update"
		},
		"40333": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"40334": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "body"
		},
		"40335": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "query"
		},
		"40336": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"40337": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit"
		},
		"40338": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.__constructor"
		},
		"40339": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit"
		},
		"40340": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "client"
		},
		"40341": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.client"
		},
		"40342": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.initiateRequest"
		},
		"40343": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.initiateRequest"
		},
		"40344": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "body"
		},
		"40345": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "query"
		},
		"40346": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "headers"
		},
		"40347": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.request"
		},
		"40348": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.request"
		},
		"40349": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "id"
		},
		"40350": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "query"
		},
		"40351": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "headers"
		},
		"40352": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.confirm"
		},
		"40353": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.confirm"
		},
		"40354": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "id"
		},
		"40355": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "query"
		},
		"40356": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "headers"
		},
		"40357": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.cancelRequest"
		},
		"40358": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.cancelRequest"
		},
		"40359": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "id"
		},
		"40360": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "query"
		},
		"40361": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "headers"
		},
		"40362": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.addItems"
		},
		"40363": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.addItems"
		},
		"40364": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "id"
		},
		"40365": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "body"
		},
		"40366": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "query"
		},
		"40367": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "headers"
		},
		"40368": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.updateOriginalItem"
		},
		"40369": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.updateOriginalItem"
		},
		"40370": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "id"
		},
		"40371": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "itemId"
		},
		"40372": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "body"
		},
		"40373": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "query"
		},
		"40374": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "headers"
		},
		"40375": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.updateAddedItem"
		},
		"40376": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.updateAddedItem"
		},
		"40377": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "id"
		},
		"40378": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "actionId"
		},
		"40379": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "body"
		},
		"40380": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "query"
		},
		"40381": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "headers"
		},
		"40382": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.removeAddedItem"
		},
		"40383": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.removeAddedItem"
		},
		"40384": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "id"
		},
		"40385": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "actionId"
		},
		"40386": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "query"
		},
		"40387": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "headers"
		},
		"40388": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return"
		},
		"40389": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.__constructor"
		},
		"40390": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return"
		},
		"40391": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "client"
		},
		"40392": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.client"
		},
		"40393": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.list"
		},
		"40394": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.list"
		},
		"40395": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"40396": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"40397": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.retrieve"
		},
		"40398": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.retrieve"
		},
		"40399": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"40400": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"40401": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"40402": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.initiateRequest"
		},
		"40403": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.initiateRequest"
		},
		"40404": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"40405": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"40406": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"40407": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.cancel"
		},
		"40408": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.cancel"
		},
		"40409": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"40410": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"40411": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"40412": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.cancelRequest"
		},
		"40413": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.cancelRequest"
		},
		"40414": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"40415": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"40416": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"40417": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.addReturnItem"
		},
		"40418": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.addReturnItem"
		},
		"40419": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"40420": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"40421": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"40422": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"40423": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.updateReturnItem"
		},
		"40424": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.updateReturnItem"
		},
		"40425": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"40426": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "actionId"
		},
		"40427": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"40428": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"40429": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"40430": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.removeReturnItem"
		},
		"40431": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.removeReturnItem"
		},
		"40432": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"40433": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "actionId"
		},
		"40434": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"40435": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"40436": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.addReturnShipping"
		},
		"40437": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.addReturnShipping"
		},
		"40438": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"40439": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"40440": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"40441": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"40442": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.updateReturnShipping"
		},
		"40443": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.updateReturnShipping"
		},
		"40444": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"40445": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "actionId"
		},
		"40446": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"40447": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"40448": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"40449": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.deleteReturnShipping"
		},
		"40450": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.deleteReturnShipping"
		},
		"40451": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"40452": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "actionId"
		},
		"40453": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"40454": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"40455": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.updateRequest"
		},
		"40456": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.updateRequest"
		},
		"40457": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"40458": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"40459": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"40460": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"40461": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.confirmRequest"
		},
		"40462": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.confirmRequest"
		},
		"40463": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"40464": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"40465": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"40466": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"40467": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.initiateReceive"
		},
		"40468": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.initiateReceive"
		},
		"40469": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"40470": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"40471": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"40472": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"40473": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.receiveItems"
		},
		"40474": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.receiveItems"
		},
		"40475": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"40476": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"40477": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"40478": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"40479": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.updateReceiveItem"
		},
		"40480": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.updateReceiveItem"
		},
		"40481": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"40482": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "actionId"
		},
		"40483": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"40484": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"40485": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"40486": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.removeReceiveItem"
		},
		"40487": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.removeReceiveItem"
		},
		"40488": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"40489": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "actionId"
		},
		"40490": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"40491": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"40492": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.dismissItems"
		},
		"40493": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.dismissItems"
		},
		"40494": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"40495": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"40496": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"40497": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"40498": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.updateDismissItem"
		},
		"40499": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.updateDismissItem"
		},
		"40500": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"40501": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "actionId"
		},
		"40502": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"40503": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"40504": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"40505": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.removeDismissItem"
		},
		"40506": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.removeDismissItem"
		},
		"40507": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"40508": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "actionId"
		},
		"40509": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"40510": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"40511": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.confirmReceive"
		},
		"40512": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.confirmReceive"
		},
		"40513": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"40514": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"40515": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"40516": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"40517": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.cancelReceive"
		},
		"40518": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.cancelReceive"
		},
		"40519": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"40520": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"40521": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"40522": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim"
		},
		"40523": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.__constructor"
		},
		"40524": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim"
		},
		"40525": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "client"
		},
		"40526": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.client"
		},
		"40527": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.list"
		},
		"40528": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.list"
		},
		"40529": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"40530": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"40531": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.retrieve"
		},
		"40532": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.retrieve"
		},
		"40533": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"40534": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"40535": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"40536": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.create"
		},
		"40537": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.create"
		},
		"40538": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "body"
		},
		"40539": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"40540": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"40541": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.cancel"
		},
		"40542": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.cancel"
		},
		"40543": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"40544": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"40545": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"40546": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.addItems"
		},
		"40547": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.addItems"
		},
		"40548": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"40549": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "body"
		},
		"40550": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"40551": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"40552": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.updateItem"
		},
		"40553": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.updateItem"
		},
		"40554": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"40555": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "actionId"
		},
		"40556": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "body"
		},
		"40557": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"40558": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"40559": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.removeItem"
		},
		"40560": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.removeItem"
		},
		"40561": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"40562": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "actionId"
		},
		"40563": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"40564": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"40565": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.addInboundItems"
		},
		"40566": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.addInboundItems"
		},
		"40567": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"40568": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "body"
		},
		"40569": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"40570": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"40571": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.updateInboundItem"
		},
		"40572": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.updateInboundItem"
		},
		"40573": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"40574": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "actionId"
		},
		"40575": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "body"
		},
		"40576": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"40577": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"40578": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.removeInboundItem"
		},
		"40579": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.removeInboundItem"
		},
		"40580": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"40581": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "actionId"
		},
		"40582": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"40583": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"40584": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.addInboundShipping"
		},
		"40585": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.addInboundShipping"
		},
		"40586": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"40587": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "body"
		},
		"40588": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"40589": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"40590": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.updateInboundShipping"
		},
		"40591": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.updateInboundShipping"
		},
		"40592": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"40593": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "actionId"
		},
		"40594": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "body"
		},
		"40595": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"40596": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"40597": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.deleteInboundShipping"
		},
		"40598": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.deleteInboundShipping"
		},
		"40599": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"40600": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "actionId"
		},
		"40601": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"40602": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"40603": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.addOutboundItems"
		},
		"40604": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.addOutboundItems"
		},
		"40605": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"40606": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "body"
		},
		"40607": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"40608": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"40609": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.updateOutboundItem"
		},
		"40610": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.updateOutboundItem"
		},
		"40611": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"40612": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "actionId"
		},
		"40613": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "body"
		},
		"40614": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"40615": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"40616": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.removeOutboundItem"
		},
		"40617": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.removeOutboundItem"
		},
		"40618": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"40619": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "actionId"
		},
		"40620": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"40621": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"40622": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.addOutboundShipping"
		},
		"40623": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.addOutboundShipping"
		},
		"40624": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"40625": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "body"
		},
		"40626": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"40627": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"40628": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.updateOutboundShipping"
		},
		"40629": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.updateOutboundShipping"
		},
		"40630": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"40631": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "actionId"
		},
		"40632": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "body"
		},
		"40633": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"40634": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"40635": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.deleteOutboundShipping"
		},
		"40636": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.deleteOutboundShipping"
		},
		"40637": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"40638": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "actionId"
		},
		"40639": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"40640": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"40641": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.request"
		},
		"40642": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.request"
		},
		"40643": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"40644": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "body"
		},
		"40645": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"40646": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"40647": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.cancelRequest"
		},
		"40648": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.cancelRequest"
		},
		"40649": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"40650": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"40651": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"40652": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange"
		},
		"40653": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.__constructor"
		},
		"40654": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange"
		},
		"40655": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "client"
		},
		"40656": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.client"
		},
		"40657": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.list"
		},
		"40658": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.list"
		},
		"40659": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"40660": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"40661": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.retrieve"
		},
		"40662": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.retrieve"
		},
		"40663": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"40664": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"40665": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"40666": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.create"
		},
		"40667": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.create"
		},
		"40668": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "body"
		},
		"40669": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"40670": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"40671": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.cancel"
		},
		"40672": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.cancel"
		},
		"40673": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"40674": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"40675": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"40676": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.addInboundItems"
		},
		"40677": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.addInboundItems"
		},
		"40678": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"40679": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "body"
		},
		"40680": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"40681": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"40682": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.updateInboundItem"
		},
		"40683": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.updateInboundItem"
		},
		"40684": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"40685": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "actionId"
		},
		"40686": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "body"
		},
		"40687": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"40688": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"40689": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.removeInboundItem"
		},
		"40690": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.removeInboundItem"
		},
		"40691": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"40692": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "actionId"
		},
		"40693": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"40694": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"40695": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.addInboundShipping"
		},
		"40696": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.addInboundShipping"
		},
		"40697": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"40698": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "body"
		},
		"40699": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"40700": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"40701": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.updateInboundShipping"
		},
		"40702": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.updateInboundShipping"
		},
		"40703": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"40704": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "actionId"
		},
		"40705": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "body"
		},
		"40706": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"40707": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"40708": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.deleteInboundShipping"
		},
		"40709": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.deleteInboundShipping"
		},
		"40710": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"40711": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "actionId"
		},
		"40712": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"40713": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"40714": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.addOutboundItems"
		},
		"40715": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.addOutboundItems"
		},
		"40716": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"40717": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "body"
		},
		"40718": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"40719": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"40720": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.updateOutboundItem"
		},
		"40721": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.updateOutboundItem"
		},
		"40722": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"40723": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "actionId"
		},
		"40724": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "body"
		},
		"40725": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"40726": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"40727": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.removeOutboundItem"
		},
		"40728": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.removeOutboundItem"
		},
		"40729": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"40730": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "actionId"
		},
		"40731": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"40732": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"40733": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.addOutboundShipping"
		},
		"40734": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.addOutboundShipping"
		},
		"40735": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"40736": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "body"
		},
		"40737": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"40738": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"40739": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.updateOutboundShipping"
		},
		"40740": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.updateOutboundShipping"
		},
		"40741": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"40742": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "actionId"
		},
		"40743": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "body"
		},
		"40744": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"40745": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"40746": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.deleteOutboundShipping"
		},
		"40747": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.deleteOutboundShipping"
		},
		"40748": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"40749": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "actionId"
		},
		"40750": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"40751": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"40752": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.request"
		},
		"40753": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.request"
		},
		"40754": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"40755": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "body"
		},
		"40756": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"40757": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"40758": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.cancelRequest"
		},
		"40759": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.cancelRequest"
		},
		"40760": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"40761": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"40762": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"40763": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate"
		},
		"40764": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate.__constructor"
		},
		"40765": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate"
		},
		"40766": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "client"
		},
		"40767": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate.client"
		},
		"40768": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate.create"
		},
		"40769": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate.create"
		},
		"40770": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "body"
		},
		"40771": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "query"
		},
		"40772": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "headers"
		},
		"40773": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate.update"
		},
		"40774": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate.update"
		},
		"40775": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "id"
		},
		"40776": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "body"
		},
		"40777": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "query"
		},
		"40778": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "headers"
		},
		"40779": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate.delete"
		},
		"40780": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate.delete"
		},
		"40781": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "id"
		},
		"40782": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "headers"
		},
		"40783": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate.retrieve"
		},
		"40784": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate.retrieve"
		},
		"40785": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "id"
		},
		"40786": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "query"
		},
		"40787": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "headers"
		},
		"40788": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate.list"
		},
		"40789": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate.list"
		},
		"40790": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "query"
		},
		"40791": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "headers"
		},
		"40792": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion"
		},
		"40793": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion.__constructor"
		},
		"40794": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion"
		},
		"40795": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "client"
		},
		"40796": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion.client"
		},
		"40797": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion.create"
		},
		"40798": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion.create"
		},
		"40799": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "body"
		},
		"40800": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "query"
		},
		"40801": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "headers"
		},
		"40802": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion.delete"
		},
		"40803": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion.delete"
		},
		"40804": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "id"
		},
		"40805": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "headers"
		},
		"40806": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion.retrieve"
		},
		"40807": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion.retrieve"
		},
		"40808": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "id"
		},
		"40809": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "query"
		},
		"40810": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "headers"
		},
		"40811": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion.list"
		},
		"40812": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion.list"
		},
		"40813": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "query"
		},
		"40814": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "headers"
		},
		"40815": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "Store"
		},
		"40816": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "Store.__constructor"
		},
		"40817": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "Store"
		},
		"40818": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "client"
		},
		"40819": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "Store.client"
		},
		"40820": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "Store.retrieve"
		},
		"40821": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "Store.retrieve"
		},
		"40822": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "id"
		},
		"40823": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "query"
		},
		"40824": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "headers"
		},
		"40825": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "Store.list"
		},
		"40826": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "Store.list"
		},
		"40827": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "query"
		},
		"40828": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "headers"
		},
		"40829": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "Store.update"
		},
		"40830": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "Store.update"
		},
		"40831": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "id"
		},
		"40832": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "body"
		},
		"40833": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "query"
		},
		"40834": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "headers"
		},
		"40835": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag"
		},
		"40836": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag.__constructor"
		},
		"40837": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag"
		},
		"40838": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "client"
		},
		"40839": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag.client"
		},
		"40840": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag.create"
		},
		"40841": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag.create"
		},
		"40842": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "body"
		},
		"40843": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "query"
		},
		"40844": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "headers"
		},
		"40845": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag.update"
		},
		"40846": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag.update"
		},
		"40847": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "id"
		},
		"40848": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "body"
		},
		"40849": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "query"
		},
		"40850": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "headers"
		},
		"40851": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag.list"
		},
		"40852": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag.list"
		},
		"40853": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "query"
		},
		"40854": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "headers"
		},
		"40855": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag.retrieve"
		},
		"40856": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag.retrieve"
		},
		"40857": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "id"
		},
		"40858": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "query"
		},
		"40859": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "headers"
		},
		"40860": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag.delete"
		},
		"40861": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag.delete"
		},
		"40862": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "id"
		},
		"40863": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "headers"
		},
		"40864": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User"
		},
		"40865": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User.__constructor"
		},
		"40866": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User"
		},
		"40867": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "client"
		},
		"40868": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User.client"
		},
		"40869": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User.update"
		},
		"40870": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User.update"
		},
		"40871": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "id"
		},
		"40872": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "body"
		},
		"40873": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "query"
		},
		"40874": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "headers"
		},
		"40875": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User.list"
		},
		"40876": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User.list"
		},
		"40877": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "queryParams"
		},
		"40878": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "headers"
		},
		"40879": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User.retrieve"
		},
		"40880": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User.retrieve"
		},
		"40881": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "id"
		},
		"40882": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "query"
		},
		"40883": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "headers"
		},
		"40884": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User.delete"
		},
		"40885": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User.delete"
		},
		"40886": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "id"
		},
		"40887": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "headers"
		},
		"40888": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User.me"
		},
		"40889": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User.me"
		},
		"40890": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "query"
		},
		"40891": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "headers"
		},
		"40892": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "Currency"
		},
		"40893": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "Currency.__constructor"
		},
		"40894": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "Currency"
		},
		"40895": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "client"
		},
		"40896": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "Currency.client"
		},
		"40897": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "Currency.list"
		},
		"40898": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "Currency.list"
		},
		"40899": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "query"
		},
		"40900": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "headers"
		},
		"40901": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "Currency.retrieve"
		},
		"40902": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "Currency.retrieve"
		},
		"40903": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "code"
		},
		"40904": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "query"
		},
		"40905": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "headers"
		},
		"40906": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment"
		},
		"40907": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment.__constructor"
		},
		"40908": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment"
		},
		"40909": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "client"
		},
		"40910": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment.client"
		},
		"40911": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment.list"
		},
		"40912": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment.list"
		},
		"40913": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "query"
		},
		"40914": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "headers"
		},
		"40915": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment.listPaymentProviders"
		},
		"40916": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment.listPaymentProviders"
		},
		"40917": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "query"
		},
		"40918": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "headers"
		},
		"40919": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment.retrieve"
		},
		"40920": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment.retrieve"
		},
		"40921": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "id"
		},
		"40922": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "query"
		},
		"40923": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "headers"
		},
		"40924": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment.capture"
		},
		"40925": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment.capture"
		},
		"40926": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "id"
		},
		"40927": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "body"
		},
		"40928": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "query"
		},
		"40929": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "headers"
		},
		"40930": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment.refund"
		},
		"40931": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment.refund"
		},
		"40932": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "id"
		},
		"40933": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "body"
		},
		"40934": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "query"
		},
		"40935": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "headers"
		},
		"40936": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-variant.ts",
			"qualifiedName": "ProductVariant"
		},
		"40937": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-variant.ts",
			"qualifiedName": "ProductVariant.__constructor"
		},
		"40938": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-variant.ts",
			"qualifiedName": "ProductVariant"
		},
		"40939": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-variant.ts",
			"qualifiedName": "client"
		},
		"40940": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-variant.ts",
			"qualifiedName": "ProductVariant.client"
		},
		"40941": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-variant.ts",
			"qualifiedName": "ProductVariant.list"
		},
		"40942": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-variant.ts",
			"qualifiedName": "ProductVariant.list"
		},
		"40943": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-variant.ts",
			"qualifiedName": "query"
		},
		"40944": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-variant.ts",
			"qualifiedName": "headers"
		},
		"40945": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/refund-reasons.ts",
			"qualifiedName": "RefundReason"
		},
		"40946": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/refund-reasons.ts",
			"qualifiedName": "RefundReason.__constructor"
		},
		"40947": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/refund-reasons.ts",
			"qualifiedName": "RefundReason"
		},
		"40948": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/refund-reasons.ts",
			"qualifiedName": "client"
		},
		"40949": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/refund-reasons.ts",
			"qualifiedName": "RefundReason.client"
		},
		"40950": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/refund-reasons.ts",
			"qualifiedName": "RefundReason.list"
		},
		"40951": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/refund-reasons.ts",
			"qualifiedName": "RefundReason.list"
		},
		"40952": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/refund-reasons.ts",
			"qualifiedName": "query"
		},
		"40953": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/refund-reasons.ts",
			"qualifiedName": "headers"
		},
		"40954": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "PaymentCollection"
		},
		"40955": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "PaymentCollection.__constructor"
		},
		"40956": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "PaymentCollection"
		},
		"40957": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "client"
		},
		"40958": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "PaymentCollection.client"
		},
		"40959": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "PaymentCollection.create"
		},
		"40960": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "PaymentCollection.create"
		},
		"40961": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "body"
		},
		"40962": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "query"
		},
		"40963": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "headers"
		},
		"40964": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "PaymentCollection.delete"
		},
		"40965": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "PaymentCollection.delete"
		},
		"40966": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "id"
		},
		"40967": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "headers"
		},
		"40968": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "PaymentCollection.markAsPaid"
		},
		"40969": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "PaymentCollection.markAsPaid"
		},
		"40970": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "id"
		},
		"40971": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "body"
		},
		"40972": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "query"
		},
		"40973": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "headers"
		},
		"40974": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey"
		},
		"40975": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.__constructor"
		},
		"40976": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey"
		},
		"40977": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "client"
		},
		"40978": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.client"
		},
		"40979": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.list"
		},
		"40980": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.list"
		},
		"40981": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "queryParams"
		},
		"40982": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "headers"
		},
		"40983": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.create"
		},
		"40984": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.create"
		},
		"40985": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "body"
		},
		"40986": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "query"
		},
		"40987": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "headers"
		},
		"40988": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.revoke"
		},
		"40989": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.revoke"
		},
		"40990": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "id"
		},
		"40991": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "headers"
		},
		"40992": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.retrieve"
		},
		"40993": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.retrieve"
		},
		"40994": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "id"
		},
		"40995": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "headers"
		},
		"40996": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.update"
		},
		"40997": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.update"
		},
		"40998": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "id"
		},
		"40999": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "body"
		},
		"41000": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "query"
		},
		"41001": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "headers"
		},
		"41002": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.delete"
		},
		"41003": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.delete"
		},
		"41004": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "id"
		},
		"41005": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "headers"
		},
		"41006": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.batchSalesChannels"
		},
		"41007": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.batchSalesChannels"
		},
		"41008": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "id"
		},
		"41009": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "body"
		},
		"41010": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "headers"
		},
		"41011": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "WorkflowExecution"
		},
		"41012": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "WorkflowExecution.__constructor"
		},
		"41013": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "WorkflowExecution"
		},
		"41014": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "client"
		},
		"41015": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "WorkflowExecution.client"
		},
		"41016": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "WorkflowExecution.list"
		},
		"41017": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "WorkflowExecution.list"
		},
		"41018": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "queryParams"
		},
		"41019": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "headers"
		},
		"41020": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "WorkflowExecution.retrieve"
		},
		"41021": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "WorkflowExecution.retrieve"
		},
		"41022": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "id"
		},
		"41023": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "headers"
		},
		"41024": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation"
		},
		"41025": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation.__constructor"
		},
		"41026": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation"
		},
		"41027": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "client"
		},
		"41028": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation.client"
		},
		"41029": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation.retrieve"
		},
		"41030": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation.retrieve"
		},
		"41031": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "id"
		},
		"41032": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "query"
		},
		"41033": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "headers"
		},
		"41034": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation.list"
		},
		"41035": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation.list"
		},
		"41036": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "query"
		},
		"41037": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "headers"
		},
		"41038": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation.create"
		},
		"41039": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation.create"
		},
		"41040": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "body"
		},
		"41041": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "query"
		},
		"41042": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "headers"
		},
		"41043": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation.update"
		},
		"41044": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation.update"
		},
		"41045": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "id"
		},
		"41046": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "body"
		},
		"41047": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "query"
		},
		"41048": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "headers"
		},
		"41049": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation.delete"
		},
		"41050": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation.delete"
		},
		"41051": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "id"
		},
		"41052": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "headers"
		},
		"41053": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup"
		},
		"41054": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.__constructor"
		},
		"41055": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup"
		},
		"41056": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "client"
		},
		"41057": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.client"
		},
		"41058": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.retrieve"
		},
		"41059": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.retrieve"
		},
		"41060": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "id"
		},
		"41061": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "query"
		},
		"41062": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "headers"
		},
		"41063": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.list"
		},
		"41064": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.list"
		},
		"41065": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "query"
		},
		"41066": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "headers"
		},
		"41067": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.create"
		},
		"41068": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.create"
		},
		"41069": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "body"
		},
		"41070": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "query"
		},
		"41071": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "headers"
		},
		"41072": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.update"
		},
		"41073": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.update"
		},
		"41074": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "id"
		},
		"41075": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "body"
		},
		"41076": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "query"
		},
		"41077": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "headers"
		},
		"41078": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.delete"
		},
		"41079": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.delete"
		},
		"41080": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "id"
		},
		"41081": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "headers"
		},
		"41082": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.batchCustomers"
		},
		"41083": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.batchCustomers"
		},
		"41084": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "id"
		},
		"41085": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "body"
		},
		"41086": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "headers"
		},
		"41087": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion"
		},
		"41088": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.__constructor"
		},
		"41089": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion"
		},
		"41090": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "client"
		},
		"41091": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.client"
		},
		"41092": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.retrieve"
		},
		"41093": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.retrieve"
		},
		"41094": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "id"
		},
		"41095": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "query"
		},
		"41096": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "headers"
		},
		"41097": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.list"
		},
		"41098": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.list"
		},
		"41099": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "query"
		},
		"41100": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "headers"
		},
		"41101": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.create"
		},
		"41102": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.create"
		},
		"41103": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "payload"
		},
		"41104": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "headers"
		},
		"41105": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.update"
		},
		"41106": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.update"
		},
		"41107": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "id"
		},
		"41108": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "payload"
		},
		"41109": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "headers"
		},
		"41110": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.delete"
		},
		"41111": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.delete"
		},
		"41112": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "id"
		},
		"41113": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "headers"
		},
		"41114": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.addRules"
		},
		"41115": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.addRules"
		},
		"41116": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "id"
		},
		"41117": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "ruleType"
		},
		"41118": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "payload"
		},
		"41119": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "headers"
		},
		"41120": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.updateRules"
		},
		"41121": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.updateRules"
		},
		"41122": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "id"
		},
		"41123": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "ruleType"
		},
		"41124": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "payload"
		},
		"41125": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "headers"
		},
		"41126": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.removeRules"
		},
		"41127": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.removeRules"
		},
		"41128": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "id"
		},
		"41129": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "ruleType"
		},
		"41130": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "payload"
		},
		"41131": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "headers"
		},
		"41132": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.listRules"
		},
		"41133": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.listRules"
		},
		"41134": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "id"
		},
		"41135": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "ruleType"
		},
		"41136": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "query"
		},
		"41137": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "headers"
		},
		"41138": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.listRuleAttributes"
		},
		"41139": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.listRuleAttributes"
		},
		"41140": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "ruleType"
		},
		"41141": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "promotionType"
		},
		"41142": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "headers"
		},
		"41143": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.listRuleValues"
		},
		"41144": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.listRuleValues"
		},
		"41145": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "ruleType"
		},
		"41146": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "ruleValue"
		},
		"41147": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "query"
		},
		"41148": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "headers"
		},
		"41149": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign"
		},
		"41150": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.__constructor"
		},
		"41151": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign"
		},
		"41152": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "client"
		},
		"41153": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.client"
		},
		"41154": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.retrieve"
		},
		"41155": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.retrieve"
		},
		"41156": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "id"
		},
		"41157": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "query"
		},
		"41158": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "headers"
		},
		"41159": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.list"
		},
		"41160": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.list"
		},
		"41161": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "query"
		},
		"41162": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "headers"
		},
		"41163": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.create"
		},
		"41164": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.create"
		},
		"41165": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "payload"
		},
		"41166": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "headers"
		},
		"41167": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.update"
		},
		"41168": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.update"
		},
		"41169": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "id"
		},
		"41170": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "payload"
		},
		"41171": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "headers"
		},
		"41172": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.delete"
		},
		"41173": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.delete"
		},
		"41174": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "id"
		},
		"41175": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "headers"
		},
		"41176": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.batchPromotions"
		},
		"41177": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.batchPromotions"
		},
		"41178": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "id"
		},
		"41179": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "payload"
		},
		"41180": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "headers"
		},
		"41181": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client"
		},
		"41182": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.__constructor"
		},
		"41183": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client"
		},
		"41184": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "config"
		},
		"41185": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.fetch_"
		},
		"41186": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.config"
		},
		"41187": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.logger"
		},
		"41188": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.DEFAULT_JWT_STORAGE_KEY"
		},
		"41189": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.token"
		},
		"41190": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.fetch"
		},
		"41191": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.fetch"
		},
		"41192": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "T"
		},
		"41193": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "input"
		},
		"41194": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "init"
		},
		"41195": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.fetchStream"
		},
		"41196": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.fetchStream"
		},
		"41197": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "input"
		},
		"41198": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "init"
		},
		"41199": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.setToken"
		},
		"41200": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.setToken"
		},
		"41201": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "token"
		},
		"41202": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.clearToken"
		},
		"41203": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.clearToken"
		},
		"41204": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.clearToken_"
		},
		"41205": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.clearToken_"
		},
		"41206": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.initClient"
		},
		"41207": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.initClient"
		},
		"41208": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.getApiKeyHeader_"
		},
		"41209": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.getApiKeyHeader_"
		},
		"41210": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"41211": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "__type"
		},
		"41212": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "__type.Authorization"
		},
		"41213": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.getPublishableKeyHeader_"
		},
		"41214": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.getPublishableKeyHeader_"
		},
		"41215": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"41216": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "__type"
		},
		"41217": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "__type.x-publishable-api-key"
		},
		"41218": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.getJwtHeader_"
		},
		"41219": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.getJwtHeader_"
		},
		"41220": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"41221": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "__type"
		},
		"41222": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "__type.Authorization"
		},
		"41223": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.setToken_"
		},
		"41224": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.setToken_"
		},
		"41225": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "token"
		},
		"41226": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.getToken_"
		},
		"41227": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.getToken_"
		},
		"41228": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.getTokenStorageInfo_"
		},
		"41229": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.getTokenStorageInfo_"
		},
		"41230": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "__object"
		},
		"41231": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "__object.storageMethod"
		},
		"41232": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "__object.storageKey"
		},
		"41233": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.throwError_"
		},
		"41234": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.throwError_"
		},
		"41235": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "message"
		},
		"41236": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "ClientHeaders"
		},
		"41237": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"41238": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.tags"
		},
		"41239": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "Config"
		},
		"41240": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"41241": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.baseUrl"
		},
		"41242": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.globalHeaders"
		},
		"41243": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.publishableKey"
		},
		"41244": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.apiKey"
		},
		"41245": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.auth"
		},
		"41246": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"41247": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.type"
		},
		"41248": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.jwtTokenStorageKey"
		},
		"41249": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.jwtTokenStorageMethod"
		},
		"41250": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.fetchCredentials"
		},
		"41251": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.storage"
		},
		"41252": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.logger"
		},
		"41253": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.debug"
		},
		"41254": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "ClientFetch"
		},
		"41255": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"41256": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"41257": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "input"
		},
		"41258": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "init"
		},
		"41259": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "Logger"
		},
		"41260": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"41261": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.error"
		},
		"41262": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"41263": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"41264": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "messages"
		},
		"41265": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.warn"
		},
		"41266": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"41267": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"41268": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "messages"
		},
		"41269": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.info"
		},
		"41270": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"41271": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"41272": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "messages"
		},
		"41273": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.debug"
		},
		"41274": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"41275": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"41276": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "messages"
		},
		"41277": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "FetchArgs"
		},
		"41278": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"41279": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"41280": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.headers"
		},
		"41281": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.body"
		},
		"41282": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "FetchStreamResponse"
		},
		"41283": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "FetchStreamResponse.stream"
		},
		"41284": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "FetchStreamResponse.abort"
		},
		"41285": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"41286": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"41287": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "CustomStorage"
		},
		"41288": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "CustomStorage.getItem"
		},
		"41289": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "CustomStorage.getItem"
		},
		"41290": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "key"
		},
		"41291": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "CustomStorage.setItem"
		},
		"41292": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "CustomStorage.setItem"
		},
		"41293": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "key"
		},
		"41294": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "value"
		},
		"41295": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "CustomStorage.removeItem"
		},
		"41296": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "CustomStorage.removeItem"
		},
		"41297": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "key"
		},
		"41298": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "FetchInput"
		},
		"41299": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "ServerSentEventMessage"
		},
		"41300": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "ServerSentEventMessage.comment"
		},
		"41301": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "ServerSentEventMessage.event"
		},
		"41302": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "ServerSentEventMessage.data"
		},
		"41303": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "ServerSentEventMessage.id"
		},
		"41304": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "ServerSentEventMessage.retry"
		},
		"41305": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "Awaitable"
		},
		"41306": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "T"
		},
		"41307": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "FetchParams"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"2": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"3": "../../../../packages/core/js-sdk/src/store/index.ts"
		},
		"reflections": {
			"1": 39175,
			"2": 39222,
			"3": 39267
		}
	}
}
